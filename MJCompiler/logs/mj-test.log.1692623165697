INFO  23:33:57,666 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:33:57,724 - #2 program
INFO  23:33:57,724 - #27 MJProgram
INFO  23:33:57,724 - #23 const
INFO  23:33:57,726 - #27 int
INFO  23:33:57,726 - #27 nula
INFO  23:33:57,727 - #12 =
INFO  23:33:57,727 - #26 0
INFO  23:33:57,727 - #5 ;
INFO  23:33:57,727 - #23 const
INFO  23:33:57,728 - #27 int
INFO  23:33:57,728 - #27 jedan
INFO  23:33:57,728 - #12 =
INFO  23:33:57,728 - #26 1
INFO  23:33:57,728 - #5 ;
INFO  23:33:57,728 - #23 const
INFO  23:33:57,728 - #27 int
INFO  23:33:57,728 - #27 pet
INFO  23:33:57,728 - #12 =
INFO  23:33:57,728 - #26 5
INFO  23:33:57,729 - #5 ;
INFO  23:33:57,729 - #23 const
INFO  23:33:57,729 - #27 char
INFO  23:33:57,729 - #27 pet1
INFO  23:33:57,729 - #12 =
INFO  23:33:57,729 - #28 c
INFO  23:33:57,729 - #5 ;
INFO  23:33:57,729 - #27 int
INFO  23:33:57,730 - #27 niz
INFO  23:33:57,730 - #20 [
INFO  23:33:57,730 - #21 ]
INFO  23:33:57,730 - #8 ,
INFO  23:33:57,730 - #27 niz2
INFO  23:33:57,730 - #20 [
INFO  23:33:57,730 - #21 ]
INFO  23:33:57,730 - #8 ,
INFO  23:33:57,730 - #27 a
INFO  23:33:57,730 - #8 ,
INFO  23:33:57,730 - #27 b
INFO  23:33:57,730 - #5 ;
INFO  23:33:57,731 - #27 char
INFO  23:33:57,731 - #27 nizch
INFO  23:33:57,731 - #20 [
INFO  23:33:57,731 - #21 ]
INFO  23:33:57,731 - #8 ,
INFO  23:33:57,731 - #27 c
INFO  23:33:57,731 - #5 ;
INFO  23:33:57,731 - #27 bool
INFO  23:33:57,732 - #27 s1
INFO  23:33:57,732 - #5 ;
INFO  23:33:57,732 - #27 bool
INFO  23:33:57,732 - #27 nizbool
INFO  23:33:57,732 - #20 [
INFO  23:33:57,732 - #21 ]
INFO  23:33:57,732 - #5 ;
INFO  23:33:57,732 - #3 {
INFO  23:33:57,732 - #13 void
INFO  23:33:57,733 - #27 main
INFO  23:33:57,733 - #6 (
INFO  23:33:57,733 - #7 )
INFO  23:33:57,733 - #27 int
INFO  23:33:57,733 - #27 bodovi
INFO  23:33:57,734 - #5 ;
INFO  23:33:57,734 - #27 bool
INFO  23:33:57,734 - #27 bt
INFO  23:33:57,734 - #5 ;
INFO  23:33:57,734 - #27 int
INFO  23:33:57,734 - #27 s
INFO  23:33:57,734 - #5 ;
INFO  23:33:57,734 - #3 {
INFO  23:33:57,734 - #27 nizbool
INFO  23:33:57,735 - #12 =
INFO  23:33:57,735 - #32 new
INFO  23:33:57,736 - #27 bool
INFO  23:33:57,736 - #20 [
INFO  23:33:57,736 - #26 3
INFO  23:33:57,736 - #21 ]
INFO  23:33:57,736 - #5 ;
INFO  23:33:57,736 - #27 nizbool
INFO  23:33:57,737 - #20 [
INFO  23:33:57,737 - #26 0
INFO  23:33:57,737 - #21 ]
INFO  23:33:57,737 - #12 =
INFO  23:33:57,737 - #29 true
INFO  23:33:57,737 - #5 ;
INFO  23:33:57,737 - #27 nizbool
INFO  23:33:57,737 - #20 [
INFO  23:33:57,738 - #26 1
INFO  23:33:57,738 - #21 ]
INFO  23:33:57,738 - #12 =
INFO  23:33:57,738 - #29 false
INFO  23:33:57,738 - #5 ;
INFO  23:33:57,738 - #27 nizbool
INFO  23:33:57,738 - #20 [
INFO  23:33:57,738 - #26 2
INFO  23:33:57,738 - #21 ]
INFO  23:33:57,738 - #12 =
INFO  23:33:57,738 - #29 true
INFO  23:33:57,738 - #5 ;
INFO  23:33:57,738 - #27 nizbool
INFO  23:33:57,738 - #24 .
INFO  23:33:57,739 - #5 ;
INFO  23:33:57,739 - #4 }
INFO  23:33:57,739 - #4 }
INFO  23:33:57,748 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:33:57,748 - ===================================
INFO  23:33:57,770 - Deklarisana je konsanta int nula = 0
INFO  23:33:57,770 - Deklarisana je konsanta int jedan = 1
INFO  23:33:57,770 - Deklarisana je konsanta int pet = 5
INFO  23:33:57,771 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:33:57,771 - Deklarisan je niz niz
INFO  23:33:57,771 - Deklarisan je niz niz2
INFO  23:33:57,771 - Deklarisana promenljiva a
INFO  23:33:57,771 - Deklarisana promenljiva b
INFO  23:33:57,771 - Deklarisan je niz nizch
INFO  23:33:57,771 - Deklarisana promenljiva c
INFO  23:33:57,771 - Deklarisana promenljiva s1
INFO  23:33:57,771 - Deklarisan je niz nizbool
INFO  23:33:57,771 - Obradjuje se funkcija main na liniji 13
INFO  23:33:57,771 - Deklarisana promenljiva bodovi
INFO  23:33:57,772 - Deklarisana promenljiva bt
INFO  23:33:57,772 - Deklarisana promenljiva s
ERROR 23:33:57,772 - Greska na liniji 20 : funkcija NEW mora da ide uz INT.
INFO  23:34:59,324 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:34:59,379 - #2 program
INFO  23:34:59,379 - #27 MJProgram
INFO  23:34:59,379 - #23 const
INFO  23:34:59,381 - #27 int
INFO  23:34:59,382 - #27 nula
INFO  23:34:59,382 - #12 =
INFO  23:34:59,383 - #26 0
INFO  23:34:59,383 - #5 ;
INFO  23:34:59,383 - #23 const
INFO  23:34:59,383 - #27 int
INFO  23:34:59,383 - #27 jedan
INFO  23:34:59,383 - #12 =
INFO  23:34:59,383 - #26 1
INFO  23:34:59,383 - #5 ;
INFO  23:34:59,383 - #23 const
INFO  23:34:59,383 - #27 int
INFO  23:34:59,384 - #27 pet
INFO  23:34:59,384 - #12 =
INFO  23:34:59,384 - #26 5
INFO  23:34:59,384 - #5 ;
INFO  23:34:59,384 - #23 const
INFO  23:34:59,384 - #27 char
INFO  23:34:59,384 - #27 pet1
INFO  23:34:59,384 - #12 =
INFO  23:34:59,384 - #28 c
INFO  23:34:59,384 - #5 ;
INFO  23:34:59,384 - #27 int
INFO  23:34:59,385 - #27 niz
INFO  23:34:59,385 - #20 [
INFO  23:34:59,385 - #21 ]
INFO  23:34:59,385 - #8 ,
INFO  23:34:59,385 - #27 niz2
INFO  23:34:59,385 - #20 [
INFO  23:34:59,385 - #21 ]
INFO  23:34:59,385 - #8 ,
INFO  23:34:59,385 - #27 a
INFO  23:34:59,385 - #8 ,
INFO  23:34:59,386 - #27 b
INFO  23:34:59,386 - #5 ;
INFO  23:34:59,386 - #27 char
INFO  23:34:59,386 - #27 nizch
INFO  23:34:59,386 - #20 [
INFO  23:34:59,386 - #21 ]
INFO  23:34:59,386 - #8 ,
INFO  23:34:59,386 - #27 c
INFO  23:34:59,387 - #5 ;
INFO  23:34:59,387 - #27 bool
INFO  23:34:59,387 - #27 s1
INFO  23:34:59,387 - #5 ;
INFO  23:34:59,387 - #27 bool
INFO  23:34:59,387 - #27 nizbool
INFO  23:34:59,387 - #20 [
INFO  23:34:59,387 - #21 ]
INFO  23:34:59,387 - #5 ;
INFO  23:34:59,387 - #3 {
INFO  23:34:59,387 - #13 void
INFO  23:34:59,388 - #27 main
INFO  23:34:59,389 - #6 (
INFO  23:34:59,389 - #7 )
INFO  23:34:59,389 - #27 int
INFO  23:34:59,389 - #27 bodovi
INFO  23:34:59,389 - #5 ;
INFO  23:34:59,389 - #27 bool
INFO  23:34:59,389 - #27 bt
INFO  23:34:59,389 - #5 ;
INFO  23:34:59,389 - #27 int
INFO  23:34:59,389 - #27 s
INFO  23:34:59,389 - #5 ;
INFO  23:34:59,390 - #3 {
INFO  23:34:59,390 - #27 nizbool
INFO  23:34:59,390 - #12 =
INFO  23:34:59,391 - #32 new
INFO  23:34:59,391 - #27 bool
INFO  23:34:59,391 - #20 [
INFO  23:34:59,391 - #26 3
INFO  23:34:59,391 - #21 ]
INFO  23:34:59,391 - #5 ;
INFO  23:34:59,391 - #27 nizbool
INFO  23:34:59,392 - #20 [
INFO  23:34:59,392 - #26 0
INFO  23:34:59,392 - #21 ]
INFO  23:34:59,392 - #12 =
INFO  23:34:59,392 - #29 true
INFO  23:34:59,392 - #5 ;
INFO  23:34:59,392 - #27 nizbool
INFO  23:34:59,392 - #20 [
INFO  23:34:59,393 - #26 1
INFO  23:34:59,393 - #21 ]
INFO  23:34:59,393 - #12 =
INFO  23:34:59,393 - #29 false
INFO  23:34:59,393 - #5 ;
INFO  23:34:59,393 - #27 nizbool
INFO  23:34:59,393 - #20 [
INFO  23:34:59,393 - #26 2
INFO  23:34:59,393 - #21 ]
INFO  23:34:59,393 - #12 =
INFO  23:34:59,393 - #29 true
INFO  23:34:59,393 - #5 ;
INFO  23:34:59,394 - #27 nizbool
INFO  23:34:59,394 - #24 .
INFO  23:34:59,394 - #5 ;
INFO  23:34:59,394 - #4 }
INFO  23:34:59,394 - #4 }
INFO  23:34:59,403 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:34:59,404 - ===================================
INFO  23:34:59,432 - Deklarisana je konsanta int nula = 0
INFO  23:34:59,432 - Deklarisana je konsanta int jedan = 1
INFO  23:34:59,432 - Deklarisana je konsanta int pet = 5
INFO  23:34:59,432 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:34:59,432 - Deklarisan je niz niz
INFO  23:34:59,432 - Deklarisan je niz niz2
INFO  23:34:59,432 - Deklarisana promenljiva a
INFO  23:34:59,432 - Deklarisana promenljiva b
INFO  23:34:59,432 - Deklarisan je niz nizch
INFO  23:34:59,432 - Deklarisana promenljiva c
INFO  23:34:59,433 - Deklarisana promenljiva s1
INFO  23:34:59,433 - Deklarisan je niz nizbool
INFO  23:34:59,433 - Obradjuje se funkcija main na liniji 13
INFO  23:34:59,433 - Deklarisana promenljiva bodovi
INFO  23:34:59,433 - Deklarisana promenljiva bt
INFO  23:34:59,433 - Deklarisana promenljiva s
ERROR 23:35:10,758 - Greska na liniji 20 :  nekompatibilni tipovi.
INFO  23:35:58,709 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:35:58,778 - #2 program
INFO  23:35:58,779 - #27 MJProgram
INFO  23:35:58,779 - #23 const
INFO  23:35:58,781 - #27 int
INFO  23:35:58,781 - #27 nula
INFO  23:35:58,782 - #12 =
INFO  23:35:58,782 - #26 0
INFO  23:35:58,782 - #5 ;
INFO  23:35:58,783 - #23 const
INFO  23:35:58,783 - #27 int
INFO  23:35:58,783 - #27 jedan
INFO  23:35:58,783 - #12 =
INFO  23:35:58,783 - #26 1
INFO  23:35:58,783 - #5 ;
INFO  23:35:58,784 - #23 const
INFO  23:35:58,784 - #27 int
INFO  23:35:58,784 - #27 pet
INFO  23:35:58,784 - #12 =
INFO  23:35:58,784 - #26 5
INFO  23:35:58,784 - #5 ;
INFO  23:35:58,784 - #23 const
INFO  23:35:58,784 - #27 char
INFO  23:35:58,784 - #27 pet1
INFO  23:35:58,785 - #12 =
INFO  23:35:58,785 - #28 c
INFO  23:35:58,785 - #5 ;
INFO  23:35:58,786 - #27 int
INFO  23:35:58,786 - #27 niz
INFO  23:35:58,786 - #20 [
INFO  23:35:58,786 - #21 ]
INFO  23:35:58,786 - #8 ,
INFO  23:35:58,786 - #27 niz2
INFO  23:35:58,786 - #20 [
INFO  23:35:58,786 - #21 ]
INFO  23:35:58,786 - #8 ,
INFO  23:35:58,786 - #27 a
INFO  23:35:58,786 - #8 ,
INFO  23:35:58,787 - #27 b
INFO  23:35:58,787 - #5 ;
INFO  23:35:58,787 - #27 char
INFO  23:35:58,787 - #27 nizch
INFO  23:35:58,787 - #20 [
INFO  23:35:58,787 - #21 ]
INFO  23:35:58,787 - #8 ,
INFO  23:35:58,788 - #27 c
INFO  23:35:58,788 - #5 ;
INFO  23:35:58,788 - #27 bool
INFO  23:35:58,788 - #27 s1
INFO  23:35:58,788 - #5 ;
INFO  23:35:58,788 - #27 bool
INFO  23:35:58,788 - #27 nizbool
INFO  23:35:58,788 - #20 [
INFO  23:35:58,788 - #21 ]
INFO  23:35:58,788 - #5 ;
INFO  23:35:58,788 - #3 {
INFO  23:35:58,788 - #13 void
INFO  23:35:58,789 - #27 main
INFO  23:35:58,790 - #6 (
INFO  23:35:58,790 - #7 )
INFO  23:35:58,790 - #27 int
INFO  23:35:58,790 - #27 bodovi
INFO  23:35:58,790 - #5 ;
INFO  23:35:58,790 - #27 bool
INFO  23:35:58,790 - #27 bt
INFO  23:35:58,790 - #5 ;
INFO  23:35:58,790 - #27 int
INFO  23:35:58,790 - #27 s
INFO  23:35:58,791 - #5 ;
INFO  23:35:58,791 - #3 {
INFO  23:35:58,791 - #27 nizbool
INFO  23:35:58,792 - #12 =
INFO  23:35:58,792 - #32 new
INFO  23:35:58,792 - #27 bool
INFO  23:35:58,792 - #20 [
INFO  23:35:58,792 - #26 3
INFO  23:35:58,792 - #21 ]
INFO  23:35:58,792 - #5 ;
INFO  23:35:58,792 - #27 nizbool
INFO  23:35:58,793 - #20 [
INFO  23:35:58,793 - #26 0
INFO  23:35:58,793 - #21 ]
INFO  23:35:58,793 - #12 =
INFO  23:35:58,793 - #29 true
INFO  23:35:58,793 - #5 ;
INFO  23:35:58,793 - #27 nizbool
INFO  23:35:58,793 - #20 [
INFO  23:35:58,794 - #26 1
INFO  23:35:58,794 - #21 ]
INFO  23:35:58,794 - #12 =
INFO  23:35:58,794 - #29 false
INFO  23:35:58,794 - #5 ;
INFO  23:35:58,794 - #27 nizbool
INFO  23:35:58,794 - #20 [
INFO  23:35:58,794 - #26 2
INFO  23:35:58,794 - #21 ]
INFO  23:35:58,794 - #12 =
INFO  23:35:58,794 - #29 true
INFO  23:35:58,794 - #5 ;
INFO  23:35:58,794 - #27 nizbool
INFO  23:35:58,794 - #24 .
INFO  23:35:58,794 - #5 ;
INFO  23:35:58,795 - #4 }
INFO  23:35:58,795 - #4 }
INFO  23:35:58,808 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:35:58,808 - ===================================
INFO  23:35:58,837 - Deklarisana je konsanta int nula = 0
INFO  23:35:58,837 - Deklarisana je konsanta int jedan = 1
INFO  23:35:58,837 - Deklarisana je konsanta int pet = 5
INFO  23:35:58,838 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:35:58,838 - Deklarisan je niz niz
INFO  23:35:58,838 - Deklarisan je niz niz2
INFO  23:35:58,838 - Deklarisana promenljiva a
INFO  23:35:58,838 - Deklarisana promenljiva b
INFO  23:35:58,838 - Deklarisan je niz nizch
INFO  23:35:58,838 - Deklarisana promenljiva c
INFO  23:35:58,838 - Deklarisana promenljiva s1
INFO  23:35:58,839 - Deklarisan je niz nizbool
INFO  23:35:58,839 - Obradjuje se funkcija main na liniji 13
INFO  23:35:58,839 - Deklarisana promenljiva bodovi
INFO  23:35:58,839 - Deklarisana promenljiva bt
INFO  23:35:58,839 - Deklarisana promenljiva s
INFO  23:36:46,904 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:36:46,980 - #2 program
INFO  23:36:46,980 - #27 MJProgram
INFO  23:36:46,980 - #23 const
INFO  23:36:46,983 - #27 int
INFO  23:36:46,983 - #27 nula
INFO  23:36:46,984 - #12 =
INFO  23:36:46,985 - #26 0
INFO  23:36:46,985 - #5 ;
INFO  23:36:46,985 - #23 const
INFO  23:36:46,985 - #27 int
INFO  23:36:46,985 - #27 jedan
INFO  23:36:46,986 - #12 =
INFO  23:36:46,986 - #26 1
INFO  23:36:46,986 - #5 ;
INFO  23:36:46,986 - #23 const
INFO  23:36:46,986 - #27 int
INFO  23:36:46,986 - #27 pet
INFO  23:36:46,986 - #12 =
INFO  23:36:46,986 - #26 5
INFO  23:36:46,986 - #5 ;
INFO  23:36:46,986 - #23 const
INFO  23:36:46,986 - #27 char
INFO  23:36:46,986 - #27 pet1
INFO  23:36:46,986 - #12 =
INFO  23:36:46,987 - #28 c
INFO  23:36:46,987 - #5 ;
INFO  23:36:46,987 - #27 int
INFO  23:36:46,987 - #27 niz
INFO  23:36:46,987 - #20 [
INFO  23:36:46,987 - #21 ]
INFO  23:36:46,987 - #8 ,
INFO  23:36:46,988 - #27 niz2
INFO  23:36:46,988 - #20 [
INFO  23:36:46,988 - #21 ]
INFO  23:36:46,988 - #8 ,
INFO  23:36:46,988 - #27 a
INFO  23:36:46,988 - #8 ,
INFO  23:36:46,988 - #27 b
INFO  23:36:46,988 - #5 ;
INFO  23:36:46,989 - #27 char
INFO  23:36:46,989 - #27 nizch
INFO  23:36:46,989 - #20 [
INFO  23:36:46,989 - #21 ]
INFO  23:36:46,989 - #8 ,
INFO  23:36:46,989 - #27 c
INFO  23:36:46,989 - #5 ;
INFO  23:36:46,989 - #27 bool
INFO  23:36:46,990 - #27 s1
INFO  23:36:46,990 - #5 ;
INFO  23:36:46,990 - #27 bool
INFO  23:36:46,990 - #27 nizbool
INFO  23:36:46,990 - #20 [
INFO  23:36:46,990 - #21 ]
INFO  23:36:46,990 - #5 ;
INFO  23:36:46,990 - #3 {
INFO  23:36:46,990 - #13 void
INFO  23:36:46,991 - #27 main
INFO  23:36:46,992 - #6 (
INFO  23:36:46,992 - #7 )
INFO  23:36:46,992 - #27 int
INFO  23:36:46,992 - #27 bodovi
INFO  23:36:46,992 - #5 ;
INFO  23:36:46,992 - #27 bool
INFO  23:36:46,993 - #27 bt
INFO  23:36:46,993 - #5 ;
INFO  23:36:46,993 - #27 int
INFO  23:36:46,993 - #27 s
INFO  23:36:46,993 - #5 ;
INFO  23:36:46,993 - #3 {
INFO  23:36:46,993 - #27 nizbool
INFO  23:36:46,994 - #12 =
INFO  23:36:46,995 - #32 new
INFO  23:36:46,995 - #27 bool
INFO  23:36:46,995 - #20 [
INFO  23:36:46,995 - #26 3
INFO  23:36:46,995 - #21 ]
INFO  23:36:46,996 - #5 ;
INFO  23:36:46,996 - #27 nizbool
INFO  23:36:46,996 - #20 [
INFO  23:36:46,996 - #26 0
INFO  23:36:46,997 - #21 ]
INFO  23:36:46,997 - #12 =
INFO  23:36:46,997 - #29 true
INFO  23:36:46,997 - #5 ;
INFO  23:36:46,997 - #27 nizbool
INFO  23:36:46,997 - #20 [
INFO  23:36:46,997 - #26 1
INFO  23:36:46,997 - #21 ]
INFO  23:36:46,997 - #12 =
INFO  23:36:46,998 - #29 false
INFO  23:36:46,998 - #5 ;
INFO  23:36:46,998 - #27 nizbool
INFO  23:36:46,998 - #20 [
INFO  23:36:46,998 - #26 2
INFO  23:36:46,998 - #21 ]
INFO  23:36:46,998 - #12 =
INFO  23:36:46,998 - #29 true
INFO  23:36:46,998 - #5 ;
INFO  23:36:46,998 - #27 nizbool
INFO  23:36:46,999 - #24 .
INFO  23:36:46,999 - #5 ;
INFO  23:36:46,999 - #4 }
INFO  23:36:46,999 - #4 }
INFO  23:36:47,012 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:36:47,013 - ===================================
INFO  23:36:47,044 - Deklarisana je konsanta int nula = 0
INFO  23:36:47,044 - Deklarisana je konsanta int jedan = 1
INFO  23:36:47,044 - Deklarisana je konsanta int pet = 5
INFO  23:36:47,045 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:36:47,045 - Deklarisan je niz niz
INFO  23:36:47,045 - Deklarisan je niz niz2
INFO  23:36:47,045 - Deklarisana promenljiva a
INFO  23:36:47,045 - Deklarisana promenljiva b
INFO  23:36:47,045 - Deklarisan je niz nizch
INFO  23:36:47,045 - Deklarisana promenljiva c
INFO  23:36:47,045 - Deklarisana promenljiva s1
INFO  23:36:47,046 - Deklarisan je niz nizbool
INFO  23:36:47,046 - Obradjuje se funkcija main na liniji 13
INFO  23:36:47,046 - Deklarisana promenljiva bodovi
INFO  23:36:47,046 - Deklarisana promenljiva bt
INFO  23:36:47,046 - Deklarisana promenljiva s
INFO  23:37:54,223 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:37:54,300 - #2 program
INFO  23:37:54,300 - #27 MJProgram
INFO  23:37:54,300 - #23 const
INFO  23:37:54,302 - #27 int
INFO  23:37:54,302 - #27 nula
INFO  23:37:54,303 - #12 =
INFO  23:37:54,304 - #26 0
INFO  23:37:54,304 - #5 ;
INFO  23:37:54,304 - #23 const
INFO  23:37:54,304 - #27 int
INFO  23:37:54,304 - #27 jedan
INFO  23:37:54,304 - #12 =
INFO  23:37:54,305 - #26 1
INFO  23:37:54,305 - #5 ;
INFO  23:37:54,305 - #23 const
INFO  23:37:54,305 - #27 int
INFO  23:37:54,305 - #27 pet
INFO  23:37:54,305 - #12 =
INFO  23:37:54,305 - #26 5
INFO  23:37:54,305 - #5 ;
INFO  23:37:54,305 - #23 const
INFO  23:37:54,305 - #27 char
INFO  23:37:54,305 - #27 pet1
INFO  23:37:54,305 - #12 =
INFO  23:37:54,305 - #28 c
INFO  23:37:54,305 - #5 ;
INFO  23:37:54,306 - #27 int
INFO  23:37:54,306 - #27 niz
INFO  23:37:54,306 - #20 [
INFO  23:37:54,306 - #21 ]
INFO  23:37:54,306 - #8 ,
INFO  23:37:54,306 - #27 niz2
INFO  23:37:54,306 - #20 [
INFO  23:37:54,306 - #21 ]
INFO  23:37:54,306 - #8 ,
INFO  23:37:54,306 - #27 a
INFO  23:37:54,306 - #8 ,
INFO  23:37:54,307 - #27 b
INFO  23:37:54,307 - #5 ;
INFO  23:37:54,307 - #27 char
INFO  23:37:54,307 - #27 nizch
INFO  23:37:54,307 - #20 [
INFO  23:37:54,307 - #21 ]
INFO  23:37:54,307 - #8 ,
INFO  23:37:54,307 - #27 c
INFO  23:37:54,308 - #5 ;
INFO  23:37:54,308 - #27 bool
INFO  23:37:54,308 - #27 s1
INFO  23:37:54,308 - #5 ;
INFO  23:37:54,308 - #27 bool
INFO  23:37:54,308 - #27 nizbool
INFO  23:37:54,308 - #20 [
INFO  23:37:54,308 - #21 ]
INFO  23:37:54,308 - #5 ;
INFO  23:37:54,308 - #3 {
INFO  23:37:54,308 - #13 void
INFO  23:37:54,310 - #27 main
INFO  23:37:54,310 - #6 (
INFO  23:37:54,310 - #7 )
INFO  23:37:54,310 - #27 int
INFO  23:37:54,310 - #27 bodovi
INFO  23:37:54,311 - #5 ;
INFO  23:37:54,311 - #27 bool
INFO  23:37:54,311 - #27 bt
INFO  23:37:54,311 - #5 ;
INFO  23:37:54,311 - #27 int
INFO  23:37:54,311 - #27 s
INFO  23:37:54,311 - #5 ;
INFO  23:37:54,311 - #3 {
INFO  23:37:54,312 - #27 nizbool
INFO  23:37:54,313 - #12 =
INFO  23:37:54,313 - #32 new
INFO  23:37:54,313 - #27 bool
INFO  23:37:54,313 - #20 [
INFO  23:37:54,313 - #26 3
INFO  23:37:54,313 - #21 ]
INFO  23:37:54,314 - #5 ;
INFO  23:37:54,314 - #27 nizbool
INFO  23:37:54,314 - #20 [
INFO  23:37:54,314 - #26 0
INFO  23:37:54,314 - #21 ]
INFO  23:37:54,314 - #12 =
INFO  23:37:54,315 - #29 true
INFO  23:37:54,315 - #5 ;
INFO  23:37:54,315 - #27 nizbool
INFO  23:37:54,315 - #20 [
INFO  23:37:54,315 - #26 1
INFO  23:37:54,315 - #21 ]
INFO  23:37:54,315 - #12 =
INFO  23:37:54,315 - #29 false
INFO  23:37:54,315 - #5 ;
INFO  23:37:54,315 - #27 nizbool
INFO  23:37:54,315 - #20 [
INFO  23:37:54,315 - #26 2
INFO  23:37:54,315 - #21 ]
INFO  23:37:54,316 - #12 =
INFO  23:37:54,316 - #29 true
INFO  23:37:54,316 - #5 ;
INFO  23:37:54,316 - #27 nizbool
INFO  23:37:54,316 - #24 .
INFO  23:37:54,316 - #5 ;
INFO  23:37:54,316 - #4 }
INFO  23:37:54,316 - #4 }
INFO  23:37:54,325 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:37:54,326 - ===================================
INFO  23:37:54,357 - Deklarisana je konsanta int nula = 0
INFO  23:37:54,357 - Deklarisana je konsanta int jedan = 1
INFO  23:37:54,357 - Deklarisana je konsanta int pet = 5
INFO  23:37:54,357 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:37:54,357 - Deklarisan je niz niz
INFO  23:37:54,357 - Deklarisan je niz niz2
INFO  23:37:54,358 - Deklarisana promenljiva a
INFO  23:37:54,358 - Deklarisana promenljiva b
INFO  23:37:54,358 - Deklarisan je niz nizch
INFO  23:37:54,358 - Deklarisana promenljiva c
INFO  23:37:54,358 - Deklarisana promenljiva s1
INFO  23:37:54,358 - Deklarisan je niz nizbool
INFO  23:37:54,358 - Obradjuje se funkcija main na liniji 13
INFO  23:37:54,358 - Deklarisana promenljiva bodovi
INFO  23:37:54,358 - Deklarisana promenljiva bt
INFO  23:37:54,358 - Deklarisana promenljiva s
INFO  23:39:33,489 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:39:33,600 - #2 program
INFO  23:39:33,600 - #27 MJProgram
INFO  23:39:33,600 - #23 const
INFO  23:39:33,607 - #27 int
INFO  23:39:33,607 - #27 nula
INFO  23:39:33,610 - #12 =
INFO  23:39:33,611 - #26 0
INFO  23:39:33,611 - #5 ;
INFO  23:39:33,612 - #23 const
INFO  23:39:33,613 - #27 int
INFO  23:39:33,613 - #27 jedan
INFO  23:39:33,613 - #12 =
INFO  23:39:33,613 - #26 1
INFO  23:39:33,614 - #5 ;
INFO  23:39:33,614 - #23 const
INFO  23:39:33,614 - #27 int
INFO  23:39:33,614 - #27 pet
INFO  23:39:33,614 - #12 =
INFO  23:39:33,614 - #26 5
INFO  23:39:33,615 - #5 ;
INFO  23:39:33,615 - #23 const
INFO  23:39:33,615 - #27 char
INFO  23:39:33,615 - #27 pet1
INFO  23:39:33,616 - #12 =
INFO  23:39:33,616 - #28 c
INFO  23:39:33,616 - #5 ;
INFO  23:39:33,617 - #27 int
INFO  23:39:33,617 - #27 niz
INFO  23:39:33,617 - #20 [
INFO  23:39:33,618 - #21 ]
INFO  23:39:33,619 - #8 ,
INFO  23:39:33,619 - #27 niz2
INFO  23:39:33,620 - #20 [
INFO  23:39:33,620 - #21 ]
INFO  23:39:33,620 - #8 ,
INFO  23:39:33,620 - #27 a
INFO  23:39:33,620 - #8 ,
INFO  23:39:33,621 - #27 b
INFO  23:39:33,621 - #5 ;
INFO  23:39:33,621 - #27 char
INFO  23:39:33,622 - #27 nizch
INFO  23:39:33,622 - #20 [
INFO  23:39:33,623 - #21 ]
INFO  23:39:33,623 - #8 ,
INFO  23:39:33,623 - #27 c
INFO  23:39:33,624 - #5 ;
INFO  23:39:33,624 - #27 bool
INFO  23:39:33,624 - #27 s1
INFO  23:39:33,625 - #5 ;
INFO  23:39:33,625 - #27 bool
INFO  23:39:33,626 - #27 nizbool
INFO  23:39:33,628 - #20 [
INFO  23:39:33,630 - #21 ]
INFO  23:39:33,630 - #5 ;
INFO  23:39:33,631 - #3 {
INFO  23:39:33,631 - #13 void
INFO  23:39:33,635 - #27 main
INFO  23:39:33,636 - #6 (
INFO  23:39:33,636 - #7 )
INFO  23:39:33,636 - #27 int
INFO  23:39:33,638 - #27 bodovi
INFO  23:39:33,639 - #5 ;
INFO  23:39:33,640 - #27 bool
INFO  23:39:33,642 - #27 bt
INFO  23:39:33,643 - #5 ;
INFO  23:39:33,643 - #27 int
INFO  23:39:33,643 - #27 s
INFO  23:39:33,643 - #5 ;
INFO  23:39:33,643 - #3 {
INFO  23:39:33,644 - #27 nizbool
INFO  23:39:33,645 - #12 =
INFO  23:39:33,646 - #32 new
INFO  23:39:33,646 - #27 bool
INFO  23:39:33,646 - #20 [
INFO  23:39:33,646 - #26 3
INFO  23:39:33,646 - #21 ]
INFO  23:39:33,647 - #5 ;
INFO  23:39:33,647 - #27 nizbool
INFO  23:39:33,648 - #20 [
INFO  23:39:33,648 - #26 0
INFO  23:39:33,649 - #21 ]
INFO  23:39:33,649 - #12 =
INFO  23:39:33,649 - #29 true
INFO  23:39:33,650 - #5 ;
INFO  23:39:33,650 - #27 nizbool
INFO  23:39:33,650 - #20 [
INFO  23:39:33,650 - #26 1
INFO  23:39:33,651 - #21 ]
INFO  23:39:33,651 - #12 =
INFO  23:39:33,651 - #29 false
INFO  23:39:33,651 - #5 ;
INFO  23:39:33,651 - #27 nizbool
INFO  23:39:33,652 - #20 [
INFO  23:39:33,652 - #26 2
INFO  23:39:33,652 - #21 ]
INFO  23:39:33,653 - #12 =
INFO  23:39:33,653 - #29 true
INFO  23:39:33,654 - #5 ;
INFO  23:39:33,654 - #27 nizbool
INFO  23:39:33,655 - #24 .
INFO  23:39:33,659 - #5 ;
INFO  23:39:33,660 - #4 }
INFO  23:39:33,660 - #4 }
INFO  23:39:33,680 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:39:33,681 - ===================================
INFO  23:39:33,757 - Deklarisana je konsanta int nula = 0
INFO  23:39:33,757 - Deklarisana je konsanta int jedan = 1
INFO  23:39:33,758 - Deklarisana je konsanta int pet = 5
INFO  23:39:33,758 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:39:33,759 - Deklarisan je niz niz
INFO  23:39:33,759 - Deklarisan je niz niz2
INFO  23:39:33,759 - Deklarisana promenljiva a
INFO  23:39:33,759 - Deklarisana promenljiva b
INFO  23:39:33,760 - Deklarisan je niz nizch
INFO  23:39:33,760 - Deklarisana promenljiva c
INFO  23:39:33,760 - Deklarisana promenljiva s1
INFO  23:39:33,761 - Deklarisan je niz nizbool
INFO  23:39:33,761 - Obradjuje se funkcija main na liniji 13
INFO  23:39:33,761 - Deklarisana promenljiva bodovi
INFO  23:39:33,762 - Deklarisana promenljiva bt
INFO  23:39:33,762 - Deklarisana promenljiva s
INFO  23:39:39,802 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:41:41,315 -  Print count calls = 0
INFO  23:41:41,315 -  Deklarisanih promenljivih ima = 12
INFO  23:41:41,316 - ===================================
INFO  23:41:46,678 - Parsiranje uspesno zavrseno!
INFO  23:42:47,755 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:42:47,800 - #2 program
INFO  23:42:47,800 - #27 MJProgram
INFO  23:42:47,800 - #23 const
INFO  23:42:47,802 - #27 int
INFO  23:42:47,802 - #27 nula
INFO  23:42:47,803 - #12 =
INFO  23:42:47,803 - #26 0
INFO  23:42:47,803 - #5 ;
INFO  23:42:47,803 - #23 const
INFO  23:42:47,804 - #27 int
INFO  23:42:47,804 - #27 jedan
INFO  23:42:47,804 - #12 =
INFO  23:42:47,804 - #26 1
INFO  23:42:47,804 - #5 ;
INFO  23:42:47,804 - #23 const
INFO  23:42:47,804 - #27 int
INFO  23:42:47,804 - #27 pet
INFO  23:42:47,805 - #12 =
INFO  23:42:47,805 - #26 5
INFO  23:42:47,805 - #5 ;
INFO  23:42:47,805 - #23 const
INFO  23:42:47,805 - #27 char
INFO  23:42:47,805 - #27 pet1
INFO  23:42:47,805 - #12 =
INFO  23:42:47,805 - #28 c
INFO  23:42:47,805 - #5 ;
INFO  23:42:47,806 - #27 int
INFO  23:42:47,806 - #27 niz
INFO  23:42:47,806 - #20 [
INFO  23:42:47,806 - #21 ]
INFO  23:42:47,806 - #8 ,
INFO  23:42:47,806 - #27 niz2
INFO  23:42:47,806 - #20 [
INFO  23:42:47,806 - #21 ]
INFO  23:42:47,806 - #8 ,
INFO  23:42:47,806 - #27 a
INFO  23:42:47,807 - #8 ,
INFO  23:42:47,807 - #27 b
INFO  23:42:47,807 - #5 ;
INFO  23:42:47,807 - #27 char
INFO  23:42:47,807 - #27 nizch
INFO  23:42:47,807 - #20 [
INFO  23:42:47,807 - #21 ]
INFO  23:42:47,808 - #8 ,
INFO  23:42:47,808 - #27 c
INFO  23:42:47,808 - #5 ;
INFO  23:42:47,808 - #27 bool
INFO  23:42:47,808 - #27 s1
INFO  23:42:47,808 - #5 ;
INFO  23:42:47,808 - #27 bool
INFO  23:42:47,808 - #27 nizbool
INFO  23:42:47,808 - #20 [
INFO  23:42:47,808 - #21 ]
INFO  23:42:47,808 - #5 ;
INFO  23:42:47,808 - #3 {
INFO  23:42:47,808 - #13 void
INFO  23:42:47,809 - #27 main
INFO  23:42:47,809 - #6 (
INFO  23:42:47,810 - #7 )
INFO  23:42:47,810 - #27 int
INFO  23:42:47,810 - #27 bodovi
INFO  23:42:47,810 - #5 ;
INFO  23:42:47,810 - #27 bool
INFO  23:42:47,810 - #27 bt
INFO  23:42:47,810 - #5 ;
INFO  23:42:47,810 - #27 int
INFO  23:42:47,810 - #27 s
INFO  23:42:47,810 - #5 ;
INFO  23:42:47,810 - #3 {
INFO  23:42:47,810 - #27 nizbool
INFO  23:42:47,811 - #12 =
INFO  23:42:47,811 - #32 new
INFO  23:42:47,811 - #27 bool
INFO  23:42:47,811 - #20 [
INFO  23:42:47,811 - #26 3
INFO  23:42:47,811 - #21 ]
INFO  23:42:47,812 - #5 ;
INFO  23:42:47,812 - #27 nizbool
INFO  23:42:47,812 - #20 [
INFO  23:42:47,812 - #26 0
INFO  23:42:47,812 - #21 ]
INFO  23:42:47,812 - #12 =
INFO  23:42:47,812 - #29 true
INFO  23:42:47,812 - #5 ;
INFO  23:42:47,813 - #27 nizbool
INFO  23:42:47,813 - #20 [
INFO  23:42:47,813 - #26 1
INFO  23:42:47,813 - #21 ]
INFO  23:42:47,813 - #12 =
INFO  23:42:47,813 - #29 false
INFO  23:42:47,813 - #5 ;
INFO  23:42:47,813 - #27 nizbool
INFO  23:42:47,813 - #20 [
INFO  23:42:47,813 - #26 2
INFO  23:42:47,813 - #21 ]
INFO  23:42:47,813 - #12 =
INFO  23:42:47,813 - #29 true
INFO  23:42:47,814 - #5 ;
INFO  23:42:47,814 - #27 nizbool
INFO  23:42:47,814 - #24 .
INFO  23:42:47,814 - #5 ;
INFO  23:42:47,814 - #4 }
INFO  23:42:47,814 - #4 }
INFO  23:42:47,820 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:42:47,821 - ===================================
INFO  23:42:47,823 - Deklarisana je konsanta int nula = 0
INFO  23:42:47,823 - Deklarisana je konsanta int jedan = 1
INFO  23:42:47,824 - Deklarisana je konsanta int pet = 5
INFO  23:42:47,824 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:42:47,824 - Deklarisan je niz niz
INFO  23:42:47,824 - Deklarisan je niz niz2
INFO  23:42:47,824 - Deklarisana promenljiva a
INFO  23:42:47,824 - Deklarisana promenljiva b
INFO  23:42:47,824 - Deklarisan je niz nizch
INFO  23:42:47,824 - Deklarisana promenljiva c
INFO  23:42:47,824 - Deklarisana promenljiva s1
INFO  23:42:47,824 - Deklarisan je niz nizbool
INFO  23:42:47,824 - Obradjuje se funkcija main na liniji 13
INFO  23:42:47,824 - Deklarisana promenljiva bodovi
INFO  23:42:47,824 - Deklarisana promenljiva bt
INFO  23:42:47,824 - Deklarisana promenljiva s
INFO  23:42:47,825 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:42:47,825 -  Print count calls = 0
INFO  23:42:47,825 -  Deklarisanih promenljivih ima = 12
INFO  23:42:47,825 - ===================================
INFO  23:42:47,832 - Parsiranje uspesno zavrseno!
INFO  23:47:24,987 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:47:25,036 - #2 program
INFO  23:47:25,036 - #27 MJProgram
INFO  23:47:25,036 - #23 const
INFO  23:47:25,038 - #27 int
INFO  23:47:25,038 - #27 nula
INFO  23:47:25,039 - #12 =
INFO  23:47:25,039 - #26 0
INFO  23:47:25,039 - #5 ;
INFO  23:47:25,039 - #23 const
INFO  23:47:25,040 - #27 int
INFO  23:47:25,040 - #27 jedan
INFO  23:47:25,040 - #12 =
INFO  23:47:25,040 - #26 1
INFO  23:47:25,040 - #5 ;
INFO  23:47:25,040 - #23 const
INFO  23:47:25,040 - #27 int
INFO  23:47:25,040 - #27 pet
INFO  23:47:25,041 - #12 =
INFO  23:47:25,041 - #26 5
INFO  23:47:25,041 - #5 ;
INFO  23:47:25,041 - #23 const
INFO  23:47:25,041 - #27 char
INFO  23:47:25,041 - #27 pet1
INFO  23:47:25,041 - #12 =
INFO  23:47:25,041 - #28 c
INFO  23:47:25,041 - #5 ;
INFO  23:47:25,042 - #27 int
INFO  23:47:25,042 - #27 niz
INFO  23:47:25,042 - #20 [
INFO  23:47:25,042 - #21 ]
INFO  23:47:25,042 - #8 ,
INFO  23:47:25,042 - #27 niz2
INFO  23:47:25,042 - #20 [
INFO  23:47:25,042 - #21 ]
INFO  23:47:25,042 - #8 ,
INFO  23:47:25,042 - #27 a
INFO  23:47:25,043 - #8 ,
INFO  23:47:25,043 - #27 b
INFO  23:47:25,043 - #5 ;
INFO  23:47:25,043 - #27 char
INFO  23:47:25,043 - #27 nizch
INFO  23:47:25,043 - #20 [
INFO  23:47:25,044 - #21 ]
INFO  23:47:25,044 - #8 ,
INFO  23:47:25,044 - #27 c
INFO  23:47:25,044 - #5 ;
INFO  23:47:25,044 - #27 bool
INFO  23:47:25,044 - #27 s1
INFO  23:47:25,044 - #5 ;
INFO  23:47:25,044 - #27 bool
INFO  23:47:25,045 - #27 nizbool
INFO  23:47:25,045 - #20 [
INFO  23:47:25,045 - #21 ]
INFO  23:47:25,045 - #5 ;
INFO  23:47:25,045 - #3 {
INFO  23:47:25,046 - #13 void
INFO  23:47:25,047 - #27 main
INFO  23:47:25,047 - #6 (
INFO  23:47:25,047 - #7 )
INFO  23:47:25,047 - #27 int
INFO  23:47:25,047 - #27 bodovi
INFO  23:47:25,047 - #5 ;
INFO  23:47:25,047 - #27 bool
INFO  23:47:25,047 - #27 bt
INFO  23:47:25,048 - #5 ;
INFO  23:47:25,048 - #27 int
INFO  23:47:25,048 - #27 s
INFO  23:47:25,048 - #5 ;
INFO  23:47:25,048 - #3 {
INFO  23:47:25,048 - #27 nizbool
INFO  23:47:25,049 - #12 =
INFO  23:47:25,049 - #32 new
INFO  23:47:25,049 - #27 bool
INFO  23:47:25,049 - #20 [
INFO  23:47:25,049 - #26 3
INFO  23:47:25,049 - #21 ]
INFO  23:47:25,049 - #5 ;
INFO  23:47:25,050 - #27 nizbool
INFO  23:47:25,050 - #20 [
INFO  23:47:25,050 - #26 0
INFO  23:47:25,050 - #21 ]
INFO  23:47:25,050 - #12 =
INFO  23:47:25,050 - #29 true
INFO  23:47:25,050 - #5 ;
INFO  23:47:25,050 - #27 nizbool
INFO  23:47:25,050 - #20 [
INFO  23:47:25,050 - #26 1
INFO  23:47:25,050 - #21 ]
INFO  23:47:25,051 - #12 =
INFO  23:47:25,051 - #29 false
INFO  23:47:25,051 - #5 ;
INFO  23:47:25,051 - #27 nizbool
INFO  23:47:25,051 - #20 [
INFO  23:47:25,051 - #26 2
INFO  23:47:25,051 - #21 ]
INFO  23:47:25,051 - #12 =
INFO  23:47:25,051 - #29 true
INFO  23:47:25,051 - #5 ;
INFO  23:47:25,051 - #27 nizbool
INFO  23:47:25,051 - #24 .
INFO  23:47:25,051 - #5 ;
INFO  23:47:25,051 - #4 }
INFO  23:47:25,051 - #4 }
INFO  23:47:25,059 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:47:25,059 - ===================================
INFO  23:47:25,062 - Deklarisana je konsanta int nula = 0
INFO  23:47:25,062 - Deklarisana je konsanta int jedan = 1
INFO  23:47:25,062 - Deklarisana je konsanta int pet = 5
INFO  23:47:25,062 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:47:25,062 - Deklarisan je niz niz
INFO  23:47:25,062 - Deklarisan je niz niz2
INFO  23:47:25,062 - Deklarisana promenljiva a
INFO  23:47:25,062 - Deklarisana promenljiva b
INFO  23:47:25,062 - Deklarisan je niz nizch
INFO  23:47:25,063 - Deklarisana promenljiva c
INFO  23:47:25,063 - Deklarisana promenljiva s1
INFO  23:47:25,063 - Deklarisan je niz nizbool
INFO  23:47:25,063 - Obradjuje se funkcija main na liniji 13
INFO  23:47:25,063 - Deklarisana promenljiva bodovi
INFO  23:47:25,063 - Deklarisana promenljiva bt
INFO  23:47:25,063 - Deklarisana promenljiva s
INFO  23:47:25,063 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:47:25,063 -  Print count calls = 0
INFO  23:47:25,063 -  Deklarisanih promenljivih ima = 12
INFO  23:47:25,063 - ===================================
INFO  23:47:25,069 - Parsiranje uspesno zavrseno!
INFO  23:48:34,405 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:48:34,454 - #2 program
INFO  23:48:34,455 - #27 MJProgram
INFO  23:48:34,455 - #23 const
INFO  23:48:34,456 - #27 int
INFO  23:48:34,457 - #27 nula
INFO  23:48:34,458 - #12 =
INFO  23:48:34,458 - #26 0
INFO  23:48:34,458 - #5 ;
INFO  23:48:34,458 - #23 const
INFO  23:48:34,458 - #27 int
INFO  23:48:34,459 - #27 jedan
INFO  23:48:34,459 - #12 =
INFO  23:48:34,459 - #26 1
INFO  23:48:34,459 - #5 ;
INFO  23:48:34,459 - #23 const
INFO  23:48:34,459 - #27 int
INFO  23:48:34,459 - #27 pet
INFO  23:48:34,459 - #12 =
INFO  23:48:34,459 - #26 5
INFO  23:48:34,459 - #5 ;
INFO  23:48:34,459 - #23 const
INFO  23:48:34,460 - #27 char
INFO  23:48:34,460 - #27 pet1
INFO  23:48:34,460 - #12 =
INFO  23:48:34,460 - #28 c
INFO  23:48:34,460 - #5 ;
INFO  23:48:34,460 - #27 int
INFO  23:48:34,460 - #27 niz
INFO  23:48:34,460 - #20 [
INFO  23:48:34,460 - #21 ]
INFO  23:48:34,460 - #8 ,
INFO  23:48:34,461 - #27 niz2
INFO  23:48:34,461 - #20 [
INFO  23:48:34,461 - #21 ]
INFO  23:48:34,461 - #8 ,
INFO  23:48:34,461 - #27 a
INFO  23:48:34,461 - #8 ,
INFO  23:48:34,461 - #27 b
INFO  23:48:34,461 - #5 ;
INFO  23:48:34,461 - #27 char
INFO  23:48:34,461 - #27 nizch
INFO  23:48:34,462 - #20 [
INFO  23:48:34,462 - #21 ]
INFO  23:48:34,462 - #8 ,
INFO  23:48:34,462 - #27 c
INFO  23:48:34,462 - #5 ;
INFO  23:48:34,462 - #27 bool
INFO  23:48:34,462 - #27 s1
INFO  23:48:34,462 - #5 ;
INFO  23:48:34,462 - #27 bool
INFO  23:48:34,462 - #27 nizbool
INFO  23:48:34,462 - #20 [
INFO  23:48:34,462 - #21 ]
INFO  23:48:34,462 - #5 ;
INFO  23:48:34,462 - #3 {
INFO  23:48:34,462 - #13 void
INFO  23:48:34,463 - #27 main
INFO  23:48:34,463 - #6 (
INFO  23:48:34,464 - #7 )
INFO  23:48:34,464 - #27 int
INFO  23:48:34,464 - #27 bodovi
INFO  23:48:34,464 - #5 ;
INFO  23:48:34,464 - #27 bool
INFO  23:48:34,464 - #27 bt
INFO  23:48:34,464 - #5 ;
INFO  23:48:34,464 - #27 int
INFO  23:48:34,464 - #27 s
INFO  23:48:34,464 - #5 ;
INFO  23:48:34,464 - #3 {
INFO  23:48:34,464 - #27 nizbool
INFO  23:48:34,465 - #12 =
INFO  23:48:34,465 - #32 new
INFO  23:48:34,465 - #27 bool
INFO  23:48:34,465 - #20 [
INFO  23:48:34,465 - #26 3
INFO  23:48:34,465 - #21 ]
INFO  23:48:34,466 - #5 ;
INFO  23:48:34,466 - #27 nizbool
INFO  23:48:34,466 - #20 [
INFO  23:48:34,466 - #26 0
INFO  23:48:34,466 - #21 ]
INFO  23:48:34,466 - #12 =
INFO  23:48:34,466 - #29 true
INFO  23:48:34,466 - #5 ;
INFO  23:48:34,467 - #27 nizbool
INFO  23:48:34,467 - #20 [
INFO  23:48:34,467 - #26 1
INFO  23:48:34,467 - #21 ]
INFO  23:48:34,467 - #12 =
INFO  23:48:34,467 - #29 false
INFO  23:48:34,467 - #5 ;
INFO  23:48:34,467 - #27 nizbool
INFO  23:48:34,468 - #20 [
INFO  23:48:34,468 - #26 2
INFO  23:48:34,468 - #21 ]
INFO  23:48:34,468 - #12 =
INFO  23:48:34,468 - #29 true
INFO  23:48:34,468 - #5 ;
INFO  23:48:34,468 - #9 print
INFO  23:48:34,468 - #6 (
INFO  23:48:34,468 - #27 nizbool
INFO  23:48:34,468 - #20 [
INFO  23:48:34,468 - #26 0
INFO  23:48:34,468 - #21 ]
INFO  23:48:34,468 - #7 )
INFO  23:48:34,469 - #5 ;
INFO  23:48:34,469 - #9 print
INFO  23:48:34,470 - #6 (
INFO  23:48:34,470 - #27 nizbool
INFO  23:48:34,470 - #20 [
INFO  23:48:34,470 - #26 1
INFO  23:48:34,470 - #21 ]
INFO  23:48:34,470 - #7 )
INFO  23:48:34,470 - #5 ;
INFO  23:48:34,470 - #9 print
INFO  23:48:34,470 - #6 (
INFO  23:48:34,470 - #27 nizbool
INFO  23:48:34,470 - #20 [
INFO  23:48:34,470 - #26 2
INFO  23:48:34,470 - #21 ]
INFO  23:48:34,470 - #7 )
INFO  23:48:34,470 - #5 ;
INFO  23:48:34,471 - #4 }
INFO  23:48:34,471 - #4 }
INFO  23:48:34,477 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorIDENT(
                         nizbool
                        ) [DesignatorIDENT]
                        TermExpr(
                          TermFactor(
                            FactorNEW(
                              Type(
                               bool
                              ) [Type]
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   3
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [FactorNEW]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           true
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:48:34,478 - ===================================
INFO  23:48:34,481 - Deklarisana je konsanta int nula = 0
INFO  23:48:34,481 - Deklarisana je konsanta int jedan = 1
INFO  23:48:34,481 - Deklarisana je konsanta int pet = 5
INFO  23:48:34,481 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:48:34,481 - Deklarisan je niz niz
INFO  23:48:34,482 - Deklarisan je niz niz2
INFO  23:48:34,482 - Deklarisana promenljiva a
INFO  23:48:34,482 - Deklarisana promenljiva b
INFO  23:48:34,482 - Deklarisan je niz nizch
INFO  23:48:34,482 - Deklarisana promenljiva c
INFO  23:48:34,482 - Deklarisana promenljiva s1
INFO  23:48:34,482 - Deklarisan je niz nizbool
INFO  23:48:34,482 - Obradjuje se funkcija main na liniji 13
INFO  23:48:34,482 - Deklarisana promenljiva bodovi
INFO  23:48:34,482 - Deklarisana promenljiva bt
INFO  23:48:34,482 - Deklarisana promenljiva s
INFO  23:48:34,482 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:48:34,482 -  Print count calls = 3
INFO  23:48:34,482 -  Deklarisanih promenljivih ima = 12
INFO  23:48:34,483 - ===================================
INFO  23:48:34,488 - Parsiranje uspesno zavrseno!
INFO  23:49:35,149 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:49:35,187 - #2 program
INFO  23:49:35,188 - #27 MJProgram
INFO  23:49:35,188 - #23 const
INFO  23:49:35,189 - #27 int
INFO  23:49:35,189 - #27 nula
INFO  23:49:35,190 - #12 =
INFO  23:49:35,190 - #26 0
INFO  23:49:35,190 - #5 ;
INFO  23:49:35,190 - #23 const
INFO  23:49:35,190 - #27 int
INFO  23:49:35,190 - #27 jedan
INFO  23:49:35,190 - #12 =
INFO  23:49:35,191 - #26 1
INFO  23:49:35,191 - #5 ;
INFO  23:49:35,191 - #23 const
INFO  23:49:35,191 - #27 int
INFO  23:49:35,191 - #27 pet
INFO  23:49:35,191 - #12 =
INFO  23:49:35,191 - #26 5
INFO  23:49:35,191 - #5 ;
INFO  23:49:35,191 - #23 const
INFO  23:49:35,191 - #27 char
INFO  23:49:35,191 - #27 pet1
INFO  23:49:35,191 - #12 =
INFO  23:49:35,192 - #28 c
INFO  23:49:35,192 - #5 ;
INFO  23:49:35,192 - #27 int
INFO  23:49:35,192 - #27 niz
INFO  23:49:35,192 - #20 [
INFO  23:49:35,192 - #21 ]
INFO  23:49:35,192 - #8 ,
INFO  23:49:35,192 - #27 niz2
INFO  23:49:35,192 - #20 [
INFO  23:49:35,192 - #21 ]
INFO  23:49:35,192 - #8 ,
INFO  23:49:35,192 - #27 a
INFO  23:49:35,192 - #8 ,
INFO  23:49:35,193 - #27 b
INFO  23:49:35,193 - #5 ;
INFO  23:49:35,193 - #27 char
INFO  23:49:35,193 - #27 nizch
INFO  23:49:35,193 - #20 [
INFO  23:49:35,193 - #21 ]
INFO  23:49:35,193 - #8 ,
INFO  23:49:35,193 - #27 c
INFO  23:49:35,193 - #5 ;
INFO  23:49:35,193 - #27 bool
INFO  23:49:35,193 - #27 s1
INFO  23:49:35,194 - #5 ;
INFO  23:49:35,194 - #27 bool
INFO  23:49:35,194 - #27 nizbool
INFO  23:49:35,194 - #20 [
INFO  23:49:35,194 - #21 ]
INFO  23:49:35,194 - #5 ;
INFO  23:49:35,194 - #3 {
INFO  23:49:35,194 - #13 void
INFO  23:49:35,195 - #27 main
INFO  23:49:35,195 - #6 (
INFO  23:49:35,195 - #7 )
INFO  23:49:35,195 - #27 int
INFO  23:49:35,195 - #27 bodovi
INFO  23:49:35,195 - #5 ;
INFO  23:49:35,195 - #27 bool
INFO  23:49:35,195 - #27 bt
INFO  23:49:35,195 - #5 ;
INFO  23:49:35,196 - #27 int
INFO  23:49:35,196 - #27 s
INFO  23:49:35,196 - #5 ;
INFO  23:49:35,196 - #3 {
INFO  23:49:35,196 - #27 nizbool
INFO  23:49:35,197 - #12 =
INFO  23:49:35,197 - #32 new
INFO  23:49:35,197 - #27 bool
INFO  23:49:35,197 - #20 [
INFO  23:49:35,197 - #26 3
INFO  23:49:35,198 - #21 ]
INFO  23:49:35,198 - #5 ;
INFO  23:49:35,198 - #27 nizbool
INFO  23:49:35,199 - #20 [
INFO  23:49:35,199 - #26 0
INFO  23:49:35,199 - #21 ]
INFO  23:49:35,199 - #12 =
INFO  23:49:35,199 - #29 true
INFO  23:49:35,199 - #5 ;
INFO  23:49:35,199 - #27 nizbool
INFO  23:49:35,200 - #20 [
INFO  23:49:35,200 - #26 1
INFO  23:49:35,200 - #21 ]
INFO  23:49:35,200 - #12 =
INFO  23:49:35,200 - #29 false
INFO  23:49:35,200 - #5 ;
INFO  23:49:35,200 - #27 nizbool
INFO  23:49:35,200 - #20 [
INFO  23:49:35,200 - #26 2
INFO  23:49:35,200 - #21 ]
INFO  23:49:35,200 - #12 =
INFO  23:49:35,201 - #29 true
INFO  23:49:35,201 - #5 ;
INFO  23:49:35,201 - #9 print
INFO  23:49:35,201 - #6 (
INFO  23:49:35,201 - #27 nizbool
INFO  23:49:35,201 - #20 [
INFO  23:49:35,201 - #26 0
INFO  23:49:35,201 - #21 ]
INFO  23:49:35,201 - #7 )
INFO  23:49:35,202 - #5 ;
INFO  23:49:35,202 - #9 print
INFO  23:49:35,203 - #6 (
INFO  23:49:35,203 - #27 nizbool
INFO  23:49:35,203 - #20 [
INFO  23:49:35,203 - #26 1
INFO  23:49:35,203 - #21 ]
INFO  23:49:35,203 - #7 )
INFO  23:49:35,203 - #5 ;
INFO  23:49:35,203 - #9 print
INFO  23:49:35,203 - #6 (
INFO  23:49:35,203 - #27 nizbool
INFO  23:49:35,203 - #20 [
INFO  23:49:35,203 - #26 2
INFO  23:49:35,203 - #21 ]
INFO  23:49:35,203 - #7 )
INFO  23:49:35,204 - #5 ;
INFO  23:49:35,204 - #4 }
INFO  23:49:35,204 - #4 }
INFO  23:49:35,212 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorIDENT(
                         nizbool
                        ) [DesignatorIDENT]
                        TermExpr(
                          TermFactor(
                            FactorNEW(
                              Type(
                               bool
                              ) [Type]
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   3
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [FactorNEW]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           true
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:49:35,213 - ===================================
INFO  23:49:35,215 - Deklarisana je konsanta int nula = 0
INFO  23:49:35,216 - Deklarisana je konsanta int jedan = 1
INFO  23:49:35,216 - Deklarisana je konsanta int pet = 5
INFO  23:49:35,216 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:49:35,216 - Deklarisan je niz niz
INFO  23:49:35,216 - Deklarisan je niz niz2
INFO  23:49:35,216 - Deklarisana promenljiva a
INFO  23:49:35,216 - Deklarisana promenljiva b
INFO  23:49:35,216 - Deklarisan je niz nizch
INFO  23:49:35,216 - Deklarisana promenljiva c
INFO  23:49:35,216 - Deklarisana promenljiva s1
INFO  23:49:35,216 - Deklarisan je niz nizbool
INFO  23:49:35,217 - Obradjuje se funkcija main na liniji 13
INFO  23:49:35,217 - Deklarisana promenljiva bodovi
INFO  23:49:35,217 - Deklarisana promenljiva bt
INFO  23:49:35,217 - Deklarisana promenljiva s
INFO  23:49:35,217 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:49:35,217 -  Print count calls = 3
INFO  23:49:35,217 -  Deklarisanih promenljivih ima = 12
INFO  23:49:35,217 - ===================================
INFO  23:49:35,223 - Parsiranje uspesno zavrseno!
INFO  23:49:40,426 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:49:40,491 - #2 program
INFO  23:49:40,491 - #27 MJProgram
INFO  23:49:40,491 - #23 const
INFO  23:49:40,493 - #27 int
INFO  23:49:40,494 - #27 nula
INFO  23:49:40,495 - #12 =
INFO  23:49:40,495 - #26 0
INFO  23:49:40,495 - #5 ;
INFO  23:49:40,495 - #23 const
INFO  23:49:40,496 - #27 int
INFO  23:49:40,496 - #27 jedan
INFO  23:49:40,496 - #12 =
INFO  23:49:40,496 - #26 1
INFO  23:49:40,496 - #5 ;
INFO  23:49:40,496 - #23 const
INFO  23:49:40,496 - #27 int
INFO  23:49:40,496 - #27 pet
INFO  23:49:40,496 - #12 =
INFO  23:49:40,496 - #26 5
INFO  23:49:40,496 - #5 ;
INFO  23:49:40,496 - #23 const
INFO  23:49:40,496 - #27 char
INFO  23:49:40,497 - #27 pet1
INFO  23:49:40,497 - #12 =
INFO  23:49:40,497 - #28 c
INFO  23:49:40,497 - #5 ;
INFO  23:49:40,497 - #27 int
INFO  23:49:40,497 - #27 niz
INFO  23:49:40,497 - #20 [
INFO  23:49:40,497 - #21 ]
INFO  23:49:40,498 - #8 ,
INFO  23:49:40,498 - #27 niz2
INFO  23:49:40,498 - #20 [
INFO  23:49:40,498 - #21 ]
INFO  23:49:40,498 - #8 ,
INFO  23:49:40,498 - #27 a
INFO  23:49:40,498 - #8 ,
INFO  23:49:40,498 - #27 b
INFO  23:49:40,499 - #5 ;
INFO  23:49:40,499 - #27 char
INFO  23:49:40,499 - #27 nizch
INFO  23:49:40,499 - #20 [
INFO  23:49:40,499 - #21 ]
INFO  23:49:40,499 - #8 ,
INFO  23:49:40,500 - #27 c
INFO  23:49:40,500 - #5 ;
INFO  23:49:40,500 - #27 bool
INFO  23:49:40,500 - #27 s1
INFO  23:49:40,500 - #5 ;
INFO  23:49:40,500 - #27 bool
INFO  23:49:40,500 - #27 nizbool
INFO  23:49:40,500 - #20 [
INFO  23:49:40,500 - #21 ]
INFO  23:49:40,500 - #5 ;
INFO  23:49:40,500 - #3 {
INFO  23:49:40,501 - #13 void
INFO  23:49:40,502 - #27 main
INFO  23:49:40,502 - #6 (
INFO  23:49:40,502 - #7 )
INFO  23:49:40,502 - #27 int
INFO  23:49:40,502 - #27 bodovi
INFO  23:49:40,502 - #5 ;
INFO  23:49:40,503 - #27 bool
INFO  23:49:40,503 - #27 bt
INFO  23:49:40,503 - #5 ;
INFO  23:49:40,503 - #27 int
INFO  23:49:40,503 - #27 s
INFO  23:49:40,503 - #5 ;
INFO  23:49:40,503 - #3 {
INFO  23:49:40,503 - #27 nizbool
INFO  23:49:40,504 - #12 =
INFO  23:49:40,504 - #32 new
INFO  23:49:40,504 - #27 bool
INFO  23:49:40,505 - #20 [
INFO  23:49:40,505 - #26 3
INFO  23:49:40,505 - #21 ]
INFO  23:49:40,505 - #5 ;
INFO  23:49:40,505 - #27 nizbool
INFO  23:49:40,506 - #20 [
INFO  23:49:40,506 - #26 0
INFO  23:49:40,506 - #21 ]
INFO  23:49:40,506 - #12 =
INFO  23:49:40,506 - #29 true
INFO  23:49:40,506 - #5 ;
INFO  23:49:40,506 - #27 nizbool
INFO  23:49:40,506 - #20 [
INFO  23:49:40,506 - #26 1
INFO  23:49:40,507 - #21 ]
INFO  23:49:40,507 - #12 =
INFO  23:49:40,507 - #29 false
INFO  23:49:40,507 - #5 ;
INFO  23:49:40,507 - #27 nizbool
INFO  23:49:40,507 - #20 [
INFO  23:49:40,507 - #26 2
INFO  23:49:40,507 - #21 ]
INFO  23:49:40,507 - #12 =
INFO  23:49:40,507 - #29 true
INFO  23:49:40,507 - #5 ;
INFO  23:49:40,507 - #9 print
INFO  23:49:40,507 - #6 (
INFO  23:49:40,508 - #27 nizbool
INFO  23:49:40,508 - #20 [
INFO  23:49:40,508 - #26 0
INFO  23:49:40,508 - #21 ]
INFO  23:49:40,508 - #7 )
INFO  23:49:40,509 - #5 ;
INFO  23:49:40,509 - #9 print
INFO  23:49:40,509 - #6 (
INFO  23:49:40,509 - #27 nizbool
INFO  23:49:40,509 - #20 [
INFO  23:49:40,509 - #26 1
INFO  23:49:40,509 - #21 ]
INFO  23:49:40,509 - #7 )
INFO  23:49:40,509 - #5 ;
INFO  23:49:40,510 - #9 print
INFO  23:49:40,510 - #6 (
INFO  23:49:40,510 - #27 nizbool
INFO  23:49:40,510 - #20 [
INFO  23:49:40,510 - #26 2
INFO  23:49:40,510 - #21 ]
INFO  23:49:40,510 - #7 )
INFO  23:49:40,510 - #5 ;
INFO  23:49:40,510 - #4 }
INFO  23:49:40,510 - #4 }
INFO  23:49:40,519 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorIDENT(
                         nizbool
                        ) [DesignatorIDENT]
                        TermExpr(
                          TermFactor(
                            FactorNEW(
                              Type(
                               bool
                              ) [Type]
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   3
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [FactorNEW]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           true
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:49:40,520 - ===================================
INFO  23:49:40,546 - Deklarisana je konsanta int nula = 0
INFO  23:49:40,546 - Deklarisana je konsanta int jedan = 1
INFO  23:49:40,547 - Deklarisana je konsanta int pet = 5
INFO  23:49:40,547 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:49:40,547 - Deklarisan je niz niz
INFO  23:49:40,547 - Deklarisan je niz niz2
INFO  23:49:40,547 - Deklarisana promenljiva a
INFO  23:49:40,547 - Deklarisana promenljiva b
INFO  23:49:40,547 - Deklarisan je niz nizch
INFO  23:49:40,547 - Deklarisana promenljiva c
INFO  23:49:40,547 - Deklarisana promenljiva s1
INFO  23:49:40,548 - Deklarisan je niz nizbool
INFO  23:49:40,548 - Obradjuje se funkcija main na liniji 13
INFO  23:49:40,548 - Deklarisana promenljiva bodovi
INFO  23:49:40,548 - Deklarisana promenljiva bt
INFO  23:49:40,548 - Deklarisana promenljiva s
INFO  23:49:47,268 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:49:51,155 -  Print count calls = 3
INFO  23:49:51,156 -  Deklarisanih promenljivih ima = 12
INFO  23:49:51,156 - ===================================
INFO  23:50:00,193 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:50:00,260 - #2 program
INFO  23:50:00,260 - #27 MJProgram
INFO  23:50:00,260 - #23 const
INFO  23:50:00,261 - #27 int
INFO  23:50:00,262 - #27 nula
INFO  23:50:00,262 - #12 =
INFO  23:50:00,263 - #26 0
INFO  23:50:00,263 - #5 ;
INFO  23:50:00,263 - #23 const
INFO  23:50:00,263 - #27 int
INFO  23:50:00,263 - #27 jedan
INFO  23:50:00,263 - #12 =
INFO  23:50:00,263 - #26 1
INFO  23:50:00,263 - #5 ;
INFO  23:50:00,264 - #23 const
INFO  23:50:00,264 - #27 int
INFO  23:50:00,264 - #27 pet
INFO  23:50:00,264 - #12 =
INFO  23:50:00,264 - #26 5
INFO  23:50:00,264 - #5 ;
INFO  23:50:00,264 - #23 const
INFO  23:50:00,264 - #27 char
INFO  23:50:00,264 - #27 pet1
INFO  23:50:00,264 - #12 =
INFO  23:50:00,264 - #28 c
INFO  23:50:00,264 - #5 ;
INFO  23:50:00,265 - #27 int
INFO  23:50:00,265 - #27 niz
INFO  23:50:00,265 - #20 [
INFO  23:50:00,265 - #21 ]
INFO  23:50:00,265 - #8 ,
INFO  23:50:00,265 - #27 niz2
INFO  23:50:00,265 - #20 [
INFO  23:50:00,265 - #21 ]
INFO  23:50:00,265 - #8 ,
INFO  23:50:00,265 - #27 a
INFO  23:50:00,265 - #8 ,
INFO  23:50:00,266 - #27 b
INFO  23:50:00,266 - #5 ;
INFO  23:50:00,266 - #27 char
INFO  23:50:00,266 - #27 nizch
INFO  23:50:00,266 - #20 [
INFO  23:50:00,266 - #21 ]
INFO  23:50:00,267 - #8 ,
INFO  23:50:00,267 - #27 c
INFO  23:50:00,267 - #5 ;
INFO  23:50:00,267 - #27 bool
INFO  23:50:00,267 - #27 s1
INFO  23:50:00,267 - #5 ;
INFO  23:50:00,267 - #27 bool
INFO  23:50:00,267 - #27 nizbool
INFO  23:50:00,267 - #20 [
INFO  23:50:00,267 - #21 ]
INFO  23:50:00,267 - #5 ;
INFO  23:50:00,267 - #3 {
INFO  23:50:00,267 - #13 void
INFO  23:50:00,269 - #27 main
INFO  23:50:00,269 - #6 (
INFO  23:50:00,269 - #7 )
INFO  23:50:00,269 - #27 int
INFO  23:50:00,269 - #27 bodovi
INFO  23:50:00,269 - #5 ;
INFO  23:50:00,269 - #27 bool
INFO  23:50:00,269 - #27 bt
INFO  23:50:00,270 - #5 ;
INFO  23:50:00,270 - #27 int
INFO  23:50:00,270 - #27 s
INFO  23:50:00,270 - #5 ;
INFO  23:50:00,270 - #3 {
INFO  23:50:00,270 - #27 nizbool
INFO  23:50:00,271 - #12 =
INFO  23:50:00,271 - #32 new
INFO  23:50:00,271 - #27 bool
INFO  23:50:00,271 - #20 [
INFO  23:50:00,271 - #26 3
INFO  23:50:00,271 - #21 ]
INFO  23:50:00,272 - #5 ;
INFO  23:50:00,272 - #27 nizbool
INFO  23:50:00,272 - #20 [
INFO  23:50:00,272 - #26 0
INFO  23:50:00,272 - #21 ]
INFO  23:50:00,272 - #12 =
INFO  23:50:00,273 - #29 true
INFO  23:50:00,273 - #5 ;
INFO  23:50:00,273 - #27 nizbool
INFO  23:50:00,273 - #20 [
INFO  23:50:00,273 - #26 1
INFO  23:50:00,273 - #21 ]
INFO  23:50:00,273 - #12 =
INFO  23:50:00,273 - #29 false
INFO  23:50:00,273 - #5 ;
INFO  23:50:00,273 - #27 nizbool
INFO  23:50:00,273 - #20 [
INFO  23:50:00,273 - #26 2
INFO  23:50:00,273 - #21 ]
INFO  23:50:00,274 - #12 =
INFO  23:50:00,274 - #29 true
INFO  23:50:00,274 - #5 ;
INFO  23:50:00,274 - #9 print
INFO  23:50:00,274 - #6 (
INFO  23:50:00,274 - #27 nizbool
INFO  23:50:00,274 - #20 [
INFO  23:50:00,274 - #26 0
INFO  23:50:00,274 - #21 ]
INFO  23:50:00,274 - #7 )
INFO  23:50:00,275 - #5 ;
INFO  23:50:00,275 - #9 print
INFO  23:50:00,276 - #6 (
INFO  23:50:00,276 - #27 nizbool
INFO  23:50:00,276 - #20 [
INFO  23:50:00,276 - #26 1
INFO  23:50:00,276 - #21 ]
INFO  23:50:00,276 - #7 )
INFO  23:50:00,276 - #5 ;
INFO  23:50:00,276 - #9 print
INFO  23:50:00,276 - #6 (
INFO  23:50:00,276 - #27 nizbool
INFO  23:50:00,276 - #20 [
INFO  23:50:00,276 - #26 2
INFO  23:50:00,277 - #21 ]
INFO  23:50:00,277 - #7 )
INFO  23:50:00,277 - #5 ;
INFO  23:50:00,277 - #4 }
INFO  23:50:00,277 - #4 }
INFO  23:50:00,287 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorIDENT(
                         nizbool
                        ) [DesignatorIDENT]
                        TermExpr(
                          TermFactor(
                            FactorNEW(
                              Type(
                               bool
                              ) [Type]
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   3
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [FactorNEW]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           true
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:50:00,289 - ===================================
INFO  23:50:00,309 - Deklarisana je konsanta int nula = 0
INFO  23:50:00,310 - Deklarisana je konsanta int jedan = 1
INFO  23:50:00,310 - Deklarisana je konsanta int pet = 5
INFO  23:50:00,310 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:50:00,310 - Deklarisan je niz niz
INFO  23:50:00,310 - Deklarisan je niz niz2
INFO  23:50:00,310 - Deklarisana promenljiva a
INFO  23:50:00,310 - Deklarisana promenljiva b
INFO  23:50:00,310 - Deklarisan je niz nizch
INFO  23:50:00,312 - Deklarisana promenljiva c
INFO  23:50:00,312 - Deklarisana promenljiva s1
INFO  23:50:00,312 - Deklarisan je niz nizbool
INFO  23:50:00,312 - Obradjuje se funkcija main na liniji 13
INFO  23:50:00,312 - Deklarisana promenljiva bodovi
INFO  23:50:00,312 - Deklarisana promenljiva bt
INFO  23:50:00,312 - Deklarisana promenljiva s
INFO  23:50:00,312 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:50:00,313 -  Print count calls = 3
INFO  23:50:00,313 -  Deklarisanih promenljivih ima = 12
INFO  23:50:00,313 - ===================================
INFO  23:50:43,216 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:50:43,260 - #2 program
INFO  23:50:43,261 - #27 MJProgram
INFO  23:50:43,261 - #23 const
INFO  23:50:43,263 - #27 int
INFO  23:50:43,263 - #27 nula
INFO  23:50:43,264 - #12 =
INFO  23:50:43,264 - #26 0
INFO  23:50:43,265 - #5 ;
INFO  23:50:43,265 - #23 const
INFO  23:50:43,265 - #27 int
INFO  23:50:43,265 - #27 jedan
INFO  23:50:43,265 - #12 =
INFO  23:50:43,265 - #26 1
INFO  23:50:43,266 - #5 ;
INFO  23:50:43,266 - #23 const
INFO  23:50:43,266 - #27 int
INFO  23:50:43,266 - #27 pet
INFO  23:50:43,266 - #12 =
INFO  23:50:43,266 - #26 5
INFO  23:50:43,266 - #5 ;
INFO  23:50:43,266 - #23 const
INFO  23:50:43,266 - #27 char
INFO  23:50:43,266 - #27 pet1
INFO  23:50:43,267 - #12 =
INFO  23:50:43,267 - #28 c
INFO  23:50:43,267 - #5 ;
INFO  23:50:43,267 - #27 int
INFO  23:50:43,267 - #27 niz
INFO  23:50:43,267 - #20 [
INFO  23:50:43,268 - #21 ]
INFO  23:50:43,268 - #8 ,
INFO  23:50:43,268 - #27 niz2
INFO  23:50:43,268 - #20 [
INFO  23:50:43,268 - #21 ]
INFO  23:50:43,268 - #8 ,
INFO  23:50:43,268 - #27 a
INFO  23:50:43,269 - #8 ,
INFO  23:50:43,269 - #27 b
INFO  23:50:43,269 - #5 ;
INFO  23:50:43,269 - #27 char
INFO  23:50:43,269 - #27 nizch
INFO  23:50:43,270 - #20 [
INFO  23:50:43,270 - #21 ]
INFO  23:50:43,270 - #8 ,
INFO  23:50:43,270 - #27 c
INFO  23:50:43,270 - #5 ;
INFO  23:50:43,270 - #27 bool
INFO  23:50:43,270 - #27 s1
INFO  23:50:43,270 - #5 ;
INFO  23:50:43,270 - #27 bool
INFO  23:50:43,270 - #27 nizbool
INFO  23:50:43,270 - #20 [
INFO  23:50:43,270 - #21 ]
INFO  23:50:43,271 - #5 ;
INFO  23:50:43,271 - #3 {
INFO  23:50:43,271 - #13 void
INFO  23:50:43,272 - #27 main
INFO  23:50:43,272 - #6 (
INFO  23:50:43,272 - #7 )
INFO  23:50:43,272 - #27 int
INFO  23:50:43,272 - #27 bodovi
INFO  23:50:43,272 - #5 ;
INFO  23:50:43,273 - #27 bool
INFO  23:50:43,273 - #27 bt
INFO  23:50:43,273 - #5 ;
INFO  23:50:43,273 - #27 int
INFO  23:50:43,273 - #27 s
INFO  23:50:43,273 - #5 ;
INFO  23:50:43,273 - #3 {
INFO  23:50:43,273 - #27 nizbool
INFO  23:50:43,274 - #12 =
INFO  23:50:43,274 - #32 new
INFO  23:50:43,274 - #27 bool
INFO  23:50:43,274 - #20 [
INFO  23:50:43,274 - #26 3
INFO  23:50:43,274 - #21 ]
INFO  23:50:43,275 - #5 ;
INFO  23:50:43,275 - #27 nizbool
INFO  23:50:43,275 - #20 [
INFO  23:50:43,275 - #26 0
INFO  23:50:43,275 - #21 ]
INFO  23:50:43,275 - #12 =
INFO  23:50:43,276 - #29 true
INFO  23:50:43,276 - #5 ;
INFO  23:50:43,276 - #27 nizbool
INFO  23:50:43,276 - #20 [
INFO  23:50:43,276 - #26 1
INFO  23:50:43,276 - #21 ]
INFO  23:50:43,276 - #12 =
INFO  23:50:43,276 - #29 false
INFO  23:50:43,276 - #5 ;
INFO  23:50:43,276 - #27 nizbool
INFO  23:50:43,276 - #20 [
INFO  23:50:43,276 - #26 2
INFO  23:50:43,276 - #21 ]
INFO  23:50:43,276 - #12 =
INFO  23:50:43,277 - #29 true
INFO  23:50:43,277 - #5 ;
INFO  23:50:43,277 - #9 print
INFO  23:50:43,277 - #6 (
INFO  23:50:43,277 - #27 nizbool
INFO  23:50:43,277 - #20 [
INFO  23:50:43,277 - #26 0
INFO  23:50:43,277 - #21 ]
INFO  23:50:43,277 - #7 )
INFO  23:50:43,278 - #5 ;
INFO  23:50:43,278 - #9 print
INFO  23:50:43,278 - #6 (
INFO  23:50:43,278 - #27 nizbool
INFO  23:50:43,278 - #20 [
INFO  23:50:43,278 - #26 1
INFO  23:50:43,279 - #21 ]
INFO  23:50:43,279 - #7 )
INFO  23:50:43,279 - #5 ;
INFO  23:50:43,279 - #9 print
INFO  23:50:43,279 - #6 (
INFO  23:50:43,279 - #27 nizbool
INFO  23:50:43,279 - #20 [
INFO  23:50:43,279 - #26 2
INFO  23:50:43,279 - #21 ]
INFO  23:50:43,279 - #7 )
INFO  23:50:43,279 - #5 ;
INFO  23:50:43,279 - #4 }
INFO  23:50:43,279 - #4 }
INFO  23:50:43,286 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStmt(
                    ) [NoStmt]
                    DesignatorStmt(
                      Assignment(
                        DesignatorIDENT(
                         nizbool
                        ) [DesignatorIDENT]
                        TermExpr(
                          TermFactor(
                            FactorNEW(
                              Type(
                               bool
                              ) [Type]
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   3
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [FactorNEW]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           true
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             0
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           1
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:50:43,287 - ===================================
INFO  23:50:43,289 - Deklarisana je konsanta int nula = 0
INFO  23:50:43,289 - Deklarisana je konsanta int jedan = 1
INFO  23:50:43,290 - Deklarisana je konsanta int pet = 5
INFO  23:50:43,290 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:50:43,290 - Deklarisan je niz niz
INFO  23:50:43,290 - Deklarisan je niz niz2
INFO  23:50:43,290 - Deklarisana promenljiva a
INFO  23:50:43,290 - Deklarisana promenljiva b
INFO  23:50:43,290 - Deklarisan je niz nizch
INFO  23:50:43,290 - Deklarisana promenljiva c
INFO  23:50:43,290 - Deklarisana promenljiva s1
INFO  23:50:43,290 - Deklarisan je niz nizbool
INFO  23:50:43,290 - Obradjuje se funkcija main na liniji 13
INFO  23:50:43,290 - Deklarisana promenljiva bodovi
INFO  23:50:43,291 - Deklarisana promenljiva bt
INFO  23:50:43,291 - Deklarisana promenljiva s
INFO  23:50:43,291 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:50:43,291 -  Print count calls = 3
INFO  23:50:43,291 -  Deklarisanih promenljivih ima = 12
INFO  23:50:43,291 - ===================================
INFO  23:50:43,296 - Parsiranje uspesno zavrseno!
INFO  23:51:27,131 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:51:27,178 - #2 program
INFO  23:51:27,179 - #27 MJProgram
INFO  23:51:27,179 - #23 const
INFO  23:51:27,180 - #27 int
INFO  23:51:27,180 - #27 nula
INFO  23:51:27,181 - #12 =
INFO  23:51:27,181 - #26 0
INFO  23:51:27,181 - #5 ;
INFO  23:51:27,181 - #23 const
INFO  23:51:27,182 - #27 int
INFO  23:51:27,182 - #27 jedan
INFO  23:51:27,182 - #12 =
INFO  23:51:27,182 - #26 1
INFO  23:51:27,182 - #5 ;
INFO  23:51:27,182 - #23 const
INFO  23:51:27,182 - #27 int
INFO  23:51:27,182 - #27 pet
INFO  23:51:27,182 - #12 =
INFO  23:51:27,183 - #26 5
INFO  23:51:27,183 - #5 ;
INFO  23:51:27,183 - #23 const
INFO  23:51:27,183 - #27 char
INFO  23:51:27,183 - #27 pet1
INFO  23:51:27,183 - #12 =
INFO  23:51:27,183 - #28 c
INFO  23:51:27,183 - #5 ;
INFO  23:51:27,183 - #27 int
INFO  23:51:27,183 - #27 niz
INFO  23:51:27,184 - #20 [
INFO  23:51:27,184 - #21 ]
INFO  23:51:27,184 - #8 ,
INFO  23:51:27,184 - #27 niz2
INFO  23:51:27,184 - #20 [
INFO  23:51:27,184 - #21 ]
INFO  23:51:27,184 - #8 ,
INFO  23:51:27,184 - #27 a
INFO  23:51:27,184 - #8 ,
INFO  23:51:27,184 - #27 b
INFO  23:51:27,184 - #5 ;
INFO  23:51:27,185 - #27 char
INFO  23:51:27,185 - #27 nizch
INFO  23:51:27,185 - #20 [
INFO  23:51:27,185 - #21 ]
INFO  23:51:27,185 - #8 ,
INFO  23:51:27,185 - #27 c
INFO  23:51:27,185 - #5 ;
INFO  23:51:27,185 - #27 bool
INFO  23:51:27,186 - #27 s1
INFO  23:51:27,186 - #5 ;
INFO  23:51:27,186 - #27 bool
INFO  23:51:27,186 - #27 nizbool
INFO  23:51:27,186 - #20 [
INFO  23:51:27,186 - #21 ]
INFO  23:51:27,186 - #5 ;
INFO  23:51:27,186 - #3 {
INFO  23:51:27,186 - #13 void
INFO  23:51:27,187 - #27 main
INFO  23:51:27,187 - #6 (
INFO  23:51:27,188 - #7 )
INFO  23:51:27,188 - #27 int
INFO  23:51:27,188 - #27 bodovi
INFO  23:51:27,188 - #5 ;
INFO  23:51:27,188 - #27 bool
INFO  23:51:27,188 - #27 bt
INFO  23:51:27,188 - #5 ;
INFO  23:51:27,188 - #27 int
INFO  23:51:27,188 - #27 s
INFO  23:51:27,189 - #5 ;
INFO  23:51:27,189 - #3 {
INFO  23:51:27,189 - #27 nizbool
INFO  23:51:27,190 - #12 =
INFO  23:51:27,190 - #32 new
INFO  23:51:27,190 - #27 bool
INFO  23:51:27,190 - #20 [
INFO  23:51:27,190 - #26 3
INFO  23:51:27,190 - #21 ]
INFO  23:51:27,190 - #5 ;
INFO  23:51:27,191 - #27 nizbool
INFO  23:51:27,191 - #20 [
INFO  23:51:27,191 - #26 0
INFO  23:51:27,191 - #21 ]
INFO  23:51:27,191 - #12 =
INFO  23:51:27,191 - #29 true
INFO  23:51:27,191 - #5 ;
INFO  23:51:27,191 - #27 nizbool
INFO  23:51:27,191 - #20 [
INFO  23:51:27,191 - #26 1
INFO  23:51:27,192 - #21 ]
INFO  23:51:27,192 - #12 =
INFO  23:51:27,192 - #29 false
INFO  23:51:27,192 - #5 ;
INFO  23:51:27,192 - #27 nizbool
INFO  23:51:27,192 - #20 [
INFO  23:51:27,192 - #26 2
INFO  23:51:27,192 - #21 ]
INFO  23:51:27,192 - #12 =
INFO  23:51:27,192 - #29 true
INFO  23:51:27,192 - #5 ;
INFO  23:51:27,192 - #9 print
INFO  23:51:27,192 - #6 (
INFO  23:51:27,192 - #27 nizbool
INFO  23:51:27,192 - #20 [
INFO  23:51:27,193 - #26 0
INFO  23:51:27,193 - #21 ]
INFO  23:51:27,193 - #7 )
INFO  23:51:27,193 - #5 ;
INFO  23:51:27,194 - #9 print
INFO  23:51:27,194 - #6 (
INFO  23:51:27,194 - #27 nizbool
INFO  23:51:27,194 - #20 [
INFO  23:51:27,194 - #26 1
INFO  23:51:27,194 - #21 ]
INFO  23:51:27,194 - #7 )
INFO  23:51:27,194 - #5 ;
INFO  23:51:27,195 - #9 print
INFO  23:51:27,195 - #6 (
INFO  23:51:27,195 - #27 nizbool
INFO  23:51:27,195 - #20 [
INFO  23:51:27,195 - #26 2
INFO  23:51:27,195 - #21 ]
INFO  23:51:27,195 - #7 )
INFO  23:51:27,195 - #5 ;
INFO  23:51:27,195 - #27 nizbool
INFO  23:51:27,196 - #24 .
INFO  23:51:27,196 - #5 ;
INFO  23:51:27,196 - #4 }
INFO  23:51:27,196 - #4 }
INFO  23:51:27,204 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        Assignment(
                          DesignatorIDENT(
                           nizbool
                          ) [DesignatorIDENT]
                          TermExpr(
                            TermFactor(
                              FactorNEW(
                                Type(
                                 bool
                                ) [Type]
                                TermExpr(
                                  TermFactor(
                                    FactorNUMBER(
                                     3
                                    ) [FactorNUMBER]
                                  ) [TermFactor]
                                ) [TermExpr]
                              ) [FactorNEW]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               0
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorBOOL(
                             true
                            ) [FactorBOOL]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             1
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           false
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         true
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               0
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                  NoConst(
                  ) [NoConst]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             1
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:51:27,205 - ===================================
INFO  23:51:27,208 - Deklarisana je konsanta int nula = 0
INFO  23:51:27,208 - Deklarisana je konsanta int jedan = 1
INFO  23:51:27,208 - Deklarisana je konsanta int pet = 5
INFO  23:51:27,208 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:51:27,208 - Deklarisan je niz niz
INFO  23:51:27,208 - Deklarisan je niz niz2
INFO  23:51:27,208 - Deklarisana promenljiva a
INFO  23:51:27,208 - Deklarisana promenljiva b
INFO  23:51:27,209 - Deklarisan je niz nizch
INFO  23:51:27,209 - Deklarisana promenljiva c
INFO  23:51:27,209 - Deklarisana promenljiva s1
INFO  23:51:27,209 - Deklarisan je niz nizbool
INFO  23:51:27,209 - Obradjuje se funkcija main na liniji 13
INFO  23:51:27,209 - Deklarisana promenljiva bodovi
INFO  23:51:27,209 - Deklarisana promenljiva bt
INFO  23:51:27,209 - Deklarisana promenljiva s
INFO  23:51:27,209 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:51:27,209 -  Print count calls = 3
INFO  23:51:27,210 -  Deklarisanih promenljivih ima = 12
INFO  23:51:27,210 - ===================================
INFO  23:51:27,217 - Parsiranje uspesno zavrseno!
INFO  23:53:01,557 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:53:01,606 - #2 program
INFO  23:53:01,606 - #27 MJProgram
INFO  23:53:01,606 - #23 const
INFO  23:53:01,607 - #27 int
INFO  23:53:01,607 - #27 nula
INFO  23:53:01,608 - #12 =
INFO  23:53:01,608 - #26 0
INFO  23:53:01,608 - #5 ;
INFO  23:53:01,608 - #23 const
INFO  23:53:01,609 - #27 int
INFO  23:53:01,609 - #27 jedan
INFO  23:53:01,609 - #12 =
INFO  23:53:01,609 - #26 1
INFO  23:53:01,609 - #5 ;
INFO  23:53:01,609 - #23 const
INFO  23:53:01,609 - #27 int
INFO  23:53:01,609 - #27 pet
INFO  23:53:01,609 - #12 =
INFO  23:53:01,609 - #26 5
INFO  23:53:01,609 - #5 ;
INFO  23:53:01,609 - #23 const
INFO  23:53:01,610 - #27 char
INFO  23:53:01,610 - #27 pet1
INFO  23:53:01,610 - #12 =
INFO  23:53:01,610 - #28 c
INFO  23:53:01,610 - #5 ;
INFO  23:53:01,610 - #27 int
INFO  23:53:01,610 - #27 niz
INFO  23:53:01,610 - #20 [
INFO  23:53:01,610 - #21 ]
INFO  23:53:01,610 - #8 ,
INFO  23:53:01,611 - #27 niz2
INFO  23:53:01,611 - #20 [
INFO  23:53:01,611 - #21 ]
INFO  23:53:01,611 - #8 ,
INFO  23:53:01,611 - #27 a
INFO  23:53:01,611 - #8 ,
INFO  23:53:01,611 - #27 b
INFO  23:53:01,611 - #5 ;
INFO  23:53:01,611 - #27 char
INFO  23:53:01,611 - #27 nizch
INFO  23:53:01,612 - #20 [
INFO  23:53:01,612 - #21 ]
INFO  23:53:01,612 - #8 ,
INFO  23:53:01,612 - #27 c
INFO  23:53:01,612 - #5 ;
INFO  23:53:01,612 - #27 bool
INFO  23:53:01,612 - #27 s1
INFO  23:53:01,612 - #5 ;
INFO  23:53:01,612 - #27 bool
INFO  23:53:01,612 - #27 nizbool
INFO  23:53:01,613 - #20 [
INFO  23:53:01,613 - #21 ]
INFO  23:53:01,613 - #5 ;
INFO  23:53:01,613 - #3 {
INFO  23:53:01,613 - #13 void
INFO  23:53:01,614 - #27 main
INFO  23:53:01,614 - #6 (
INFO  23:53:01,615 - #7 )
INFO  23:53:01,615 - #27 int
INFO  23:53:01,615 - #27 bodovi
INFO  23:53:01,615 - #5 ;
INFO  23:53:01,615 - #27 bool
INFO  23:53:01,615 - #27 bt
INFO  23:53:01,615 - #5 ;
INFO  23:53:01,615 - #27 int
INFO  23:53:01,615 - #27 s
INFO  23:53:01,616 - #5 ;
INFO  23:53:01,616 - #3 {
INFO  23:53:01,616 - #27 nizbool
INFO  23:53:01,617 - #12 =
INFO  23:53:01,617 - #32 new
INFO  23:53:01,617 - #27 bool
INFO  23:53:01,617 - #20 [
INFO  23:53:01,617 - #26 3
INFO  23:53:01,617 - #21 ]
INFO  23:53:01,618 - #5 ;
INFO  23:53:01,618 - #27 nizbool
INFO  23:53:01,618 - #20 [
INFO  23:53:01,618 - #26 0
INFO  23:53:01,618 - #21 ]
INFO  23:53:01,618 - #12 =
INFO  23:53:01,619 - #29 true
INFO  23:53:01,619 - #5 ;
INFO  23:53:01,619 - #27 nizbool
INFO  23:53:01,619 - #20 [
INFO  23:53:01,619 - #26 1
INFO  23:53:01,619 - #21 ]
INFO  23:53:01,619 - #12 =
INFO  23:53:01,619 - #29 false
INFO  23:53:01,619 - #5 ;
INFO  23:53:01,619 - #27 nizbool
INFO  23:53:01,619 - #20 [
INFO  23:53:01,619 - #26 2
INFO  23:53:01,620 - #21 ]
INFO  23:53:01,620 - #12 =
INFO  23:53:01,620 - #29 true
INFO  23:53:01,620 - #5 ;
INFO  23:53:01,620 - #9 print
INFO  23:53:01,620 - #6 (
INFO  23:53:01,620 - #27 nizbool
INFO  23:53:01,620 - #20 [
INFO  23:53:01,620 - #26 0
INFO  23:53:01,620 - #21 ]
INFO  23:53:01,620 - #7 )
INFO  23:53:01,621 - #5 ;
INFO  23:53:01,621 - #9 print
INFO  23:53:01,622 - #6 (
INFO  23:53:01,622 - #27 nizbool
INFO  23:53:01,622 - #20 [
INFO  23:53:01,622 - #26 1
INFO  23:53:01,622 - #21 ]
INFO  23:53:01,622 - #7 )
INFO  23:53:01,622 - #5 ;
INFO  23:53:01,622 - #9 print
INFO  23:53:01,622 - #6 (
INFO  23:53:01,622 - #27 nizbool
INFO  23:53:01,622 - #20 [
INFO  23:53:01,622 - #26 2
INFO  23:53:01,622 - #21 ]
INFO  23:53:01,622 - #7 )
INFO  23:53:01,622 - #5 ;
INFO  23:53:01,623 - #27 nizbool
INFO  23:53:01,623 - #24 .
INFO  23:53:01,623 - #5 ;
INFO  23:53:01,623 - #4 }
INFO  23:53:01,623 - #4 }
INFO  23:53:01,631 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      DesignatorStmt(
                        Assignment(
                          DesignatorIDENT(
                           nizbool
                          ) [DesignatorIDENT]
                          TermExpr(
                            TermFactor(
                              FactorNEW(
                                Type(
                                 bool
                                ) [Type]
                                TermExpr(
                                  TermFactor(
                                    FactorNUMBER(
                                     3
                                    ) [FactorNUMBER]
                                  ) [TermFactor]
                                ) [TermExpr]
                              ) [FactorNEW]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               0
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorBOOL(
                             true
                            ) [FactorBOOL]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             1
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           false
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         true
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               0
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                  NoConst(
                  ) [NoConst]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              PrintStmt(
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             1
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
                NoConst(
                ) [NoConst]
              ) [PrintStmt]
            ) [MatchedStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
              NoConst(
              ) [NoConst]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:53:01,632 - ===================================
INFO  23:53:01,635 - Deklarisana je konsanta int nula = 0
INFO  23:53:01,635 - Deklarisana je konsanta int jedan = 1
INFO  23:53:01,635 - Deklarisana je konsanta int pet = 5
INFO  23:53:01,636 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:53:01,636 - Deklarisan je niz niz
INFO  23:53:01,636 - Deklarisan je niz niz2
INFO  23:53:01,636 - Deklarisana promenljiva a
INFO  23:53:01,636 - Deklarisana promenljiva b
INFO  23:53:01,636 - Deklarisan je niz nizch
INFO  23:53:01,636 - Deklarisana promenljiva c
INFO  23:53:01,636 - Deklarisana promenljiva s1
INFO  23:53:01,636 - Deklarisan je niz nizbool
INFO  23:53:01,636 - Obradjuje se funkcija main na liniji 13
INFO  23:53:01,636 - Deklarisana promenljiva bodovi
INFO  23:53:01,636 - Deklarisana promenljiva bt
INFO  23:53:01,636 - Deklarisana promenljiva s
INFO  23:53:01,636 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:53:01,637 -  Print count calls = 3
INFO  23:53:01,637 -  Deklarisanih promenljivih ima = 12
INFO  23:53:01,637 - ===================================
INFO  23:53:01,644 - Parsiranje uspesno zavrseno!
INFO  23:53:34,001 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:53:34,047 - #2 program
INFO  23:53:34,047 - #27 MJProgram
INFO  23:53:34,047 - #23 const
INFO  23:53:34,048 - #27 int
INFO  23:53:34,048 - #27 nula
INFO  23:53:34,049 - #12 =
INFO  23:53:34,050 - #26 0
INFO  23:53:34,050 - #5 ;
INFO  23:53:34,050 - #23 const
INFO  23:53:34,051 - #27 int
INFO  23:53:34,051 - #27 jedan
INFO  23:53:34,051 - #12 =
INFO  23:53:34,051 - #26 1
INFO  23:53:34,051 - #5 ;
INFO  23:53:34,051 - #23 const
INFO  23:53:34,051 - #27 int
INFO  23:53:34,052 - #27 pet
INFO  23:53:34,052 - #12 =
INFO  23:53:34,052 - #26 5
INFO  23:53:34,052 - #5 ;
INFO  23:53:34,052 - #23 const
INFO  23:53:34,052 - #27 char
INFO  23:53:34,052 - #27 pet1
INFO  23:53:34,052 - #12 =
INFO  23:53:34,052 - #28 c
INFO  23:53:34,053 - #5 ;
INFO  23:53:34,053 - #27 int
INFO  23:53:34,053 - #27 niz
INFO  23:53:34,053 - #20 [
INFO  23:53:34,053 - #21 ]
INFO  23:53:34,053 - #8 ,
INFO  23:53:34,053 - #27 niz2
INFO  23:53:34,053 - #20 [
INFO  23:53:34,053 - #21 ]
INFO  23:53:34,054 - #8 ,
INFO  23:53:34,054 - #27 a
INFO  23:53:34,054 - #8 ,
INFO  23:53:34,054 - #27 b
INFO  23:53:34,054 - #5 ;
INFO  23:53:34,054 - #27 char
INFO  23:53:34,054 - #27 nizch
INFO  23:53:34,055 - #20 [
INFO  23:53:34,055 - #21 ]
INFO  23:53:34,055 - #8 ,
INFO  23:53:34,055 - #27 c
INFO  23:53:34,055 - #5 ;
INFO  23:53:34,055 - #27 bool
INFO  23:53:34,055 - #27 s1
INFO  23:53:34,055 - #5 ;
INFO  23:53:34,055 - #27 bool
INFO  23:53:34,055 - #27 nizbool
INFO  23:53:34,055 - #20 [
INFO  23:53:34,056 - #21 ]
INFO  23:53:34,056 - #5 ;
INFO  23:53:34,056 - #3 {
INFO  23:53:34,056 - #13 void
INFO  23:53:34,057 - #27 main
INFO  23:53:34,057 - #6 (
INFO  23:53:34,057 - #7 )
INFO  23:53:34,057 - #27 int
INFO  23:53:34,057 - #27 bodovi
INFO  23:53:34,057 - #5 ;
INFO  23:53:34,057 - #27 bool
INFO  23:53:34,057 - #27 bt
INFO  23:53:34,057 - #5 ;
INFO  23:53:34,058 - #27 int
INFO  23:53:34,058 - #27 s
INFO  23:53:34,058 - #5 ;
INFO  23:53:34,058 - #3 {
INFO  23:53:34,058 - #27 nizbool
INFO  23:53:34,059 - #12 =
INFO  23:53:34,059 - #32 new
INFO  23:53:34,059 - #27 bool
INFO  23:53:34,060 - #20 [
INFO  23:53:34,060 - #26 3
INFO  23:53:34,060 - #21 ]
INFO  23:53:34,060 - #5 ;
INFO  23:53:34,060 - #27 nizbool
INFO  23:53:34,060 - #20 [
INFO  23:53:34,060 - #26 0
INFO  23:53:34,060 - #21 ]
INFO  23:53:34,060 - #12 =
INFO  23:53:34,061 - #29 true
INFO  23:53:34,061 - #5 ;
INFO  23:53:34,061 - #27 nizbool
INFO  23:53:34,061 - #20 [
INFO  23:53:34,061 - #26 1
INFO  23:53:34,061 - #21 ]
INFO  23:53:34,061 - #12 =
INFO  23:53:34,061 - #29 false
INFO  23:53:34,061 - #5 ;
INFO  23:53:34,061 - #27 nizbool
INFO  23:53:34,061 - #20 [
INFO  23:53:34,061 - #26 2
INFO  23:53:34,061 - #21 ]
INFO  23:53:34,061 - #12 =
INFO  23:53:34,061 - #29 true
INFO  23:53:34,062 - #5 ;
INFO  23:53:34,062 - #27 nizbool
INFO  23:53:34,062 - #24 .
INFO  23:53:34,062 - #5 ;
INFO  23:53:34,062 - #4 }
INFO  23:53:34,062 - #4 }
INFO  23:53:34,069 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:53:34,070 - ===================================
INFO  23:53:34,072 - Deklarisana je konsanta int nula = 0
INFO  23:53:34,072 - Deklarisana je konsanta int jedan = 1
INFO  23:53:34,072 - Deklarisana je konsanta int pet = 5
INFO  23:53:34,072 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:53:34,073 - Deklarisan je niz niz
INFO  23:53:34,073 - Deklarisan je niz niz2
INFO  23:53:34,073 - Deklarisana promenljiva a
INFO  23:53:34,073 - Deklarisana promenljiva b
INFO  23:53:34,073 - Deklarisan je niz nizch
INFO  23:53:34,073 - Deklarisana promenljiva c
INFO  23:53:34,073 - Deklarisana promenljiva s1
INFO  23:53:34,073 - Deklarisan je niz nizbool
INFO  23:53:34,073 - Obradjuje se funkcija main na liniji 13
INFO  23:53:34,073 - Deklarisana promenljiva bodovi
INFO  23:53:34,073 - Deklarisana promenljiva bt
INFO  23:53:34,073 - Deklarisana promenljiva s
INFO  23:53:34,073 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:53:34,073 -  Print count calls = 0
INFO  23:53:34,074 -  Deklarisanih promenljivih ima = 12
INFO  23:53:34,074 - ===================================
INFO  23:53:34,080 - Parsiranje uspesno zavrseno!
INFO  23:55:48,770 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:55:48,813 - #2 program
INFO  23:55:48,813 - #27 MJProgram
INFO  23:55:48,813 - #23 const
INFO  23:55:48,814 - #27 int
INFO  23:55:48,815 - #27 nula
INFO  23:55:48,815 - #12 =
INFO  23:55:48,815 - #26 0
INFO  23:55:48,815 - #5 ;
INFO  23:55:48,816 - #23 const
INFO  23:55:48,816 - #27 int
INFO  23:55:48,816 - #27 jedan
INFO  23:55:48,816 - #12 =
INFO  23:55:48,816 - #26 1
INFO  23:55:48,816 - #5 ;
INFO  23:55:48,816 - #23 const
INFO  23:55:48,816 - #27 int
INFO  23:55:48,816 - #27 pet
INFO  23:55:48,816 - #12 =
INFO  23:55:48,817 - #26 5
INFO  23:55:48,817 - #5 ;
INFO  23:55:48,817 - #23 const
INFO  23:55:48,817 - #27 char
INFO  23:55:48,817 - #27 pet1
INFO  23:55:48,817 - #12 =
INFO  23:55:48,817 - #28 c
INFO  23:55:48,817 - #5 ;
INFO  23:55:48,817 - #27 int
INFO  23:55:48,817 - #27 niz
INFO  23:55:48,818 - #20 [
INFO  23:55:48,818 - #21 ]
INFO  23:55:48,818 - #8 ,
INFO  23:55:48,818 - #27 niz2
INFO  23:55:48,818 - #20 [
INFO  23:55:48,818 - #21 ]
INFO  23:55:48,818 - #8 ,
INFO  23:55:48,818 - #27 a
INFO  23:55:48,818 - #8 ,
INFO  23:55:48,818 - #27 b
INFO  23:55:48,818 - #5 ;
INFO  23:55:48,819 - #27 char
INFO  23:55:48,819 - #27 nizch
INFO  23:55:48,819 - #20 [
INFO  23:55:48,819 - #21 ]
INFO  23:55:48,819 - #8 ,
INFO  23:55:48,819 - #27 c
INFO  23:55:48,819 - #5 ;
INFO  23:55:48,819 - #27 bool
INFO  23:55:48,819 - #27 s1
INFO  23:55:48,819 - #5 ;
INFO  23:55:48,819 - #27 bool
INFO  23:55:48,820 - #27 nizbool
INFO  23:55:48,820 - #20 [
INFO  23:55:48,820 - #21 ]
INFO  23:55:48,820 - #5 ;
INFO  23:55:48,820 - #3 {
INFO  23:55:48,820 - #13 void
INFO  23:55:48,821 - #27 main
INFO  23:55:48,821 - #6 (
INFO  23:55:48,821 - #7 )
INFO  23:55:48,821 - #27 int
INFO  23:55:48,821 - #27 bodovi
INFO  23:55:48,821 - #5 ;
INFO  23:55:48,821 - #27 bool
INFO  23:55:48,822 - #27 bt
INFO  23:55:48,822 - #5 ;
INFO  23:55:48,822 - #27 int
INFO  23:55:48,822 - #27 s
INFO  23:55:48,822 - #5 ;
INFO  23:55:48,822 - #3 {
INFO  23:55:48,822 - #27 nizbool
INFO  23:55:48,823 - #12 =
INFO  23:55:48,823 - #32 new
INFO  23:55:48,823 - #27 bool
INFO  23:55:48,823 - #20 [
INFO  23:55:48,823 - #26 3
INFO  23:55:48,823 - #21 ]
INFO  23:55:48,824 - #5 ;
INFO  23:55:48,824 - #27 nizbool
INFO  23:55:48,824 - #20 [
INFO  23:55:48,824 - #26 0
INFO  23:55:48,824 - #21 ]
INFO  23:55:48,824 - #12 =
INFO  23:55:48,824 - #29 true
INFO  23:55:48,824 - #5 ;
INFO  23:55:48,824 - #27 nizbool
INFO  23:55:48,825 - #20 [
INFO  23:55:48,825 - #26 1
INFO  23:55:48,825 - #21 ]
INFO  23:55:48,825 - #12 =
INFO  23:55:48,825 - #29 false
INFO  23:55:48,825 - #5 ;
INFO  23:55:48,825 - #27 nizbool
INFO  23:55:48,825 - #20 [
INFO  23:55:48,825 - #26 2
INFO  23:55:48,825 - #21 ]
INFO  23:55:48,825 - #12 =
INFO  23:55:48,825 - #29 true
INFO  23:55:48,825 - #5 ;
INFO  23:55:48,825 - #27 nizbool
INFO  23:55:48,825 - #24 .
INFO  23:55:48,825 - #5 ;
INFO  23:55:48,826 - #4 }
INFO  23:55:48,826 - #4 }
INFO  23:55:48,833 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:55:48,834 - ===================================
INFO  23:55:48,836 - Deklarisana je konsanta int nula = 0
INFO  23:55:48,837 - Deklarisana je konsanta int jedan = 1
INFO  23:55:48,837 - Deklarisana je konsanta int pet = 5
INFO  23:55:48,837 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:55:48,837 - Deklarisan je niz niz
INFO  23:55:48,837 - Deklarisan je niz niz2
INFO  23:55:48,837 - Deklarisana promenljiva a
INFO  23:55:48,837 - Deklarisana promenljiva b
INFO  23:55:48,837 - Deklarisan je niz nizch
INFO  23:55:48,837 - Deklarisana promenljiva c
INFO  23:55:48,837 - Deklarisana promenljiva s1
INFO  23:55:48,837 - Deklarisan je niz nizbool
INFO  23:55:48,837 - Obradjuje se funkcija main na liniji 13
INFO  23:55:48,837 - Deklarisana promenljiva bodovi
INFO  23:55:48,837 - Deklarisana promenljiva bt
INFO  23:55:48,837 - Deklarisana promenljiva s
INFO  23:55:48,838 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:55:48,838 -  Print count calls = 0
INFO  23:55:48,838 -  Deklarisanih promenljivih ima = 12
INFO  23:55:48,838 - ===================================
INFO  23:55:48,843 - Parsiranje uspesno zavrseno!
INFO  23:56:18,594 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:56:18,645 - #2 program
INFO  23:56:18,645 - #27 MJProgram
INFO  23:56:18,645 - #23 const
INFO  23:56:18,647 - #27 int
INFO  23:56:18,647 - #27 nula
INFO  23:56:18,647 - #12 =
INFO  23:56:18,648 - #26 0
INFO  23:56:18,648 - #5 ;
INFO  23:56:18,648 - #23 const
INFO  23:56:18,648 - #27 int
INFO  23:56:18,648 - #27 jedan
INFO  23:56:18,648 - #12 =
INFO  23:56:18,649 - #26 1
INFO  23:56:18,649 - #5 ;
INFO  23:56:18,649 - #23 const
INFO  23:56:18,649 - #27 int
INFO  23:56:18,649 - #27 pet
INFO  23:56:18,649 - #12 =
INFO  23:56:18,649 - #26 5
INFO  23:56:18,649 - #5 ;
INFO  23:56:18,649 - #23 const
INFO  23:56:18,649 - #27 char
INFO  23:56:18,649 - #27 pet1
INFO  23:56:18,649 - #12 =
INFO  23:56:18,649 - #28 c
INFO  23:56:18,649 - #5 ;
INFO  23:56:18,650 - #27 int
INFO  23:56:18,650 - #27 niz
INFO  23:56:18,650 - #20 [
INFO  23:56:18,650 - #21 ]
INFO  23:56:18,650 - #8 ,
INFO  23:56:18,650 - #27 niz2
INFO  23:56:18,650 - #20 [
INFO  23:56:18,650 - #21 ]
INFO  23:56:18,650 - #8 ,
INFO  23:56:18,650 - #27 a
INFO  23:56:18,650 - #8 ,
INFO  23:56:18,650 - #27 b
INFO  23:56:18,651 - #5 ;
INFO  23:56:18,651 - #27 char
INFO  23:56:18,651 - #27 nizch
INFO  23:56:18,651 - #20 [
INFO  23:56:18,651 - #21 ]
INFO  23:56:18,651 - #8 ,
INFO  23:56:18,651 - #27 c
INFO  23:56:18,652 - #5 ;
INFO  23:56:18,652 - #27 bool
INFO  23:56:18,652 - #27 s1
INFO  23:56:18,652 - #5 ;
INFO  23:56:18,652 - #27 bool
INFO  23:56:18,652 - #27 nizbool
INFO  23:56:18,652 - #20 [
INFO  23:56:18,652 - #21 ]
INFO  23:56:18,652 - #5 ;
INFO  23:56:18,652 - #3 {
INFO  23:56:18,652 - #13 void
INFO  23:56:18,653 - #27 main
INFO  23:56:18,653 - #6 (
INFO  23:56:18,653 - #7 )
INFO  23:56:18,654 - #27 int
INFO  23:56:18,654 - #27 bodovi
INFO  23:56:18,654 - #5 ;
INFO  23:56:18,654 - #27 bool
INFO  23:56:18,654 - #27 bt
INFO  23:56:18,654 - #5 ;
INFO  23:56:18,654 - #27 int
INFO  23:56:18,654 - #27 s
INFO  23:56:18,654 - #5 ;
INFO  23:56:18,654 - #3 {
INFO  23:56:18,654 - #27 nizbool
INFO  23:56:18,655 - #12 =
INFO  23:56:18,655 - #32 new
INFO  23:56:18,656 - #27 bool
INFO  23:56:18,656 - #20 [
INFO  23:56:18,656 - #26 3
INFO  23:56:18,656 - #21 ]
INFO  23:56:18,656 - #5 ;
INFO  23:56:18,656 - #27 nizbool
INFO  23:56:18,657 - #20 [
INFO  23:56:18,657 - #26 0
INFO  23:56:18,657 - #21 ]
INFO  23:56:18,657 - #12 =
INFO  23:56:18,657 - #29 true
INFO  23:56:18,657 - #5 ;
INFO  23:56:18,657 - #27 nizbool
INFO  23:56:18,657 - #20 [
INFO  23:56:18,658 - #26 1
INFO  23:56:18,658 - #21 ]
INFO  23:56:18,658 - #12 =
INFO  23:56:18,658 - #29 false
INFO  23:56:18,658 - #5 ;
INFO  23:56:18,658 - #27 nizbool
INFO  23:56:18,658 - #20 [
INFO  23:56:18,658 - #26 2
INFO  23:56:18,658 - #21 ]
INFO  23:56:18,658 - #12 =
INFO  23:56:18,658 - #29 true
INFO  23:56:18,659 - #5 ;
INFO  23:56:18,659 - #27 nizbool
INFO  23:56:18,659 - #24 .
INFO  23:56:18,659 - #5 ;
INFO  23:56:18,659 - #4 }
INFO  23:56:18,659 - #4 }
INFO  23:56:18,668 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStmt(
                ) [NoStmt]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     nizbool
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        FactorNEW(
                          Type(
                           bool
                          ) [Type]
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [FactorNEW]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         0
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       1
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     2
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:56:18,668 - ===================================
INFO  23:56:18,671 - Deklarisana je konsanta int nula = 0
INFO  23:56:18,671 - Deklarisana je konsanta int jedan = 1
INFO  23:56:18,671 - Deklarisana je konsanta int pet = 5
INFO  23:56:18,672 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:56:18,672 - Deklarisan je niz niz
INFO  23:56:18,672 - Deklarisan je niz niz2
INFO  23:56:18,672 - Deklarisana promenljiva a
INFO  23:56:18,672 - Deklarisana promenljiva b
INFO  23:56:18,672 - Deklarisan je niz nizch
INFO  23:56:18,672 - Deklarisana promenljiva c
INFO  23:56:18,672 - Deklarisana promenljiva s1
INFO  23:56:18,672 - Deklarisan je niz nizbool
INFO  23:56:18,672 - Obradjuje se funkcija main na liniji 13
INFO  23:56:18,672 - Deklarisana promenljiva bodovi
INFO  23:56:18,672 - Deklarisana promenljiva bt
INFO  23:56:18,673 - Deklarisana promenljiva s
INFO  23:56:18,673 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:56:18,673 -  Print count calls = 0
INFO  23:56:18,673 -  Deklarisanih promenljivih ima = 12
INFO  23:56:18,673 - ===================================
INFO  23:56:18,679 - Parsiranje uspesno zavrseno!
INFO  23:58:32,755 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:58:32,807 - #2 program
INFO  23:58:32,807 - #27 MJProgram
INFO  23:58:32,807 - #23 const
INFO  23:58:32,809 - #27 int
INFO  23:58:32,809 - #27 nula
INFO  23:58:32,810 - #12 =
INFO  23:58:32,810 - #26 0
INFO  23:58:32,810 - #5 ;
INFO  23:58:32,811 - #23 const
INFO  23:58:32,811 - #27 int
INFO  23:58:32,811 - #27 jedan
INFO  23:58:32,811 - #12 =
INFO  23:58:32,811 - #26 1
INFO  23:58:32,811 - #5 ;
INFO  23:58:32,811 - #23 const
INFO  23:58:32,811 - #27 int
INFO  23:58:32,812 - #27 pet
INFO  23:58:32,812 - #12 =
INFO  23:58:32,812 - #26 5
INFO  23:58:32,812 - #5 ;
INFO  23:58:32,812 - #23 const
INFO  23:58:32,812 - #27 char
INFO  23:58:32,812 - #27 pet1
INFO  23:58:32,812 - #12 =
INFO  23:58:32,812 - #28 c
INFO  23:58:32,812 - #5 ;
INFO  23:58:32,814 - #27 int
INFO  23:58:32,814 - #27 niz
INFO  23:58:32,814 - #20 [
INFO  23:58:32,814 - #21 ]
INFO  23:58:32,814 - #8 ,
INFO  23:58:32,814 - #27 niz2
INFO  23:58:32,814 - #20 [
INFO  23:58:32,814 - #21 ]
INFO  23:58:32,814 - #8 ,
INFO  23:58:32,814 - #27 a
INFO  23:58:32,814 - #8 ,
INFO  23:58:32,815 - #27 b
INFO  23:58:32,815 - #5 ;
INFO  23:58:32,815 - #27 char
INFO  23:58:32,815 - #27 nizch
INFO  23:58:32,815 - #20 [
INFO  23:58:32,815 - #21 ]
INFO  23:58:32,815 - #8 ,
INFO  23:58:32,815 - #27 c
INFO  23:58:32,815 - #5 ;
INFO  23:58:32,815 - #27 bool
INFO  23:58:32,816 - #27 s1
INFO  23:58:32,816 - #5 ;
INFO  23:58:32,816 - #27 bool
INFO  23:58:32,816 - #27 nizbool
INFO  23:58:32,816 - #20 [
INFO  23:58:32,816 - #21 ]
INFO  23:58:32,816 - #5 ;
INFO  23:58:32,816 - #3 {
INFO  23:58:32,816 - #13 void
INFO  23:58:32,817 - #27 main
INFO  23:58:32,817 - #6 (
INFO  23:58:32,817 - #7 )
INFO  23:58:32,817 - #27 int
INFO  23:58:32,817 - #27 bodovi
INFO  23:58:32,817 - #5 ;
INFO  23:58:32,818 - #27 bool
INFO  23:58:32,818 - #27 bt
INFO  23:58:32,818 - #5 ;
INFO  23:58:32,818 - #27 int
INFO  23:58:32,818 - #27 s
INFO  23:58:32,818 - #5 ;
INFO  23:58:32,818 - #3 {
INFO  23:58:32,818 - #27 nizbool
INFO  23:58:32,820 - #12 =
INFO  23:58:32,820 - #32 new
INFO  23:58:32,820 - #27 bool
INFO  23:58:32,820 - #20 [
INFO  23:58:32,820 - #26 8
INFO  23:58:32,820 - #21 ]
INFO  23:58:32,820 - #5 ;
INFO  23:58:32,822 - #27 nizbool
INFO  23:58:32,822 - #20 [
INFO  23:58:32,822 - #26 0
INFO  23:58:32,822 - #21 ]
INFO  23:58:32,822 - #12 =
INFO  23:58:32,822 - #29 true
INFO  23:58:32,823 - #5 ;
INFO  23:58:32,823 - #27 nizbool
INFO  23:58:32,823 - #20 [
INFO  23:58:32,823 - #26 1
INFO  23:58:32,823 - #21 ]
INFO  23:58:32,823 - #12 =
INFO  23:58:32,823 - #29 false
INFO  23:58:32,823 - #5 ;
INFO  23:58:32,823 - #27 nizbool
INFO  23:58:32,823 - #20 [
INFO  23:58:32,823 - #26 2
INFO  23:58:32,823 - #21 ]
INFO  23:58:32,823 - #12 =
INFO  23:58:32,823 - #29 true
INFO  23:58:32,823 - #5 ;
INFO  23:58:32,823 - #27 nizbool
INFO  23:58:32,823 - #20 [
INFO  23:58:32,823 - #26 3
INFO  23:58:32,823 - #21 ]
INFO  23:58:32,823 - #12 =
INFO  23:58:32,823 - #29 false
INFO  23:58:32,823 - #5 ;
INFO  23:58:32,824 - #27 nizbool
INFO  23:58:32,824 - #20 [
INFO  23:58:32,824 - #26 4
INFO  23:58:32,824 - #21 ]
INFO  23:58:32,824 - #12 =
INFO  23:58:32,824 - #29 false
INFO  23:58:32,824 - #5 ;
INFO  23:58:32,824 - #27 nizbool
INFO  23:58:32,824 - #20 [
INFO  23:58:32,824 - #26 5
INFO  23:58:32,824 - #21 ]
INFO  23:58:32,824 - #12 =
INFO  23:58:32,826 - #29 true
INFO  23:58:32,826 - #5 ;
INFO  23:58:32,826 - #27 nizbool
INFO  23:58:32,826 - #20 [
INFO  23:58:32,826 - #26 6
INFO  23:58:32,826 - #21 ]
INFO  23:58:32,826 - #12 =
INFO  23:58:32,826 - #29 false
INFO  23:58:32,826 - #5 ;
INFO  23:58:32,826 - #27 nizbool
INFO  23:58:32,826 - #20 [
INFO  23:58:32,826 - #26 7
INFO  23:58:32,826 - #21 ]
INFO  23:58:32,826 - #12 =
INFO  23:58:32,827 - #29 true
INFO  23:58:32,827 - #5 ;
INFO  23:58:32,827 - #27 nizbool
INFO  23:58:32,827 - #24 .
INFO  23:58:32,827 - #5 ;
INFO  23:58:32,827 - #4 }
INFO  23:58:32,827 - #4 }
INFO  23:58:32,835 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          DesignatorStmt(
                            Assignment(
                              DesignatorIDENT(
                               nizbool
                              ) [DesignatorIDENT]
                              TermExpr(
                                TermFactor(
                                  FactorNEW(
                                    Type(
                                     bool
                                    ) [Type]
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         8
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [FactorNEW]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          Assignment(
                            DesignatorExpr(
                             nizbool
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   0
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [DesignatorExpr]
                            TermExpr(
                              TermFactor(
                                FactorBOOL(
                                 true
                                ) [FactorBOOL]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [Assignment]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizbool
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorBOOL(
                               false
                              ) [FactorBOOL]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorBOOL(
                             true
                            ) [FactorBOOL]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           false
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           4
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         5
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       6
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     7
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:58:32,835 - ===================================
INFO  23:58:32,838 - Deklarisana je konsanta int nula = 0
INFO  23:58:32,838 - Deklarisana je konsanta int jedan = 1
INFO  23:58:32,838 - Deklarisana je konsanta int pet = 5
INFO  23:58:32,839 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:58:32,839 - Deklarisan je niz niz
INFO  23:58:32,839 - Deklarisan je niz niz2
INFO  23:58:32,839 - Deklarisana promenljiva a
INFO  23:58:32,839 - Deklarisana promenljiva b
INFO  23:58:32,839 - Deklarisan je niz nizch
INFO  23:58:32,839 - Deklarisana promenljiva c
INFO  23:58:32,839 - Deklarisana promenljiva s1
INFO  23:58:32,839 - Deklarisan je niz nizbool
INFO  23:58:32,839 - Obradjuje se funkcija main na liniji 13
INFO  23:58:32,839 - Deklarisana promenljiva bodovi
INFO  23:58:32,839 - Deklarisana promenljiva bt
INFO  23:58:32,839 - Deklarisana promenljiva s
INFO  23:58:32,839 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:58:32,840 -  Print count calls = 0
INFO  23:58:32,840 -  Deklarisanih promenljivih ima = 12
INFO  23:58:32,840 - ===================================
INFO  23:58:32,845 - Parsiranje uspesno zavrseno!
INFO  23:58:57,100 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:58:57,148 - #2 program
INFO  23:58:57,149 - #27 MJProgram
INFO  23:58:57,149 - #23 const
INFO  23:58:57,150 - #27 int
INFO  23:58:57,150 - #27 nula
INFO  23:58:57,151 - #12 =
INFO  23:58:57,151 - #26 0
INFO  23:58:57,151 - #5 ;
INFO  23:58:57,152 - #23 const
INFO  23:58:57,152 - #27 int
INFO  23:58:57,152 - #27 jedan
INFO  23:58:57,152 - #12 =
INFO  23:58:57,152 - #26 1
INFO  23:58:57,152 - #5 ;
INFO  23:58:57,152 - #23 const
INFO  23:58:57,152 - #27 int
INFO  23:58:57,152 - #27 pet
INFO  23:58:57,153 - #12 =
INFO  23:58:57,153 - #26 5
INFO  23:58:57,153 - #5 ;
INFO  23:58:57,153 - #23 const
INFO  23:58:57,153 - #27 char
INFO  23:58:57,153 - #27 pet1
INFO  23:58:57,153 - #12 =
INFO  23:58:57,153 - #28 c
INFO  23:58:57,153 - #5 ;
INFO  23:58:57,153 - #27 int
INFO  23:58:57,154 - #27 niz
INFO  23:58:57,154 - #20 [
INFO  23:58:57,154 - #21 ]
INFO  23:58:57,154 - #8 ,
INFO  23:58:57,154 - #27 niz2
INFO  23:58:57,154 - #20 [
INFO  23:58:57,154 - #21 ]
INFO  23:58:57,154 - #8 ,
INFO  23:58:57,154 - #27 a
INFO  23:58:57,155 - #8 ,
INFO  23:58:57,155 - #27 b
INFO  23:58:57,155 - #5 ;
INFO  23:58:57,155 - #27 char
INFO  23:58:57,155 - #27 nizch
INFO  23:58:57,155 - #20 [
INFO  23:58:57,155 - #21 ]
INFO  23:58:57,156 - #8 ,
INFO  23:58:57,156 - #27 c
INFO  23:58:57,156 - #5 ;
INFO  23:58:57,156 - #27 bool
INFO  23:58:57,156 - #27 s1
INFO  23:58:57,156 - #5 ;
INFO  23:58:57,156 - #27 bool
INFO  23:58:57,156 - #27 nizbool
INFO  23:58:57,156 - #20 [
INFO  23:58:57,156 - #21 ]
INFO  23:58:57,156 - #5 ;
INFO  23:58:57,156 - #3 {
INFO  23:58:57,156 - #13 void
INFO  23:58:57,157 - #27 main
INFO  23:58:57,157 - #6 (
INFO  23:58:57,158 - #7 )
INFO  23:58:57,158 - #27 int
INFO  23:58:57,158 - #27 bodovi
INFO  23:58:57,158 - #5 ;
INFO  23:58:57,158 - #27 bool
INFO  23:58:57,158 - #27 bt
INFO  23:58:57,158 - #5 ;
INFO  23:58:57,158 - #27 int
INFO  23:58:57,158 - #27 s
INFO  23:58:57,158 - #5 ;
INFO  23:58:57,158 - #3 {
INFO  23:58:57,158 - #27 nizbool
INFO  23:58:57,159 - #12 =
INFO  23:58:57,159 - #32 new
INFO  23:58:57,159 - #27 bool
INFO  23:58:57,159 - #20 [
INFO  23:58:57,159 - #26 8
INFO  23:58:57,159 - #21 ]
INFO  23:58:57,160 - #5 ;
INFO  23:58:57,160 - #27 nizbool
INFO  23:58:57,160 - #20 [
INFO  23:58:57,160 - #26 0
INFO  23:58:57,160 - #21 ]
INFO  23:58:57,160 - #12 =
INFO  23:58:57,160 - #29 true
INFO  23:58:57,160 - #5 ;
INFO  23:58:57,161 - #27 nizbool
INFO  23:58:57,161 - #20 [
INFO  23:58:57,161 - #26 1
INFO  23:58:57,161 - #21 ]
INFO  23:58:57,161 - #12 =
INFO  23:58:57,161 - #29 false
INFO  23:58:57,161 - #5 ;
INFO  23:58:57,161 - #27 nizbool
INFO  23:58:57,161 - #20 [
INFO  23:58:57,161 - #26 2
INFO  23:58:57,161 - #21 ]
INFO  23:58:57,161 - #12 =
INFO  23:58:57,161 - #29 true
INFO  23:58:57,161 - #5 ;
INFO  23:58:57,161 - #27 nizbool
INFO  23:58:57,162 - #20 [
INFO  23:58:57,162 - #26 3
INFO  23:58:57,162 - #21 ]
INFO  23:58:57,162 - #12 =
INFO  23:58:57,162 - #29 false
INFO  23:58:57,162 - #5 ;
INFO  23:58:57,162 - #27 nizbool
INFO  23:58:57,162 - #20 [
INFO  23:58:57,162 - #26 4
INFO  23:58:57,162 - #21 ]
INFO  23:58:57,162 - #12 =
INFO  23:58:57,162 - #29 false
INFO  23:58:57,162 - #5 ;
INFO  23:58:57,162 - #27 nizbool
INFO  23:58:57,162 - #20 [
INFO  23:58:57,162 - #26 5
INFO  23:58:57,162 - #21 ]
INFO  23:58:57,162 - #12 =
INFO  23:58:57,163 - #29 true
INFO  23:58:57,163 - #5 ;
INFO  23:58:57,163 - #27 nizbool
INFO  23:58:57,163 - #20 [
INFO  23:58:57,163 - #26 6
INFO  23:58:57,163 - #21 ]
INFO  23:58:57,163 - #12 =
INFO  23:58:57,163 - #29 false
INFO  23:58:57,163 - #5 ;
INFO  23:58:57,163 - #27 nizbool
INFO  23:58:57,163 - #20 [
INFO  23:58:57,163 - #26 7
INFO  23:58:57,163 - #21 ]
INFO  23:58:57,163 - #12 =
INFO  23:58:57,163 - #29 true
INFO  23:58:57,163 - #5 ;
INFO  23:58:57,164 - #27 nizbool
INFO  23:58:57,164 - #24 .
INFO  23:58:57,164 - #5 ;
INFO  23:58:57,164 - #4 }
INFO  23:58:57,164 - #4 }
INFO  23:58:57,170 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStmt(
                          ) [NoStmt]
                          DesignatorStmt(
                            Assignment(
                              DesignatorIDENT(
                               nizbool
                              ) [DesignatorIDENT]
                              TermExpr(
                                TermFactor(
                                  FactorNEW(
                                    Type(
                                     bool
                                    ) [Type]
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         8
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [FactorNEW]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [Assignment]
                          ) [DesignatorStmt]
                        ) [Statements]
                        DesignatorStmt(
                          Assignment(
                            DesignatorExpr(
                             nizbool
                              TermExpr(
                                TermFactor(
                                  FactorNUMBER(
                                   0
                                  ) [FactorNUMBER]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [DesignatorExpr]
                            TermExpr(
                              TermFactor(
                                FactorBOOL(
                                 true
                                ) [FactorBOOL]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [Assignment]
                        ) [DesignatorStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizbool
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorBOOL(
                               false
                              ) [FactorBOOL]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizbool
                          TermExpr(
                            TermFactor(
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorBOOL(
                             true
                            ) [FactorBOOL]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizbool
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorBOOL(
                           false
                          ) [FactorBOOL]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     nizbool
                      TermExpr(
                        TermFactor(
                          FactorNUMBER(
                           4
                          ) [FactorNUMBER]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        FactorBOOL(
                         false
                        ) [FactorBOOL]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   nizbool
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         5
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorBOOL(
                       true
                      ) [FactorBOOL]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 nizbool
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       6
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    FactorBOOL(
                     false
                    ) [FactorBOOL]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorExpr(
               nizbool
                TermExpr(
                  TermFactor(
                    FactorNUMBER(
                     7
                    ) [FactorNUMBER]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignatorExpr]
              TermExpr(
                TermFactor(
                  FactorBOOL(
                   true
                  ) [FactorBOOL]
                ) [TermFactor]
              ) [TermExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        DesignatorStmt(
          Izmena3(
            DesignatorIDENT(
             nizbool
            ) [DesignatorIDENT]
          ) [Izmena3]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:58:57,171 - ===================================
INFO  23:58:57,174 - Deklarisana je konsanta int nula = 0
INFO  23:58:57,174 - Deklarisana je konsanta int jedan = 1
INFO  23:58:57,174 - Deklarisana je konsanta int pet = 5
INFO  23:58:57,175 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  23:58:57,175 - Deklarisan je niz niz
INFO  23:58:57,175 - Deklarisan je niz niz2
INFO  23:58:57,175 - Deklarisana promenljiva a
INFO  23:58:57,175 - Deklarisana promenljiva b
INFO  23:58:57,175 - Deklarisan je niz nizch
INFO  23:58:57,175 - Deklarisana promenljiva c
INFO  23:58:57,175 - Deklarisana promenljiva s1
INFO  23:58:57,175 - Deklarisan je niz nizbool
INFO  23:58:57,175 - Obradjuje se funkcija main na liniji 13
INFO  23:58:57,175 - Deklarisana promenljiva bodovi
INFO  23:58:57,175 - Deklarisana promenljiva bt
INFO  23:58:57,176 - Deklarisana promenljiva s
INFO  23:58:57,176 - Deklarisana je niz (uz pomoc NEW) na liniji 20
INFO  23:58:57,176 -  Print count calls = 0
INFO  23:58:57,176 -  Deklarisanih promenljivih ima = 12
INFO  23:58:57,176 - ===================================
INFO  23:58:57,181 - Parsiranje uspesno zavrseno!
