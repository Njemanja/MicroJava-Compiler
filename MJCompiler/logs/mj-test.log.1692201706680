INFO  05:03:12,372 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:03:12,454 - #2 program
INFO  05:03:12,454 - #27 MJProgram
INFO  05:03:12,454 - #23 const
INFO  05:03:12,457 - #27 int
INFO  05:03:12,457 - #27 nula
INFO  05:03:12,458 - #12 =
INFO  05:03:12,458 - #26 0
INFO  05:03:12,459 - #5 ;
INFO  05:03:12,459 - #23 const
INFO  05:03:12,459 - #27 int
INFO  05:03:12,459 - #27 jedan
INFO  05:03:12,460 - #12 =
INFO  05:03:12,460 - #26 1
INFO  05:03:12,460 - #5 ;
INFO  05:03:12,460 - #23 const
INFO  05:03:12,460 - #27 int
INFO  05:03:12,460 - #27 pet
INFO  05:03:12,460 - #12 =
INFO  05:03:12,460 - #26 5
INFO  05:03:12,461 - #5 ;
INFO  05:03:12,461 - #23 const
INFO  05:03:12,461 - #27 char
INFO  05:03:12,461 - #27 pet1
INFO  05:03:12,461 - #12 =
INFO  05:03:12,461 - #28 c
INFO  05:03:12,462 - #5 ;
INFO  05:03:12,462 - #27 int
INFO  05:03:12,462 - #27 niz
INFO  05:03:12,462 - #20 [
INFO  05:03:12,462 - #21 ]
INFO  05:03:12,462 - #8 ,
INFO  05:03:12,463 - #27 niz2
INFO  05:03:12,463 - #20 [
INFO  05:03:12,463 - #21 ]
INFO  05:03:12,463 - #8 ,
INFO  05:03:12,463 - #27 a
INFO  05:03:12,463 - #8 ,
INFO  05:03:12,463 - #27 b
INFO  05:03:12,463 - #5 ;
INFO  05:03:12,464 - #27 char
INFO  05:03:12,464 - #27 nizch
INFO  05:03:12,464 - #20 [
INFO  05:03:12,464 - #21 ]
INFO  05:03:12,464 - #8 ,
INFO  05:03:12,464 - #27 c
INFO  05:03:12,464 - #5 ;
INFO  05:03:12,464 - #27 bool
INFO  05:03:12,465 - #27 s1
INFO  05:03:12,465 - #5 ;
INFO  05:03:12,465 - #3 {
INFO  05:03:12,465 - #13 void
INFO  05:03:12,466 - #27 main
INFO  05:03:12,466 - #6 (
INFO  05:03:12,467 - #7 )
INFO  05:03:12,467 - #27 int
INFO  05:03:12,467 - #27 bodovi
INFO  05:03:12,467 - #5 ;
INFO  05:03:12,467 - #27 bool
INFO  05:03:12,467 - #27 bt
INFO  05:03:12,467 - #5 ;
INFO  05:03:12,467 - #27 int
INFO  05:03:12,467 - #27 s
INFO  05:03:12,467 - #5 ;
INFO  05:03:12,468 - #3 {
INFO  05:03:12,468 - #27 nizch
INFO  05:03:12,469 - #12 =
INFO  05:03:12,470 - #32 new
INFO  05:03:12,470 - #27 char
INFO  05:03:12,470 - #20 [
INFO  05:03:12,470 - #26 3
INFO  05:03:12,470 - #21 ]
INFO  05:03:12,470 - #5 ;
INFO  05:03:12,471 - #4 }
INFO  05:03:12,471 - #4 }
INFO  05:03:12,488 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:03:12,489 - ===================================
INFO  05:03:12,531 - Deklarisana je konsanta int nula = 0
INFO  05:03:12,531 - Deklarisana je konsanta int jedan = 1
INFO  05:03:12,532 - Deklarisana je konsanta int pet = 5
INFO  05:03:12,532 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:03:12,532 - Deklarisan je niz niz
INFO  05:03:12,532 - Deklarisan je niz niz2
INFO  05:03:12,532 - Deklarisana promenljiva a
INFO  05:03:12,532 - Deklarisana promenljiva b
INFO  05:03:12,532 - Deklarisan je niz nizch
INFO  05:03:12,532 - Deklarisana promenljiva c
INFO  05:03:12,532 - Deklarisana promenljiva s1
INFO  05:03:12,533 - Obradjuje se funkcija main na liniji 12
INFO  05:03:12,533 - Deklarisana promenljiva bodovi
INFO  05:03:12,533 - Deklarisana promenljiva bt
INFO  05:03:12,533 - Deklarisana promenljiva s
INFO  05:05:39,606 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:05:39,669 - #2 program
INFO  05:05:39,669 - #27 MJProgram
INFO  05:05:39,669 - #23 const
INFO  05:05:39,671 - #27 int
INFO  05:05:39,671 - #27 nula
INFO  05:05:39,673 - #12 =
INFO  05:05:39,673 - #26 0
INFO  05:05:39,673 - #5 ;
INFO  05:05:39,673 - #23 const
INFO  05:05:39,674 - #27 int
INFO  05:05:39,674 - #27 jedan
INFO  05:05:39,674 - #12 =
INFO  05:05:39,674 - #26 1
INFO  05:05:39,674 - #5 ;
INFO  05:05:39,674 - #23 const
INFO  05:05:39,674 - #27 int
INFO  05:05:39,674 - #27 pet
INFO  05:05:39,675 - #12 =
INFO  05:05:39,675 - #26 5
INFO  05:05:39,675 - #5 ;
INFO  05:05:39,675 - #23 const
INFO  05:05:39,675 - #27 char
INFO  05:05:39,675 - #27 pet1
INFO  05:05:39,675 - #12 =
INFO  05:05:39,676 - #28 c
INFO  05:05:39,676 - #5 ;
INFO  05:05:39,676 - #27 int
INFO  05:05:39,676 - #27 niz
INFO  05:05:39,676 - #20 [
INFO  05:05:39,676 - #21 ]
INFO  05:05:39,676 - #8 ,
INFO  05:05:39,677 - #27 niz2
INFO  05:05:39,677 - #20 [
INFO  05:05:39,677 - #21 ]
INFO  05:05:39,677 - #8 ,
INFO  05:05:39,677 - #27 a
INFO  05:05:39,677 - #8 ,
INFO  05:05:39,677 - #27 b
INFO  05:05:39,678 - #5 ;
INFO  05:05:39,678 - #27 char
INFO  05:05:39,678 - #27 nizch
INFO  05:05:39,678 - #20 [
INFO  05:05:39,679 - #21 ]
INFO  05:05:39,679 - #8 ,
INFO  05:05:39,679 - #27 c
INFO  05:05:39,679 - #5 ;
INFO  05:05:39,679 - #27 bool
INFO  05:05:39,679 - #27 s1
INFO  05:05:39,679 - #5 ;
INFO  05:05:39,680 - #3 {
INFO  05:05:39,680 - #13 void
INFO  05:05:39,681 - #27 main
INFO  05:05:39,682 - #6 (
INFO  05:05:39,682 - #7 )
INFO  05:05:39,682 - #27 int
INFO  05:05:39,682 - #27 bodovi
INFO  05:05:39,683 - #5 ;
INFO  05:05:39,683 - #27 bool
INFO  05:05:39,683 - #27 bt
INFO  05:05:39,683 - #5 ;
INFO  05:05:39,683 - #27 int
INFO  05:05:39,683 - #27 s
INFO  05:05:39,683 - #5 ;
INFO  05:05:39,684 - #3 {
INFO  05:05:39,684 - #27 nizch
INFO  05:05:39,685 - #12 =
INFO  05:05:39,686 - #32 new
INFO  05:05:39,686 - #27 char
INFO  05:05:39,686 - #20 [
INFO  05:05:39,686 - #26 3
INFO  05:05:39,686 - #21 ]
INFO  05:05:39,687 - #5 ;
INFO  05:05:39,687 - #4 }
INFO  05:05:39,687 - #4 }
INFO  05:05:39,700 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:05:39,701 - ===================================
INFO  05:05:39,706 - Deklarisana je konsanta int nula = 0
INFO  05:05:39,707 - Deklarisana je konsanta int jedan = 1
INFO  05:05:39,707 - Deklarisana je konsanta int pet = 5
INFO  05:05:39,707 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:05:39,707 - Deklarisan je niz niz
INFO  05:05:39,708 - Deklarisan je niz niz2
INFO  05:05:39,708 - Deklarisana promenljiva a
INFO  05:05:39,708 - Deklarisana promenljiva b
INFO  05:05:39,709 - Deklarisan je niz nizch
INFO  05:05:39,709 - Deklarisana promenljiva c
INFO  05:05:39,709 - Deklarisana promenljiva s1
INFO  05:05:39,709 - Obradjuje se funkcija main na liniji 12
INFO  05:05:39,709 - Deklarisana promenljiva bodovi
INFO  05:05:39,709 - Deklarisana promenljiva bt
INFO  05:05:39,710 - Deklarisana promenljiva s
INFO  05:05:39,711 - Deklarisana je niz (uz pomoc NEW)
ERROR 05:05:39,711 - Greska na liniji 42 :  nekompatibilni tipovi.
INFO  05:05:39,712 -  Print count calls = 0
INFO  05:05:39,712 -  Deklarisanih promenljivih ima = 11
INFO  05:05:39,712 - ===================================
ERROR 05:05:39,714 - Parsiranje NIJE uspesno zavrseno!
INFO  05:06:59,174 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:06:59,266 - #2 program
INFO  05:06:59,266 - #27 MJProgram
INFO  05:06:59,266 - #23 const
INFO  05:06:59,269 - #27 int
INFO  05:06:59,269 - #27 nula
INFO  05:06:59,271 - #12 =
INFO  05:06:59,272 - #26 0
INFO  05:06:59,272 - #5 ;
INFO  05:06:59,273 - #23 const
INFO  05:06:59,273 - #27 int
INFO  05:06:59,273 - #27 jedan
INFO  05:06:59,273 - #12 =
INFO  05:06:59,273 - #26 1
INFO  05:06:59,274 - #5 ;
INFO  05:06:59,274 - #23 const
INFO  05:06:59,274 - #27 int
INFO  05:06:59,274 - #27 pet
INFO  05:06:59,274 - #12 =
INFO  05:06:59,274 - #26 5
INFO  05:06:59,274 - #5 ;
INFO  05:06:59,274 - #23 const
INFO  05:06:59,275 - #27 char
INFO  05:06:59,275 - #27 pet1
INFO  05:06:59,275 - #12 =
INFO  05:06:59,275 - #28 c
INFO  05:06:59,275 - #5 ;
INFO  05:06:59,275 - #27 int
INFO  05:06:59,276 - #27 niz
INFO  05:06:59,276 - #20 [
INFO  05:06:59,276 - #21 ]
INFO  05:06:59,276 - #8 ,
INFO  05:06:59,276 - #27 niz2
INFO  05:06:59,276 - #20 [
INFO  05:06:59,276 - #21 ]
INFO  05:06:59,276 - #8 ,
INFO  05:06:59,277 - #27 a
INFO  05:06:59,277 - #8 ,
INFO  05:06:59,277 - #27 b
INFO  05:06:59,277 - #5 ;
INFO  05:06:59,277 - #27 char
INFO  05:06:59,278 - #27 nizch
INFO  05:06:59,278 - #20 [
INFO  05:06:59,278 - #21 ]
INFO  05:06:59,278 - #8 ,
INFO  05:06:59,278 - #27 c
INFO  05:06:59,278 - #5 ;
INFO  05:06:59,279 - #27 bool
INFO  05:06:59,279 - #27 s1
INFO  05:06:59,279 - #5 ;
INFO  05:06:59,279 - #3 {
INFO  05:06:59,279 - #13 void
INFO  05:06:59,281 - #27 main
INFO  05:06:59,281 - #6 (
INFO  05:06:59,281 - #7 )
INFO  05:06:59,281 - #27 int
INFO  05:06:59,281 - #27 bodovi
INFO  05:06:59,281 - #5 ;
INFO  05:06:59,282 - #27 bool
INFO  05:06:59,282 - #27 bt
INFO  05:06:59,282 - #5 ;
INFO  05:06:59,282 - #27 int
INFO  05:06:59,282 - #27 s
INFO  05:06:59,282 - #5 ;
INFO  05:06:59,282 - #3 {
INFO  05:06:59,283 - #27 nizch
INFO  05:06:59,284 - #12 =
INFO  05:06:59,285 - #32 new
INFO  05:06:59,285 - #27 char
INFO  05:06:59,285 - #20 [
INFO  05:06:59,285 - #26 3
INFO  05:06:59,285 - #21 ]
INFO  05:06:59,286 - #5 ;
INFO  05:06:59,286 - #4 }
INFO  05:06:59,286 - #4 }
INFO  05:06:59,306 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:06:59,306 - ===================================
INFO  05:06:59,340 - Deklarisana je konsanta int nula = 0
INFO  05:06:59,341 - Deklarisana je konsanta int jedan = 1
INFO  05:06:59,341 - Deklarisana je konsanta int pet = 5
INFO  05:06:59,341 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:06:59,341 - Deklarisan je niz niz
INFO  05:06:59,341 - Deklarisan je niz niz2
INFO  05:06:59,342 - Deklarisana promenljiva a
INFO  05:06:59,342 - Deklarisana promenljiva b
INFO  05:06:59,342 - Deklarisan je niz nizch
INFO  05:06:59,342 - Deklarisana promenljiva c
INFO  05:06:59,342 - Deklarisana promenljiva s1
INFO  05:06:59,343 - Obradjuje se funkcija main na liniji 12
INFO  05:06:59,343 - Deklarisana promenljiva bodovi
INFO  05:06:59,343 - Deklarisana promenljiva bt
INFO  05:06:59,343 - Deklarisana promenljiva s
INFO  05:07:06,151 - Deklarisana je niz (uz pomoc NEW)
INFO  05:08:51,984 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:08:52,072 - #2 program
INFO  05:08:52,073 - #27 MJProgram
INFO  05:08:52,073 - #23 const
INFO  05:08:52,076 - #27 int
INFO  05:08:52,076 - #27 nula
INFO  05:08:52,077 - #12 =
INFO  05:08:52,078 - #26 0
INFO  05:08:52,078 - #5 ;
INFO  05:08:52,078 - #23 const
INFO  05:08:52,079 - #27 int
INFO  05:08:52,079 - #27 jedan
INFO  05:08:52,079 - #12 =
INFO  05:08:52,079 - #26 1
INFO  05:08:52,079 - #5 ;
INFO  05:08:52,079 - #23 const
INFO  05:08:52,079 - #27 int
INFO  05:08:52,080 - #27 pet
INFO  05:08:52,080 - #12 =
INFO  05:08:52,080 - #26 5
INFO  05:08:52,080 - #5 ;
INFO  05:08:52,080 - #23 const
INFO  05:08:52,080 - #27 char
INFO  05:08:52,080 - #27 pet1
INFO  05:08:52,081 - #12 =
INFO  05:08:52,081 - #28 c
INFO  05:08:52,081 - #5 ;
INFO  05:08:52,081 - #27 int
INFO  05:08:52,082 - #27 niz
INFO  05:08:52,082 - #20 [
INFO  05:08:52,082 - #21 ]
INFO  05:08:52,082 - #8 ,
INFO  05:08:52,082 - #27 niz2
INFO  05:08:52,082 - #20 [
INFO  05:08:52,083 - #21 ]
INFO  05:08:52,083 - #8 ,
INFO  05:08:52,083 - #27 a
INFO  05:08:52,083 - #8 ,
INFO  05:08:52,083 - #27 b
INFO  05:08:52,083 - #5 ;
INFO  05:08:52,084 - #27 char
INFO  05:08:52,085 - #27 nizch
INFO  05:08:52,085 - #20 [
INFO  05:08:52,085 - #21 ]
INFO  05:08:52,085 - #8 ,
INFO  05:08:52,085 - #27 c
INFO  05:08:52,085 - #5 ;
INFO  05:08:52,086 - #27 bool
INFO  05:08:52,086 - #27 s1
INFO  05:08:52,086 - #5 ;
INFO  05:08:52,086 - #3 {
INFO  05:08:52,086 - #13 void
INFO  05:08:52,088 - #27 main
INFO  05:08:52,089 - #6 (
INFO  05:08:52,089 - #7 )
INFO  05:08:52,090 - #27 int
INFO  05:08:52,090 - #27 bodovi
INFO  05:08:52,090 - #5 ;
INFO  05:08:52,090 - #27 bool
INFO  05:08:52,090 - #27 bt
INFO  05:08:52,090 - #5 ;
INFO  05:08:52,090 - #27 int
INFO  05:08:52,091 - #27 s
INFO  05:08:52,091 - #5 ;
INFO  05:08:52,091 - #3 {
INFO  05:08:52,091 - #27 nizch
INFO  05:08:52,094 - #12 =
INFO  05:08:52,095 - #32 new
INFO  05:08:52,095 - #27 char
INFO  05:08:52,095 - #20 [
INFO  05:08:52,095 - #26 3
INFO  05:08:52,095 - #21 ]
INFO  05:08:52,096 - #5 ;
INFO  05:08:52,096 - #4 }
INFO  05:08:52,097 - #4 }
INFO  05:08:52,120 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:08:52,121 - ===================================
INFO  05:08:52,157 - Deklarisana je konsanta int nula = 0
INFO  05:08:52,158 - Deklarisana je konsanta int jedan = 1
INFO  05:08:52,158 - Deklarisana je konsanta int pet = 5
INFO  05:08:52,158 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:08:52,158 - Deklarisan je niz niz
INFO  05:08:52,158 - Deklarisan je niz niz2
INFO  05:08:52,158 - Deklarisana promenljiva a
INFO  05:08:52,158 - Deklarisana promenljiva b
INFO  05:08:52,159 - Deklarisan je niz nizch
INFO  05:08:52,159 - Deklarisana promenljiva c
INFO  05:08:52,159 - Deklarisana promenljiva s1
INFO  05:08:52,159 - Obradjuje se funkcija main na liniji 12
INFO  05:08:52,159 - Deklarisana promenljiva bodovi
INFO  05:08:52,159 - Deklarisana promenljiva bt
INFO  05:08:52,159 - Deklarisana promenljiva s
INFO  05:09:14,222 - Deklarisana je niz (uz pomoc NEW)
INFO  05:12:12,077 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:12:12,169 - #2 program
INFO  05:12:12,170 - #27 MJProgram
INFO  05:12:12,170 - #23 const
INFO  05:12:12,173 - #27 int
INFO  05:12:12,173 - #27 nula
INFO  05:12:12,174 - #12 =
INFO  05:12:12,174 - #26 0
INFO  05:12:12,174 - #5 ;
INFO  05:12:12,175 - #23 const
INFO  05:12:12,175 - #27 int
INFO  05:12:12,175 - #27 jedan
INFO  05:12:12,175 - #12 =
INFO  05:12:12,175 - #26 1
INFO  05:12:12,175 - #5 ;
INFO  05:12:12,175 - #23 const
INFO  05:12:12,176 - #27 int
INFO  05:12:12,176 - #27 pet
INFO  05:12:12,176 - #12 =
INFO  05:12:12,176 - #26 5
INFO  05:12:12,176 - #5 ;
INFO  05:12:12,176 - #23 const
INFO  05:12:12,176 - #27 char
INFO  05:12:12,176 - #27 pet1
INFO  05:12:12,176 - #12 =
INFO  05:12:12,176 - #28 c
INFO  05:12:12,177 - #5 ;
INFO  05:12:12,177 - #27 int
INFO  05:12:12,177 - #27 niz
INFO  05:12:12,177 - #20 [
INFO  05:12:12,177 - #21 ]
INFO  05:12:12,177 - #8 ,
INFO  05:12:12,177 - #27 niz2
INFO  05:12:12,178 - #20 [
INFO  05:12:12,178 - #21 ]
INFO  05:12:12,178 - #8 ,
INFO  05:12:12,178 - #27 a
INFO  05:12:12,178 - #8 ,
INFO  05:12:12,178 - #27 b
INFO  05:12:12,178 - #5 ;
INFO  05:12:12,178 - #27 char
INFO  05:12:12,179 - #27 nizch
INFO  05:12:12,179 - #20 [
INFO  05:12:12,179 - #21 ]
INFO  05:12:12,179 - #8 ,
INFO  05:12:12,179 - #27 c
INFO  05:12:12,179 - #5 ;
INFO  05:12:12,179 - #27 bool
INFO  05:12:12,179 - #27 s1
INFO  05:12:12,180 - #5 ;
INFO  05:12:12,180 - #3 {
INFO  05:12:12,180 - #13 void
INFO  05:12:12,181 - #27 main
INFO  05:12:12,182 - #6 (
INFO  05:12:12,182 - #7 )
INFO  05:12:12,182 - #27 int
INFO  05:12:12,182 - #27 bodovi
INFO  05:12:12,182 - #5 ;
INFO  05:12:12,182 - #27 bool
INFO  05:12:12,182 - #27 bt
INFO  05:12:12,182 - #5 ;
INFO  05:12:12,183 - #27 int
INFO  05:12:12,183 - #27 s
INFO  05:12:12,183 - #5 ;
INFO  05:12:12,183 - #3 {
INFO  05:12:12,183 - #27 nizch
INFO  05:12:12,185 - #12 =
INFO  05:12:12,185 - #32 new
INFO  05:12:12,185 - #27 char
INFO  05:12:12,185 - #20 [
INFO  05:12:12,186 - #26 3
INFO  05:12:12,186 - #21 ]
INFO  05:12:12,186 - #5 ;
INFO  05:12:12,186 - #4 }
INFO  05:12:12,187 - #4 }
INFO  05:12:12,200 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:12:12,201 - ===================================
INFO  05:12:12,242 - Deklarisana je konsanta int nula = 0
INFO  05:12:12,243 - Deklarisana je konsanta int jedan = 1
INFO  05:12:12,243 - Deklarisana je konsanta int pet = 5
INFO  05:12:12,243 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:12:12,243 - Deklarisan je niz niz
INFO  05:12:12,244 - Deklarisan je niz niz2
INFO  05:12:12,244 - Deklarisana promenljiva a
INFO  05:12:12,244 - Deklarisana promenljiva b
INFO  05:12:12,244 - Deklarisan je niz nizch
INFO  05:12:12,244 - Deklarisana promenljiva c
INFO  05:12:12,245 - Deklarisana promenljiva s1
INFO  05:12:12,245 - Obradjuje se funkcija main na liniji 12
INFO  05:12:12,245 - Deklarisana promenljiva bodovi
INFO  05:12:12,245 - Deklarisana promenljiva bt
INFO  05:12:12,245 - Deklarisana promenljiva s
INFO  05:13:42,298 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:13:42,377 - #2 program
INFO  05:13:42,377 - #27 MJProgram
INFO  05:13:42,377 - #23 const
INFO  05:13:42,379 - #27 int
INFO  05:13:42,380 - #27 nula
INFO  05:13:42,381 - #12 =
INFO  05:13:42,381 - #26 0
INFO  05:13:42,381 - #5 ;
INFO  05:13:42,382 - #23 const
INFO  05:13:42,382 - #27 int
INFO  05:13:42,382 - #27 jedan
INFO  05:13:42,382 - #12 =
INFO  05:13:42,382 - #26 1
INFO  05:13:42,383 - #5 ;
INFO  05:13:42,383 - #23 const
INFO  05:13:42,383 - #27 int
INFO  05:13:42,383 - #27 pet
INFO  05:13:42,383 - #12 =
INFO  05:13:42,383 - #26 5
INFO  05:13:42,383 - #5 ;
INFO  05:13:42,383 - #23 const
INFO  05:13:42,383 - #27 char
INFO  05:13:42,383 - #27 pet1
INFO  05:13:42,384 - #12 =
INFO  05:13:42,384 - #28 c
INFO  05:13:42,384 - #5 ;
INFO  05:13:42,384 - #27 char
INFO  05:13:42,384 - #27 nizch
INFO  05:13:42,384 - #20 [
INFO  05:13:42,384 - #21 ]
INFO  05:13:42,385 - #8 ,
INFO  05:13:42,385 - #27 c
INFO  05:13:42,385 - #5 ;
INFO  05:13:42,385 - #27 bool
INFO  05:13:42,385 - #27 s1
INFO  05:13:42,386 - #5 ;
INFO  05:13:42,386 - #3 {
INFO  05:13:42,386 - #13 void
INFO  05:13:42,388 - #27 main
INFO  05:13:42,388 - #6 (
INFO  05:13:42,388 - #7 )
INFO  05:13:42,388 - #27 int
INFO  05:13:42,389 - #27 bodovi
INFO  05:13:42,389 - #5 ;
INFO  05:13:42,389 - #27 bool
INFO  05:13:42,389 - #27 bt
INFO  05:13:42,389 - #5 ;
INFO  05:13:42,389 - #27 int
INFO  05:13:42,390 - #27 s
INFO  05:13:42,390 - #5 ;
INFO  05:13:42,390 - #3 {
INFO  05:13:42,390 - #27 nizch
INFO  05:13:42,392 - #12 =
INFO  05:13:42,392 - #32 new
INFO  05:13:42,393 - #27 char
INFO  05:13:42,393 - #20 [
INFO  05:13:42,393 - #26 3
INFO  05:13:42,393 - #21 ]
INFO  05:13:42,394 - #5 ;
INFO  05:13:42,394 - #4 }
INFO  05:13:42,395 - #4 }
INFO  05:13:42,414 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              NoDecl(
              ) [NoDecl]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   nula
                   0
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 jedan
                 1
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              ConstDeclNumber(
               pet
               5
              ) [ConstDeclNumber]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationConst(
          ConstDeclarations(
            Type(
             char
            ) [Type]
            ConstDeclChar(
             pet1
             c
            ) [ConstDeclChar]
          ) [ConstDeclarations]
        ) [DeclarationConst]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:13:42,416 - ===================================
INFO  05:13:42,461 - Deklarisana je konsanta int nula = 0
INFO  05:13:42,461 - Deklarisana je konsanta int jedan = 1
INFO  05:13:42,461 - Deklarisana je konsanta int pet = 5
INFO  05:13:42,461 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:14:19,245 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:14:19,323 - #2 program
INFO  05:14:19,323 - #27 MJProgram
INFO  05:14:19,323 - #23 const
INFO  05:14:19,326 - #27 int
INFO  05:14:19,326 - #27 nula
INFO  05:14:19,327 - #12 =
INFO  05:14:19,327 - #26 0
INFO  05:14:19,327 - #5 ;
INFO  05:14:19,328 - #23 const
INFO  05:14:19,328 - #27 int
INFO  05:14:19,328 - #27 jedan
INFO  05:14:19,328 - #12 =
INFO  05:14:19,328 - #26 1
INFO  05:14:19,328 - #5 ;
INFO  05:14:19,328 - #23 const
INFO  05:14:19,329 - #27 int
INFO  05:14:19,329 - #27 pet
INFO  05:14:19,329 - #12 =
INFO  05:14:19,329 - #26 5
INFO  05:14:19,329 - #5 ;
INFO  05:14:19,329 - #23 const
INFO  05:14:19,329 - #27 char
INFO  05:14:19,329 - #27 pet1
INFO  05:14:19,329 - #12 =
INFO  05:14:19,329 - #28 c
INFO  05:14:19,330 - #5 ;
INFO  05:14:19,330 - #27 char
INFO  05:14:19,330 - #27 nizch
INFO  05:14:19,330 - #20 [
INFO  05:14:19,330 - #21 ]
INFO  05:14:19,330 - #8 ,
INFO  05:14:19,330 - #27 c
INFO  05:14:19,330 - #5 ;
INFO  05:14:19,331 - #27 bool
INFO  05:14:19,331 - #27 s1
INFO  05:14:19,331 - #5 ;
INFO  05:14:19,331 - #3 {
INFO  05:14:19,331 - #13 void
INFO  05:14:19,333 - #27 main
INFO  05:14:19,333 - #6 (
INFO  05:14:19,333 - #7 )
INFO  05:14:19,333 - #27 int
INFO  05:14:19,334 - #27 bodovi
INFO  05:14:19,334 - #5 ;
INFO  05:14:19,334 - #27 bool
INFO  05:14:19,334 - #27 bt
INFO  05:14:19,334 - #5 ;
INFO  05:14:19,334 - #27 int
INFO  05:14:19,334 - #27 s
INFO  05:14:19,334 - #5 ;
INFO  05:14:19,334 - #3 {
INFO  05:14:19,335 - #27 nizch
INFO  05:14:19,336 - #12 =
INFO  05:14:19,336 - #32 new
INFO  05:14:19,336 - #27 char
INFO  05:14:19,336 - #20 [
INFO  05:14:19,337 - #26 3
INFO  05:14:19,337 - #21 ]
INFO  05:14:19,337 - #5 ;
INFO  05:14:19,337 - #4 }
INFO  05:14:19,338 - #4 }
INFO  05:14:19,357 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              NoDecl(
              ) [NoDecl]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   nula
                   0
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 jedan
                 1
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              ConstDeclNumber(
               pet
               5
              ) [ConstDeclNumber]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationConst(
          ConstDeclarations(
            Type(
             char
            ) [Type]
            ConstDeclChar(
             pet1
             c
            ) [ConstDeclChar]
          ) [ConstDeclarations]
        ) [DeclarationConst]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:14:19,360 - ===================================
INFO  05:14:19,410 - Deklarisana je konsanta int nula = 0
INFO  05:14:19,410 - Deklarisana je konsanta int jedan = 1
INFO  05:14:19,410 - Deklarisana je konsanta int pet = 5
INFO  05:14:19,410 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:14:55,145 - Deklarisan je niz nizch
INFO  05:15:40,570 - Deklarisana promenljiva c
INFO  05:15:45,002 - Deklarisana promenljiva s1
INFO  05:15:45,004 - Obradjuje se funkcija main na liniji 12
INFO  05:15:47,741 - Deklarisana promenljiva bodovi
INFO  05:15:52,444 - Deklarisana promenljiva bt
INFO  05:15:54,026 - Deklarisana promenljiva s
INFO  05:16:17,356 - Deklarisana je niz (uz pomoc NEW)
ERROR 05:16:37,875 - Greska na liniji 42 :  nekompatibilni tipovi.
INFO  05:17:00,381 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:17:00,499 - #2 program
INFO  05:17:00,499 - #27 MJProgram
INFO  05:17:00,500 - #23 const
INFO  05:17:00,504 - #27 int
INFO  05:17:00,504 - #27 nula
INFO  05:17:00,506 - #12 =
INFO  05:17:00,506 - #26 0
INFO  05:17:00,506 - #5 ;
INFO  05:17:00,507 - #23 const
INFO  05:17:00,507 - #27 int
INFO  05:17:00,507 - #27 jedan
INFO  05:17:00,507 - #12 =
INFO  05:17:00,507 - #26 1
INFO  05:17:00,508 - #5 ;
INFO  05:17:00,508 - #23 const
INFO  05:17:00,508 - #27 int
INFO  05:17:00,508 - #27 pet
INFO  05:17:00,508 - #12 =
INFO  05:17:00,508 - #26 5
INFO  05:17:00,508 - #5 ;
INFO  05:17:00,508 - #23 const
INFO  05:17:00,508 - #27 char
INFO  05:17:00,509 - #27 pet1
INFO  05:17:00,509 - #12 =
INFO  05:17:00,509 - #28 c
INFO  05:17:00,509 - #5 ;
INFO  05:17:00,509 - #27 char
INFO  05:17:00,509 - #27 nizch
INFO  05:17:00,509 - #20 [
INFO  05:17:00,510 - #21 ]
INFO  05:17:00,510 - #8 ,
INFO  05:17:00,510 - #27 c
INFO  05:17:00,510 - #5 ;
INFO  05:17:00,510 - #27 bool
INFO  05:17:00,511 - #27 s1
INFO  05:17:00,511 - #5 ;
INFO  05:17:00,511 - #3 {
INFO  05:17:00,511 - #13 void
INFO  05:17:00,513 - #27 main
INFO  05:17:00,513 - #6 (
INFO  05:17:00,513 - #7 )
INFO  05:17:00,514 - #27 int
INFO  05:17:00,514 - #27 bodovi
INFO  05:17:00,514 - #5 ;
INFO  05:17:00,514 - #27 bool
INFO  05:17:00,514 - #27 bt
INFO  05:17:00,514 - #5 ;
INFO  05:17:00,515 - #27 int
INFO  05:17:00,515 - #27 s
INFO  05:17:00,515 - #5 ;
INFO  05:17:00,515 - #3 {
INFO  05:17:00,516 - #27 nizch
INFO  05:17:00,517 - #12 =
INFO  05:17:00,518 - #32 new
INFO  05:17:00,518 - #27 char
INFO  05:17:00,518 - #20 [
INFO  05:17:00,518 - #26 3
INFO  05:17:00,518 - #21 ]
INFO  05:17:00,519 - #5 ;
INFO  05:17:00,519 - #4 }
INFO  05:17:00,520 - #4 }
INFO  05:17:00,539 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              NoDecl(
              ) [NoDecl]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   nula
                   0
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 jedan
                 1
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              ConstDeclNumber(
               pet
               5
              ) [ConstDeclNumber]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationConst(
          ConstDeclarations(
            Type(
             char
            ) [Type]
            ConstDeclChar(
             pet1
             c
            ) [ConstDeclChar]
          ) [ConstDeclarations]
        ) [DeclarationConst]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:17:00,541 - ===================================
INFO  05:17:00,585 - Deklarisana je konsanta int nula = 0
INFO  05:17:00,586 - Deklarisana je konsanta int jedan = 1
INFO  05:17:00,586 - Deklarisana je konsanta int pet = 5
INFO  05:17:00,587 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:17:00,587 - Deklarisan je niz nizch
INFO  05:17:07,272 - Deklarisana promenljiva c
INFO  05:17:07,273 - Deklarisana promenljiva s1
INFO  05:17:07,273 - Obradjuje se funkcija main na liniji 12
INFO  05:17:07,273 - Deklarisana promenljiva bodovi
INFO  05:17:07,274 - Deklarisana promenljiva bt
INFO  05:17:07,274 - Deklarisana promenljiva s
INFO  05:18:00,308 - Deklarisana je niz (uz pomoc NEW)
ERROR 05:18:00,823 - Greska na liniji 42 :  nekompatibilni tipovi.
INFO  05:18:00,823 -  Print count calls = 0
INFO  05:18:00,823 -  Deklarisanih promenljivih ima = 7
INFO  05:18:00,823 - ===================================
ERROR 05:18:00,825 - Parsiranje NIJE uspesno zavrseno!
INFO  05:18:39,329 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:18:39,415 - #2 program
INFO  05:18:39,416 - #27 MJProgram
INFO  05:18:39,416 - #23 const
INFO  05:18:39,418 - #27 int
INFO  05:18:39,418 - #27 nula
INFO  05:18:39,420 - #12 =
INFO  05:18:39,420 - #26 0
INFO  05:18:39,420 - #5 ;
INFO  05:18:39,420 - #23 const
INFO  05:18:39,421 - #27 int
INFO  05:18:39,421 - #27 jedan
INFO  05:18:39,421 - #12 =
INFO  05:18:39,421 - #26 1
INFO  05:18:39,421 - #5 ;
INFO  05:18:39,421 - #23 const
INFO  05:18:39,421 - #27 int
INFO  05:18:39,421 - #27 pet
INFO  05:18:39,421 - #12 =
INFO  05:18:39,422 - #26 5
INFO  05:18:39,422 - #5 ;
INFO  05:18:39,422 - #23 const
INFO  05:18:39,422 - #27 char
INFO  05:18:39,422 - #27 pet1
INFO  05:18:39,422 - #12 =
INFO  05:18:39,422 - #28 c
INFO  05:18:39,422 - #5 ;
INFO  05:18:39,423 - #27 char
INFO  05:18:39,423 - #27 nizch
INFO  05:18:39,423 - #20 [
INFO  05:18:39,423 - #21 ]
INFO  05:18:39,423 - #8 ,
INFO  05:18:39,423 - #27 c
INFO  05:18:39,424 - #5 ;
INFO  05:18:39,424 - #27 bool
INFO  05:18:39,424 - #27 s1
INFO  05:18:39,425 - #5 ;
INFO  05:18:39,425 - #3 {
INFO  05:18:39,425 - #13 void
INFO  05:18:39,427 - #27 main
INFO  05:18:39,427 - #6 (
INFO  05:18:39,427 - #7 )
INFO  05:18:39,427 - #27 int
INFO  05:18:39,428 - #27 bodovi
INFO  05:18:39,428 - #5 ;
INFO  05:18:39,428 - #27 bool
INFO  05:18:39,428 - #27 bt
INFO  05:18:39,428 - #5 ;
INFO  05:18:39,428 - #27 int
INFO  05:18:39,429 - #27 s
INFO  05:18:39,429 - #5 ;
INFO  05:18:39,429 - #3 {
INFO  05:18:39,430 - #27 nizch
INFO  05:18:39,431 - #12 =
INFO  05:18:39,432 - #32 new
INFO  05:18:39,432 - #27 char
INFO  05:18:39,432 - #20 [
INFO  05:18:39,432 - #26 3
INFO  05:18:39,432 - #21 ]
INFO  05:18:39,433 - #5 ;
INFO  05:18:39,433 - #4 }
INFO  05:18:39,434 - #4 }
INFO  05:18:39,456 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              NoDecl(
              ) [NoDecl]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   nula
                   0
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 jedan
                 1
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               int
              ) [Type]
              ConstDeclNumber(
               pet
               5
              ) [ConstDeclNumber]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationConst(
          ConstDeclarations(
            Type(
             char
            ) [Type]
            ConstDeclChar(
             pet1
             c
            ) [ConstDeclChar]
          ) [ConstDeclarations]
        ) [DeclarationConst]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorIDENT(
             nizch
            ) [DesignatorIDENT]
            TermExpr(
              TermFactor(
                FactorNEW(
                  Type(
                   char
                  ) [Type]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       3
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [FactorNEW]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:18:39,460 - ===================================
INFO  05:18:39,502 - Deklarisana je konsanta int nula = 0
INFO  05:18:39,503 - Deklarisana je konsanta int jedan = 1
INFO  05:18:39,503 - Deklarisana je konsanta int pet = 5
INFO  05:18:39,503 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:18:39,503 - Deklarisan je niz nizch
INFO  05:18:39,503 - Deklarisana promenljiva c
INFO  05:18:39,504 - Deklarisana promenljiva s1
INFO  05:18:39,504 - Obradjuje se funkcija main na liniji 12
INFO  05:18:39,504 - Deklarisana promenljiva bodovi
INFO  05:18:39,504 - Deklarisana promenljiva bt
INFO  05:18:39,504 - Deklarisana promenljiva s
INFO  05:22:25,193 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:22:25,259 - #2 program
INFO  05:22:25,259 - #27 MJProgram
INFO  05:22:25,259 - #23 const
INFO  05:22:25,261 - #27 int
INFO  05:22:25,261 - #27 jedan
INFO  05:22:25,262 - #12 =
INFO  05:22:25,262 - #26 1
INFO  05:22:25,262 - #5 ;
INFO  05:22:25,262 - #27 char
INFO  05:22:25,263 - #27 nizch
INFO  05:22:25,263 - #20 [
INFO  05:22:25,263 - #21 ]
INFO  05:22:25,264 - #8 ,
INFO  05:22:25,264 - #27 c
INFO  05:22:25,264 - #5 ;
INFO  05:22:25,264 - #3 {
INFO  05:22:25,265 - #13 void
INFO  05:22:25,266 - #27 main
INFO  05:22:25,266 - #6 (
INFO  05:22:25,267 - #7 )
INFO  05:22:25,267 - #3 {
INFO  05:22:25,267 - #9 print
INFO  05:22:25,269 - #6 (
INFO  05:22:25,269 - #27 nizch
INFO  05:22:25,269 - #20 [
INFO  05:22:25,269 - #27 jedan
INFO  05:22:25,269 - #14 *
INFO  05:22:25,270 - #26 2
INFO  05:22:25,272 - #21 ]
INFO  05:22:25,272 - #7 )
INFO  05:22:25,273 - #5 ;
INFO  05:22:25,273 - #4 }
INFO  05:22:25,273 - #4 }
INFO  05:22:25,286 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizch
                    TermExpr(
                      TermMulop(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             jedan
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                        MulopMUL(
                        ) [MulopMUL]
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermMulop]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:22:25,287 - ===================================
INFO  05:22:25,291 - Deklarisana je konsanta int jedan = 1
INFO  05:22:25,292 - Deklarisan je niz nizch
INFO  05:22:25,292 - Deklarisana promenljiva c
INFO  05:22:25,292 - Obradjuje se funkcija main na liniji 12
INFO  05:22:25,293 - TIP 1: true  TIP 2: true
INFO  05:23:16,652 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:23:16,735 - #2 program
INFO  05:23:16,736 - #27 MJProgram
INFO  05:23:16,736 - #23 const
INFO  05:23:16,739 - #27 int
INFO  05:23:16,739 - #27 jedan
INFO  05:23:16,740 - #12 =
INFO  05:23:16,740 - #26 1
INFO  05:23:16,740 - #5 ;
INFO  05:23:16,741 - #27 char
INFO  05:23:16,741 - #27 nizch
INFO  05:23:16,741 - #20 [
INFO  05:23:16,741 - #21 ]
INFO  05:23:16,741 - #8 ,
INFO  05:23:16,742 - #27 c
INFO  05:23:16,742 - #5 ;
INFO  05:23:16,742 - #3 {
INFO  05:23:16,742 - #13 void
INFO  05:23:16,744 - #27 main
INFO  05:23:16,744 - #6 (
INFO  05:23:16,744 - #7 )
INFO  05:23:16,744 - #3 {
INFO  05:23:16,745 - #9 print
INFO  05:23:16,746 - #6 (
INFO  05:23:16,746 - #27 nizch
INFO  05:23:16,746 - #20 [
INFO  05:23:16,746 - #27 jedan
INFO  05:23:16,746 - #14 *
INFO  05:23:16,747 - #26 2
INFO  05:23:16,749 - #21 ]
INFO  05:23:16,750 - #7 )
INFO  05:23:16,750 - #5 ;
INFO  05:23:16,750 - #4 }
INFO  05:23:16,750 - #4 }
INFO  05:23:16,768 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizch
                    TermExpr(
                      TermMulop(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             jedan
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                        MulopMUL(
                        ) [MulopMUL]
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermMulop]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:23:16,769 - ===================================
INFO  05:23:16,811 - Deklarisana je konsanta int jedan = 1
INFO  05:23:16,812 - Deklarisan je niz nizch
INFO  05:23:16,812 - Deklarisana promenljiva c
INFO  05:23:16,812 - Obradjuje se funkcija main na liniji 12
INFO  05:23:24,771 - TIP 1: true  TIP 2: true
INFO  05:25:39,317 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:25:39,399 - #2 program
INFO  05:25:39,399 - #27 MJProgram
INFO  05:25:39,399 - #23 const
INFO  05:25:39,402 - #27 int
INFO  05:25:39,402 - #27 jedan
INFO  05:25:39,403 - #12 =
INFO  05:25:39,404 - #26 1
INFO  05:25:39,404 - #5 ;
INFO  05:25:39,405 - #27 char
INFO  05:25:39,406 - #27 nizch
INFO  05:25:39,406 - #20 [
INFO  05:25:39,406 - #21 ]
INFO  05:25:39,406 - #8 ,
INFO  05:25:39,407 - #27 c
INFO  05:25:39,407 - #5 ;
INFO  05:25:39,407 - #3 {
INFO  05:25:39,407 - #13 void
INFO  05:25:39,409 - #27 main
INFO  05:25:39,409 - #6 (
INFO  05:25:39,410 - #7 )
INFO  05:25:39,410 - #3 {
INFO  05:25:39,410 - #9 print
INFO  05:25:39,412 - #6 (
INFO  05:25:39,412 - #27 nizch
INFO  05:25:39,412 - #20 [
INFO  05:25:39,412 - #27 jedan
INFO  05:25:39,412 - #14 *
INFO  05:25:39,413 - #26 2
INFO  05:25:39,416 - #21 ]
INFO  05:25:39,416 - #7 )
INFO  05:25:39,417 - #5 ;
INFO  05:25:39,417 - #4 }
INFO  05:25:39,417 - #4 }
INFO  05:25:39,434 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizch
                    TermExpr(
                      TermMulop(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             jedan
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                        MulopMUL(
                        ) [MulopMUL]
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermMulop]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:25:39,435 - ===================================
INFO  05:25:39,440 - Deklarisana je konsanta int jedan = 1
INFO  05:25:39,440 - Deklarisan je niz nizch
INFO  05:25:39,440 - Deklarisana promenljiva c
INFO  05:25:39,440 - Obradjuje se funkcija main na liniji 12
INFO  05:25:39,441 - TIP 1: true  TIP 2: true
INFO  05:25:39,441 -  Print count calls = 1
INFO  05:25:39,441 -  Deklarisanih promenljivih ima = 2
INFO  05:25:39,441 - ===================================
INFO  05:25:39,444 - Parsiranje uspesno zavrseno!
INFO  05:26:02,507 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:26:02,574 - #2 program
INFO  05:26:02,575 - #27 MJProgram
INFO  05:26:02,575 - #23 const
INFO  05:26:02,576 - #27 int
INFO  05:26:02,576 - #27 jedan
INFO  05:26:02,577 - #12 =
INFO  05:26:02,578 - #26 1
INFO  05:26:02,578 - #5 ;
INFO  05:26:02,578 - #27 char
INFO  05:26:02,579 - #27 nizch
INFO  05:26:02,579 - #20 [
INFO  05:26:02,579 - #21 ]
INFO  05:26:02,579 - #8 ,
INFO  05:26:02,579 - #27 c
INFO  05:26:02,579 - #5 ;
INFO  05:26:02,579 - #3 {
INFO  05:26:02,580 - #13 void
INFO  05:26:02,581 - #27 main
INFO  05:26:02,581 - #6 (
INFO  05:26:02,581 - #7 )
INFO  05:26:02,581 - #3 {
INFO  05:26:02,581 - #9 print
INFO  05:26:02,582 - #6 (
INFO  05:26:02,583 - #27 nizch
INFO  05:26:02,583 - #20 [
INFO  05:26:02,583 - #26 1
INFO  05:26:02,583 - #21 ]
INFO  05:26:02,583 - #7 )
INFO  05:26:02,584 - #5 ;
INFO  05:26:02,584 - #4 }
INFO  05:26:02,584 - #4 }
INFO  05:26:02,596 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizch
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         1
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:26:02,597 - ===================================
INFO  05:26:02,601 - Deklarisana je konsanta int jedan = 1
INFO  05:26:02,602 - Deklarisan je niz nizch
INFO  05:26:02,602 - Deklarisana promenljiva c
INFO  05:26:02,602 - Obradjuje se funkcija main na liniji 12
INFO  05:26:02,603 -  Print count calls = 1
INFO  05:26:02,603 -  Deklarisanih promenljivih ima = 2
INFO  05:26:02,603 - ===================================
INFO  05:26:02,606 - Parsiranje uspesno zavrseno!
INFO  05:26:26,698 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:26:26,757 - #2 program
INFO  05:26:26,757 - #27 MJProgram
INFO  05:26:26,758 - #23 const
INFO  05:26:26,759 - #27 int
INFO  05:26:26,759 - #27 jedan
INFO  05:26:26,760 - #12 =
INFO  05:26:26,760 - #26 1
INFO  05:26:26,761 - #5 ;
INFO  05:26:26,761 - #27 char
INFO  05:26:26,762 - #27 nizch
INFO  05:26:26,762 - #20 [
INFO  05:26:26,762 - #21 ]
INFO  05:26:26,762 - #8 ,
INFO  05:26:26,762 - #27 c
INFO  05:26:26,762 - #5 ;
INFO  05:26:26,763 - #3 {
INFO  05:26:26,763 - #13 void
INFO  05:26:26,765 - #27 main
INFO  05:26:26,765 - #6 (
INFO  05:26:26,765 - #7 )
INFO  05:26:26,765 - #3 {
INFO  05:26:26,765 - #9 print
INFO  05:26:26,767 - #6 (
INFO  05:26:26,767 - #27 nizch
INFO  05:26:26,767 - #20 [
INFO  05:26:26,767 - #26 1
INFO  05:26:26,767 - #21 ]
INFO  05:26:26,768 - #7 )
INFO  05:26:26,768 - #5 ;
INFO  05:26:26,769 - #4 }
INFO  05:26:26,769 - #4 }
INFO  05:26:26,781 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   nizch
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         1
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:26:26,781 - ===================================
INFO  05:26:26,786 - Deklarisana je konsanta int jedan = 1
INFO  05:26:26,786 - Deklarisan je niz nizch
INFO  05:26:26,786 - Deklarisana promenljiva c
INFO  05:26:26,786 - Obradjuje se funkcija main na liniji 12
INFO  05:26:26,787 -  Print count calls = 1
INFO  05:26:26,787 -  Deklarisanih promenljivih ima = 2
INFO  05:26:26,787 - ===================================
INFO  05:26:26,789 - Parsiranje uspesno zavrseno!
INFO  05:26:56,804 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:26:56,865 - #2 program
INFO  05:26:56,865 - #27 MJProgram
INFO  05:26:56,866 - #23 const
INFO  05:26:56,867 - #27 int
INFO  05:26:56,867 - #27 jedan
INFO  05:26:56,868 - #12 =
INFO  05:26:56,868 - #26 1
INFO  05:26:56,869 - #5 ;
INFO  05:26:56,869 - #27 char
INFO  05:26:56,869 - #27 nizch
INFO  05:26:56,870 - #20 [
INFO  05:26:56,870 - #21 ]
INFO  05:26:56,870 - #8 ,
INFO  05:26:56,870 - #27 c
INFO  05:26:56,870 - #5 ;
INFO  05:26:56,871 - #3 {
INFO  05:26:56,871 - #13 void
INFO  05:26:56,873 - #27 main
INFO  05:26:56,873 - #6 (
INFO  05:26:56,873 - #7 )
INFO  05:26:56,873 - #3 {
INFO  05:26:56,874 - #27 nizch
INFO  05:26:56,875 - #20 [
INFO  05:26:56,875 - #27 jedan
INFO  05:26:56,875 - #21 ]
INFO  05:26:56,876 - #12 =
INFO  05:26:56,876 - #28 b
INFO  05:26:56,876 - #5 ;
INFO  05:26:56,876 - #4 }
INFO  05:26:56,877 - #4 }
INFO  05:26:56,888 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorExpr(
             nizch
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     jedan
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignatorExpr]
            TermExpr(
              TermFactor(
                FactorChar(
                 b
                ) [FactorChar]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:26:56,889 - ===================================
INFO  05:26:56,892 - Deklarisana je konsanta int jedan = 1
INFO  05:26:56,893 - Deklarisan je niz nizch
INFO  05:26:56,893 - Deklarisana promenljiva c
INFO  05:26:56,893 - Obradjuje se funkcija main na liniji 12
INFO  05:26:56,893 -  Print count calls = 0
INFO  05:26:56,893 -  Deklarisanih promenljivih ima = 2
INFO  05:26:56,894 - ===================================
INFO  05:26:56,896 - Parsiranje uspesno zavrseno!
INFO  05:27:22,755 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:27:22,861 - #2 program
INFO  05:27:22,861 - #27 MJProgram
INFO  05:27:22,862 - #23 const
INFO  05:27:22,864 - #27 int
INFO  05:27:22,864 - #27 jedan
INFO  05:27:22,866 - #12 =
INFO  05:27:22,867 - #26 1
INFO  05:27:22,867 - #5 ;
INFO  05:27:22,867 - #27 char
INFO  05:27:22,868 - #27 nizch
INFO  05:27:22,868 - #20 [
INFO  05:27:22,868 - #21 ]
INFO  05:27:22,869 - #8 ,
INFO  05:27:22,869 - #27 c
INFO  05:27:22,869 - #5 ;
INFO  05:27:22,870 - #3 {
INFO  05:27:22,871 - #13 void
INFO  05:27:22,873 - #27 main
INFO  05:27:22,873 - #6 (
INFO  05:27:22,874 - #7 )
INFO  05:27:22,874 - #3 {
INFO  05:27:22,874 - #27 nizch
INFO  05:27:22,876 - #20 [
INFO  05:27:22,876 - #27 jedan
INFO  05:27:22,876 - #21 ]
INFO  05:27:22,877 - #12 =
INFO  05:27:22,878 - #28 b
INFO  05:27:22,878 - #5 ;
INFO  05:27:22,878 - #4 }
INFO  05:27:22,879 - #4 }
INFO  05:27:22,899 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorExpr(
             nizch
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     jedan
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignatorExpr]
            TermExpr(
              TermFactor(
                FactorChar(
                 b
                ) [FactorChar]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:27:22,900 - ===================================
INFO  05:27:22,945 - Deklarisana je konsanta int jedan = 1
INFO  05:27:22,945 - Deklarisan je niz nizch
INFO  05:27:22,945 - Deklarisana promenljiva c
INFO  05:27:22,946 - Obradjuje se funkcija main na liniji 12
INFO  05:27:43,118 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:27:43,207 - #2 program
INFO  05:27:43,207 - #27 MJProgram
INFO  05:27:43,207 - #23 const
INFO  05:27:43,210 - #27 int
INFO  05:27:43,210 - #27 jedan
INFO  05:27:43,211 - #12 =
INFO  05:27:43,211 - #26 1
INFO  05:27:43,211 - #5 ;
INFO  05:27:43,212 - #27 char
INFO  05:27:43,212 - #27 nizch
INFO  05:27:43,212 - #20 [
INFO  05:27:43,212 - #21 ]
INFO  05:27:43,212 - #8 ,
INFO  05:27:43,213 - #27 c
INFO  05:27:43,213 - #5 ;
INFO  05:27:43,213 - #3 {
INFO  05:27:43,214 - #13 void
INFO  05:27:43,216 - #27 main
INFO  05:27:43,216 - #6 (
INFO  05:27:43,216 - #7 )
INFO  05:27:43,217 - #3 {
INFO  05:27:43,217 - #27 nizch
INFO  05:27:43,218 - #20 [
INFO  05:27:43,218 - #27 jedan
INFO  05:27:43,219 - #21 ]
INFO  05:27:43,219 - #12 =
INFO  05:27:43,219 - #28 b
INFO  05:27:43,220 - #5 ;
INFO  05:27:43,220 - #4 }
INFO  05:27:43,221 - #4 }
INFO  05:27:43,239 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorExpr(
             nizch
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     jedan
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignatorExpr]
            TermExpr(
              TermFactor(
                FactorChar(
                 b
                ) [FactorChar]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:27:43,240 - ===================================
INFO  05:27:43,281 - Deklarisana je konsanta int jedan = 1
INFO  05:27:43,282 - Deklarisan je niz nizch
INFO  05:27:43,282 - Deklarisana promenljiva c
INFO  05:27:43,282 - Obradjuje se funkcija main na liniji 12
INFO  05:27:45,294 -  Print count calls = 0
INFO  05:27:45,294 -  Deklarisanih promenljivih ima = 2
INFO  05:27:45,295 - ===================================
INFO  05:27:45,317 - Parsiranje uspesno zavrseno!
INFO  05:27:56,218 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:27:56,329 - #2 program
INFO  05:27:56,329 - #27 MJProgram
INFO  05:27:56,330 - #23 const
INFO  05:27:56,333 - #27 int
INFO  05:27:56,333 - #27 jedan
INFO  05:27:56,334 - #12 =
INFO  05:27:56,335 - #26 1
INFO  05:27:56,335 - #5 ;
INFO  05:27:56,335 - #27 char
INFO  05:27:56,336 - #27 nizch
INFO  05:27:56,336 - #20 [
INFO  05:27:56,336 - #21 ]
INFO  05:27:56,336 - #8 ,
INFO  05:27:56,337 - #27 c
INFO  05:27:56,337 - #5 ;
INFO  05:27:56,337 - #3 {
INFO  05:27:56,337 - #13 void
INFO  05:27:56,339 - #27 main
INFO  05:27:56,339 - #6 (
INFO  05:27:56,340 - #7 )
INFO  05:27:56,340 - #3 {
INFO  05:27:56,340 - #27 nizch
INFO  05:27:56,341 - #20 [
INFO  05:27:56,342 - #27 jedan
INFO  05:27:56,342 - #21 ]
INFO  05:27:56,342 - #12 =
INFO  05:27:56,343 - #28 b
INFO  05:27:56,343 - #5 ;
INFO  05:27:56,343 - #4 }
INFO  05:27:56,343 - #4 }
INFO  05:27:56,361 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorExpr(
             nizch
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     jedan
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignatorExpr]
            TermExpr(
              TermFactor(
                FactorChar(
                 b
                ) [FactorChar]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:27:56,361 - ===================================
INFO  05:27:56,400 - Deklarisana je konsanta int jedan = 1
INFO  05:27:56,401 - Deklarisan je niz nizch
INFO  05:27:56,401 - Deklarisana promenljiva c
INFO  05:27:56,401 - Obradjuje se funkcija main na liniji 12
INFO  05:29:09,366 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:29:09,425 - #2 program
INFO  05:29:09,425 - #27 MJProgram
INFO  05:29:09,425 - #23 const
INFO  05:29:09,427 - #27 int
INFO  05:29:09,427 - #27 jedan
INFO  05:29:09,428 - #12 =
INFO  05:29:09,428 - #26 1
INFO  05:29:09,428 - #5 ;
INFO  05:29:09,429 - #27 char
INFO  05:29:09,429 - #27 nizch
INFO  05:29:09,429 - #20 [
INFO  05:29:09,429 - #21 ]
INFO  05:29:09,429 - #8 ,
INFO  05:29:09,430 - #27 c
INFO  05:29:09,430 - #5 ;
INFO  05:29:09,430 - #3 {
INFO  05:29:09,430 - #13 void
INFO  05:29:09,431 - #27 main
INFO  05:29:09,432 - #6 (
INFO  05:29:09,432 - #7 )
INFO  05:29:09,432 - #3 {
INFO  05:29:09,432 - #27 nizch
INFO  05:29:09,434 - #20 [
INFO  05:29:09,434 - #26 0
INFO  05:29:09,434 - #21 ]
INFO  05:29:09,434 - #12 =
INFO  05:29:09,434 - #28 a
INFO  05:29:09,435 - #5 ;
INFO  05:29:09,435 - #4 }
INFO  05:29:09,435 - #4 }
INFO  05:29:09,445 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      NoDecl(
      ) [NoDecl]
      DeclarationConst(
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstDeclNumber(
           jedan
           1
          ) [ConstDeclNumber]
        ) [ConstDeclarations]
      ) [DeclarationConst]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         char
        ) [Type]
        VarMul(
          VarItemArr(
           nizch
          ) [VarItemArr]
          VarOne(
            VarItemIdent(
             c
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarMul]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      NoDecl(
      ) [NoDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesignatorStmt(
          Assignment(
            DesignatorExpr(
             nizch
              TermExpr(
                TermFactor(
                  FactorNUMBER(
                   0
                  ) [FactorNUMBER]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignatorExpr]
            TermExpr(
              TermFactor(
                FactorChar(
                 a
                ) [FactorChar]
              ) [TermFactor]
            ) [TermExpr]
          ) [Assignment]
        ) [DesignatorStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:29:09,446 - ===================================
INFO  05:29:09,450 - Deklarisana je konsanta int jedan = 1
INFO  05:29:09,450 - Deklarisan je niz nizch
INFO  05:29:09,450 - Deklarisana promenljiva c
INFO  05:29:09,450 - Obradjuje se funkcija main na liniji 12
INFO  05:29:09,450 -  Print count calls = 0
INFO  05:29:09,451 -  Deklarisanih promenljivih ima = 2
INFO  05:29:09,451 - ===================================
INFO  05:29:09,453 - Parsiranje uspesno zavrseno!
INFO  05:30:29,913 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:30:29,979 - #2 program
INFO  05:30:29,979 - #27 MJProgram
INFO  05:30:29,979 - #23 const
INFO  05:30:29,981 - #27 int
INFO  05:30:29,981 - #27 nula
INFO  05:30:29,982 - #12 =
INFO  05:30:29,983 - #26 0
INFO  05:30:29,983 - #5 ;
INFO  05:30:29,983 - #23 const
INFO  05:30:29,983 - #27 int
INFO  05:30:29,984 - #27 jedan
INFO  05:30:29,984 - #12 =
INFO  05:30:29,984 - #26 1
INFO  05:30:29,984 - #5 ;
INFO  05:30:29,984 - #23 const
INFO  05:30:29,984 - #27 int
INFO  05:30:29,984 - #27 pet
INFO  05:30:29,984 - #12 =
INFO  05:30:29,984 - #26 5
INFO  05:30:29,985 - #5 ;
INFO  05:30:29,985 - #23 const
INFO  05:30:29,985 - #27 char
INFO  05:30:29,985 - #27 pet1
INFO  05:30:29,985 - #12 =
INFO  05:30:29,985 - #28 c
INFO  05:30:29,985 - #5 ;
INFO  05:30:29,985 - #27 int
INFO  05:30:29,986 - #27 niz
INFO  05:30:29,986 - #20 [
INFO  05:30:29,986 - #21 ]
INFO  05:30:29,986 - #8 ,
INFO  05:30:29,986 - #27 niz2
INFO  05:30:29,986 - #20 [
INFO  05:30:29,986 - #21 ]
INFO  05:30:29,987 - #8 ,
INFO  05:30:29,987 - #27 a
INFO  05:30:29,987 - #8 ,
INFO  05:30:29,987 - #27 b
INFO  05:30:29,987 - #5 ;
INFO  05:30:29,987 - #27 char
INFO  05:30:29,988 - #27 nizch
INFO  05:30:29,988 - #20 [
INFO  05:30:29,988 - #21 ]
INFO  05:30:29,988 - #8 ,
INFO  05:30:29,988 - #27 c
INFO  05:30:29,988 - #5 ;
INFO  05:30:29,988 - #27 bool
INFO  05:30:29,988 - #27 s1
INFO  05:30:29,988 - #5 ;
INFO  05:30:29,989 - #3 {
INFO  05:30:29,989 - #13 void
INFO  05:30:29,990 - #27 main
INFO  05:30:29,990 - #6 (
INFO  05:30:29,991 - #7 )
INFO  05:30:29,991 - #27 int
INFO  05:30:29,991 - #27 bodovi
INFO  05:30:29,991 - #5 ;
INFO  05:30:29,991 - #27 bool
INFO  05:30:29,992 - #27 bt
INFO  05:30:29,992 - #5 ;
INFO  05:30:29,992 - #27 int
INFO  05:30:29,992 - #27 s
INFO  05:30:29,992 - #5 ;
INFO  05:30:29,992 - #3 {
INFO  05:30:29,992 - #27 bodovi
INFO  05:30:29,994 - #12 =
INFO  05:30:29,994 - #26 0
INFO  05:30:29,994 - #5 ;
INFO  05:30:29,995 - #27 bodovi
INFO  05:30:29,995 - #15 ++
INFO  05:30:29,996 - #5 ;
INFO  05:30:29,996 - #27 bodovi
INFO  05:30:29,996 - #12 =
INFO  05:30:29,996 - #27 bodovi
INFO  05:30:29,996 - #11 +
INFO  05:30:29,996 - #27 jedan
INFO  05:30:29,999 - #5 ;
INFO  05:30:29,999 - #27 bodovi
INFO  05:30:29,999 - #12 =
INFO  05:30:29,999 - #27 bodovi
INFO  05:30:30,000 - #14 *
INFO  05:30:30,000 - #27 pet
INFO  05:30:30,002 - #5 ;
INFO  05:30:30,003 - #27 bodovi
INFO  05:30:30,003 - #16 --
INFO  05:30:30,003 - #5 ;
INFO  05:30:30,003 - #9 print
INFO  05:30:30,003 - #6 (
INFO  05:30:30,003 - #27 bodovi
INFO  05:30:30,003 - #7 )
INFO  05:30:30,004 - #5 ;
INFO  05:30:30,004 - #27 niz
INFO  05:30:30,004 - #12 =
INFO  05:30:30,004 - #32 new
INFO  05:30:30,004 - #27 int
INFO  05:30:30,004 - #20 [
INFO  05:30:30,004 - #26 3
INFO  05:30:30,004 - #21 ]
INFO  05:30:30,004 - #5 ;
INFO  05:30:30,005 - #27 niz
INFO  05:30:30,005 - #20 [
INFO  05:30:30,005 - #27 nula
INFO  05:30:30,005 - #21 ]
INFO  05:30:30,005 - #12 =
INFO  05:30:30,005 - #27 jedan
INFO  05:30:30,005 - #5 ;
INFO  05:30:30,005 - #27 niz
INFO  05:30:30,006 - #20 [
INFO  05:30:30,006 - #26 1
INFO  05:30:30,006 - #21 ]
INFO  05:30:30,006 - #12 =
INFO  05:30:30,006 - #26 2
INFO  05:30:30,006 - #5 ;
INFO  05:30:30,006 - #27 bodovi
INFO  05:30:30,006 - #12 =
INFO  05:30:30,006 - #27 niz
INFO  05:30:30,006 - #20 [
INFO  05:30:30,006 - #26 2
INFO  05:30:30,006 - #21 ]
INFO  05:30:30,006 - #17 /
INFO  05:30:30,007 - #27 niz
INFO  05:30:30,008 - #20 [
INFO  05:30:30,008 - #26 0
INFO  05:30:30,009 - #21 ]
INFO  05:30:30,009 - #5 ;
INFO  05:30:30,009 - #9 print
INFO  05:30:30,009 - #6 (
INFO  05:30:30,009 - #27 bodovi
INFO  05:30:30,010 - #7 )
INFO  05:30:30,010 - #5 ;
INFO  05:30:30,010 - #9 print
INFO  05:30:30,010 - #6 (
INFO  05:30:30,010 - #27 niz
INFO  05:30:30,010 - #20 [
INFO  05:30:30,010 - #26 2
INFO  05:30:30,010 - #21 ]
INFO  05:30:30,011 - #7 )
INFO  05:30:30,011 - #5 ;
INFO  05:30:30,011 - #27 nizch
INFO  05:30:30,011 - #20 [
INFO  05:30:30,011 - #26 0
INFO  05:30:30,011 - #21 ]
INFO  05:30:30,011 - #12 =
INFO  05:30:30,011 - #28 a
INFO  05:30:30,011 - #5 ;
INFO  05:30:30,011 - #27 nizch
INFO  05:30:30,012 - #20 [
INFO  05:30:30,012 - #27 jedan
INFO  05:30:30,012 - #21 ]
INFO  05:30:30,012 - #12 =
INFO  05:30:30,012 - #28 b
INFO  05:30:30,012 - #5 ;
INFO  05:30:30,012 - #27 nizch
INFO  05:30:30,012 - #20 [
INFO  05:30:30,012 - #27 pet
INFO  05:30:30,012 - #19 -
INFO  05:30:30,012 - #26 3
INFO  05:30:30,014 - #21 ]
INFO  05:30:30,014 - #12 =
INFO  05:30:30,014 - #28 c
INFO  05:30:30,014 - #5 ;
INFO  05:30:30,014 - #9 print
INFO  05:30:30,014 - #6 (
INFO  05:30:30,015 - #27 nizch
INFO  05:30:30,016 - #20 [
INFO  05:30:30,017 - #26 1
INFO  05:30:30,017 - #21 ]
INFO  05:30:30,017 - #7 )
INFO  05:30:30,017 - #5 ;
INFO  05:30:30,017 - #9 print
INFO  05:30:30,018 - #6 (
INFO  05:30:30,018 - #27 nizch
INFO  05:30:30,018 - #20 [
INFO  05:30:30,018 - #27 jedan
INFO  05:30:30,018 - #14 *
INFO  05:30:30,018 - #26 2
INFO  05:30:30,019 - #21 ]
INFO  05:30:30,019 - #7 )
INFO  05:30:30,019 - #5 ;
INFO  05:30:30,019 - #22 read
INFO  05:30:30,019 - #6 (
INFO  05:30:30,019 - #27 bodovi
INFO  05:30:30,019 - #7 )
INFO  05:30:30,020 - #5 ;
INFO  05:30:30,020 - #27 bodovi
INFO  05:30:30,020 - #12 =
INFO  05:30:30,020 - #19 -
INFO  05:30:30,020 - #27 bodovi
INFO  05:30:30,021 - #11 +
INFO  05:30:30,021 - #6 (
INFO  05:30:30,021 - #27 pet
INFO  05:30:30,021 - #14 *
INFO  05:30:30,021 - #27 a
INFO  05:30:30,021 - #17 /
INFO  05:30:30,022 - #26 2
INFO  05:30:30,022 - #19 -
INFO  05:30:30,022 - #27 jedan
INFO  05:30:30,022 - #7 )
INFO  05:30:30,022 - #14 *
INFO  05:30:30,022 - #27 bodovi
INFO  05:30:30,022 - #19 -
INFO  05:30:30,023 - #6 (
INFO  05:30:30,023 - #26 3
INFO  05:30:30,023 - #18 %
INFO  05:30:30,023 - #26 2
INFO  05:30:30,024 - #11 +
INFO  05:30:30,024 - #26 3
INFO  05:30:30,024 - #14 *
INFO  05:30:30,025 - #26 2
INFO  05:30:30,025 - #19 -
INFO  05:30:30,025 - #26 3
INFO  05:30:30,025 - #7 )
INFO  05:30:30,025 - #5 ;
INFO  05:30:30,025 - #9 print
INFO  05:30:30,025 - #6 (
INFO  05:30:30,025 - #27 bodovi
INFO  05:30:30,025 - #7 )
INFO  05:30:30,026 - #5 ;
INFO  05:30:30,026 - #4 }
INFO  05:30:30,026 - #4 }
INFO  05:30:30,043 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              NoStmt(
                                              ) [NoStmt]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:30:30,044 - ===================================
INFO  05:30:30,049 - Deklarisana je konsanta int nula = 0
INFO  05:30:30,049 - Deklarisana je konsanta int jedan = 1
INFO  05:30:30,049 - Deklarisana je konsanta int pet = 5
INFO  05:30:30,049 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:30:30,050 - Deklarisan je niz niz
INFO  05:30:30,050 - Deklarisan je niz niz2
INFO  05:30:30,050 - Deklarisana promenljiva a
INFO  05:30:30,050 - Deklarisana promenljiva b
INFO  05:30:30,050 - Deklarisan je niz nizch
INFO  05:30:30,050 - Deklarisana promenljiva c
INFO  05:30:30,050 - Deklarisana promenljiva s1
INFO  05:30:30,050 - Obradjuje se funkcija main na liniji 12
INFO  05:30:30,051 - Deklarisana promenljiva bodovi
INFO  05:30:30,051 - Deklarisana promenljiva bt
INFO  05:30:30,051 - Deklarisana promenljiva s
INFO  05:30:30,051 - TIP 1: true  TIP 2: true
INFO  05:30:30,052 - Deklarisana je niz (uz pomoc NEW)
INFO  05:30:30,052 - TIP 1: false  TIP 2: false
INFO  05:30:30,052 - TIP 1: true  TIP 2: true
INFO  05:30:30,052 - Izvrsena negacija  na liniji 51
INFO  05:30:30,052 - TIP 1: true  TIP 2: true
INFO  05:30:30,053 - TIP 1: true  TIP 2: true
INFO  05:30:30,053 - TIP 1: true  TIP 2: true
INFO  05:30:30,053 - TIP 1: true  TIP 2: true
INFO  05:30:30,053 - TIP 1: true  TIP 2: true
INFO  05:30:30,053 -  Print count calls = 6
INFO  05:30:30,053 -  Deklarisanih promenljivih ima = 11
INFO  05:30:30,054 - ===================================
INFO  05:30:30,056 - Parsiranje uspesno zavrseno!
INFO  05:31:06,694 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:31:06,763 - #2 program
INFO  05:31:06,763 - #27 MJProgram
INFO  05:31:06,763 - #23 const
INFO  05:31:06,765 - #27 int
INFO  05:31:06,765 - #27 nula
INFO  05:31:06,766 - #12 =
INFO  05:31:06,766 - #26 0
INFO  05:31:06,766 - #5 ;
INFO  05:31:06,767 - #23 const
INFO  05:31:06,767 - #27 int
INFO  05:31:06,767 - #27 jedan
INFO  05:31:06,768 - #12 =
INFO  05:31:06,768 - #26 1
INFO  05:31:06,768 - #5 ;
INFO  05:31:06,768 - #23 const
INFO  05:31:06,768 - #27 int
INFO  05:31:06,768 - #27 pet
INFO  05:31:06,768 - #12 =
INFO  05:31:06,768 - #26 5
INFO  05:31:06,769 - #5 ;
INFO  05:31:06,769 - #23 const
INFO  05:31:06,769 - #27 char
INFO  05:31:06,769 - #27 pet1
INFO  05:31:06,769 - #12 =
INFO  05:31:06,769 - #28 c
INFO  05:31:06,770 - #5 ;
INFO  05:31:06,770 - #27 int
INFO  05:31:06,770 - #27 niz
INFO  05:31:06,770 - #20 [
INFO  05:31:06,770 - #21 ]
INFO  05:31:06,770 - #8 ,
INFO  05:31:06,771 - #27 niz2
INFO  05:31:06,771 - #20 [
INFO  05:31:06,771 - #21 ]
INFO  05:31:06,771 - #8 ,
INFO  05:31:06,771 - #27 a
INFO  05:31:06,771 - #8 ,
INFO  05:31:06,771 - #27 b
INFO  05:31:06,771 - #5 ;
INFO  05:31:06,772 - #27 char
INFO  05:31:06,772 - #27 nizch
INFO  05:31:06,772 - #20 [
INFO  05:31:06,773 - #21 ]
INFO  05:31:06,773 - #8 ,
INFO  05:31:06,773 - #27 c
INFO  05:31:06,773 - #5 ;
INFO  05:31:06,773 - #27 bool
INFO  05:31:06,773 - #27 s1
INFO  05:31:06,773 - #5 ;
INFO  05:31:06,774 - #3 {
INFO  05:31:06,774 - #13 void
INFO  05:31:06,775 - #27 main
INFO  05:31:06,776 - #6 (
INFO  05:31:06,776 - #7 )
INFO  05:31:06,776 - #27 int
INFO  05:31:06,776 - #27 bodovi
INFO  05:31:06,776 - #5 ;
INFO  05:31:06,776 - #27 bool
INFO  05:31:06,777 - #27 bt
INFO  05:31:06,777 - #5 ;
INFO  05:31:06,777 - #27 int
INFO  05:31:06,777 - #27 s
INFO  05:31:06,777 - #5 ;
INFO  05:31:06,777 - #3 {
INFO  05:31:06,777 - #27 nizch
INFO  05:31:06,779 - #20 [
INFO  05:31:06,780 - #26 0
INFO  05:31:06,780 - #21 ]
INFO  05:31:06,780 - #12 =
INFO  05:31:06,781 - #26 1
INFO  05:31:06,781 - #5 ;
INFO  05:31:06,781 - #27 bodovi
INFO  05:31:06,781 - #12 =
INFO  05:31:06,781 - #26 0
INFO  05:31:06,781 - #5 ;
INFO  05:31:06,782 - #27 bodovi
INFO  05:31:06,782 - #15 ++
INFO  05:31:06,782 - #5 ;
INFO  05:31:06,782 - #27 bodovi
INFO  05:31:06,782 - #12 =
INFO  05:31:06,782 - #27 bodovi
INFO  05:31:06,782 - #11 +
INFO  05:31:06,783 - #27 jedan
INFO  05:31:06,785 - #5 ;
INFO  05:31:06,785 - #27 bodovi
INFO  05:31:06,785 - #12 =
INFO  05:31:06,785 - #27 bodovi
INFO  05:31:06,785 - #14 *
INFO  05:31:06,785 - #27 pet
INFO  05:31:06,787 - #5 ;
INFO  05:31:06,788 - #27 bodovi
INFO  05:31:06,788 - #16 --
INFO  05:31:06,788 - #5 ;
INFO  05:31:06,788 - #9 print
INFO  05:31:06,789 - #6 (
INFO  05:31:06,789 - #27 bodovi
INFO  05:31:06,789 - #7 )
INFO  05:31:06,789 - #5 ;
INFO  05:31:06,789 - #27 niz
INFO  05:31:06,789 - #12 =
INFO  05:31:06,791 - #32 new
INFO  05:31:06,791 - #27 int
INFO  05:31:06,792 - #20 [
INFO  05:31:06,792 - #26 3
INFO  05:31:06,792 - #21 ]
INFO  05:31:06,792 - #5 ;
INFO  05:31:06,792 - #27 niz
INFO  05:31:06,792 - #20 [
INFO  05:31:06,793 - #27 nula
INFO  05:31:06,793 - #21 ]
INFO  05:31:06,793 - #12 =
INFO  05:31:06,793 - #27 jedan
INFO  05:31:06,793 - #5 ;
INFO  05:31:06,793 - #27 niz
INFO  05:31:06,794 - #20 [
INFO  05:31:06,794 - #26 1
INFO  05:31:06,794 - #21 ]
INFO  05:31:06,794 - #12 =
INFO  05:31:06,794 - #26 2
INFO  05:31:06,794 - #5 ;
INFO  05:31:06,794 - #27 bodovi
INFO  05:31:06,794 - #12 =
INFO  05:31:06,795 - #27 niz
INFO  05:31:06,795 - #20 [
INFO  05:31:06,795 - #26 2
INFO  05:31:06,795 - #21 ]
INFO  05:31:06,795 - #17 /
INFO  05:31:06,795 - #27 niz
INFO  05:31:06,797 - #20 [
INFO  05:31:06,797 - #26 0
INFO  05:31:06,797 - #21 ]
INFO  05:31:06,797 - #5 ;
INFO  05:31:06,798 - #9 print
INFO  05:31:06,798 - #6 (
INFO  05:31:06,798 - #27 bodovi
INFO  05:31:06,798 - #7 )
INFO  05:31:06,798 - #5 ;
INFO  05:31:06,798 - #9 print
INFO  05:31:06,798 - #6 (
INFO  05:31:06,798 - #27 niz
INFO  05:31:06,798 - #20 [
INFO  05:31:06,798 - #26 2
INFO  05:31:06,798 - #21 ]
INFO  05:31:06,799 - #7 )
INFO  05:31:06,799 - #5 ;
INFO  05:31:06,799 - #27 nizch
INFO  05:31:06,799 - #20 [
INFO  05:31:06,799 - #26 0
INFO  05:31:06,799 - #21 ]
INFO  05:31:06,800 - #12 =
INFO  05:31:06,800 - #28 a
INFO  05:31:06,800 - #5 ;
INFO  05:31:06,800 - #27 nizch
INFO  05:31:06,801 - #20 [
INFO  05:31:06,801 - #27 jedan
INFO  05:31:06,801 - #21 ]
INFO  05:31:06,801 - #12 =
INFO  05:31:06,801 - #28 b
INFO  05:31:06,801 - #5 ;
INFO  05:31:06,801 - #27 nizch
INFO  05:31:06,802 - #20 [
INFO  05:31:06,802 - #27 pet
INFO  05:31:06,802 - #19 -
INFO  05:31:06,802 - #26 3
INFO  05:31:06,806 - #21 ]
INFO  05:31:06,806 - #12 =
INFO  05:31:06,807 - #28 c
INFO  05:31:06,807 - #5 ;
INFO  05:31:06,807 - #9 print
INFO  05:31:06,807 - #6 (
INFO  05:31:06,807 - #27 nizch
INFO  05:31:06,808 - #20 [
INFO  05:31:06,808 - #26 1
INFO  05:31:06,808 - #21 ]
INFO  05:31:06,808 - #7 )
INFO  05:31:06,808 - #5 ;
INFO  05:31:06,809 - #9 print
INFO  05:31:06,809 - #6 (
INFO  05:31:06,809 - #27 nizch
INFO  05:31:06,809 - #20 [
INFO  05:31:06,809 - #27 jedan
INFO  05:31:06,809 - #14 *
INFO  05:31:06,809 - #26 2
INFO  05:31:06,810 - #21 ]
INFO  05:31:06,811 - #7 )
INFO  05:31:06,811 - #5 ;
INFO  05:31:06,811 - #22 read
INFO  05:31:06,811 - #6 (
INFO  05:31:06,811 - #27 bodovi
INFO  05:31:06,811 - #7 )
INFO  05:31:06,812 - #5 ;
INFO  05:31:06,812 - #27 bodovi
INFO  05:31:06,812 - #12 =
INFO  05:31:06,812 - #19 -
INFO  05:31:06,812 - #27 bodovi
INFO  05:31:06,812 - #11 +
INFO  05:31:06,813 - #6 (
INFO  05:31:06,813 - #27 pet
INFO  05:31:06,813 - #14 *
INFO  05:31:06,813 - #27 a
INFO  05:31:06,813 - #17 /
INFO  05:31:06,813 - #26 2
INFO  05:31:06,813 - #19 -
INFO  05:31:06,813 - #27 jedan
INFO  05:31:06,813 - #7 )
INFO  05:31:06,813 - #14 *
INFO  05:31:06,814 - #27 bodovi
INFO  05:31:06,814 - #19 -
INFO  05:31:06,814 - #6 (
INFO  05:31:06,814 - #26 3
INFO  05:31:06,814 - #18 %
INFO  05:31:06,814 - #26 2
INFO  05:31:06,815 - #11 +
INFO  05:31:06,815 - #26 3
INFO  05:31:06,815 - #14 *
INFO  05:31:06,815 - #26 2
INFO  05:31:06,816 - #19 -
INFO  05:31:06,816 - #26 3
INFO  05:31:06,816 - #7 )
INFO  05:31:06,816 - #5 ;
INFO  05:31:06,816 - #9 print
INFO  05:31:06,816 - #6 (
INFO  05:31:06,816 - #27 bodovi
INFO  05:31:06,816 - #7 )
INFO  05:31:06,816 - #5 ;
INFO  05:31:06,816 - #4 }
INFO  05:31:06,816 - #4 }
INFO  05:31:06,833 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     nizch
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorNUMBER(
                                                         1
                                                        ) [FactorNUMBER]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:31:06,835 - ===================================
INFO  05:31:06,840 - Deklarisana je konsanta int nula = 0
INFO  05:31:06,840 - Deklarisana je konsanta int jedan = 1
INFO  05:31:06,840 - Deklarisana je konsanta int pet = 5
INFO  05:31:06,840 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:31:06,841 - Deklarisan je niz niz
INFO  05:31:06,841 - Deklarisan je niz niz2
INFO  05:31:06,841 - Deklarisana promenljiva a
INFO  05:31:06,841 - Deklarisana promenljiva b
INFO  05:31:06,841 - Deklarisan je niz nizch
INFO  05:31:06,841 - Deklarisana promenljiva c
INFO  05:31:06,841 - Deklarisana promenljiva s1
INFO  05:31:06,841 - Obradjuje se funkcija main na liniji 12
INFO  05:31:06,841 - Deklarisana promenljiva bodovi
INFO  05:31:06,842 - Deklarisana promenljiva bt
INFO  05:31:06,842 - Deklarisana promenljiva s
INFO  05:31:06,842 - TIP 1: true  TIP 2: true
INFO  05:31:06,842 - Deklarisana je niz (uz pomoc NEW)
INFO  05:31:06,843 - TIP 1: false  TIP 2: false
INFO  05:31:06,843 - TIP 1: true  TIP 2: true
INFO  05:31:06,843 - Izvrsena negacija  na liniji 51
INFO  05:31:06,844 - TIP 1: true  TIP 2: true
INFO  05:31:06,844 - TIP 1: true  TIP 2: true
INFO  05:31:06,844 - TIP 1: true  TIP 2: true
INFO  05:31:06,844 - TIP 1: true  TIP 2: true
INFO  05:31:06,844 - TIP 1: true  TIP 2: true
INFO  05:31:06,845 -  Print count calls = 6
INFO  05:31:06,845 -  Deklarisanih promenljivih ima = 11
INFO  05:31:06,845 - ===================================
INFO  05:31:06,848 - Parsiranje uspesno zavrseno!
INFO  05:32:02,950 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:32:03,073 - #2 program
INFO  05:32:03,074 - #27 MJProgram
INFO  05:32:03,074 - #23 const
INFO  05:32:03,079 - #27 int
INFO  05:32:03,079 - #27 nula
INFO  05:32:03,081 - #12 =
INFO  05:32:03,082 - #26 0
INFO  05:32:03,082 - #5 ;
INFO  05:32:03,082 - #23 const
INFO  05:32:03,083 - #27 int
INFO  05:32:03,083 - #27 jedan
INFO  05:32:03,083 - #12 =
INFO  05:32:03,083 - #26 1
INFO  05:32:03,084 - #5 ;
INFO  05:32:03,084 - #23 const
INFO  05:32:03,084 - #27 int
INFO  05:32:03,084 - #27 pet
INFO  05:32:03,084 - #12 =
INFO  05:32:03,085 - #26 5
INFO  05:32:03,085 - #5 ;
INFO  05:32:03,086 - #23 const
INFO  05:32:03,086 - #27 char
INFO  05:32:03,086 - #27 pet1
INFO  05:32:03,086 - #12 =
INFO  05:32:03,086 - #28 c
INFO  05:32:03,087 - #5 ;
INFO  05:32:03,087 - #27 int
INFO  05:32:03,087 - #27 niz
INFO  05:32:03,087 - #20 [
INFO  05:32:03,087 - #21 ]
INFO  05:32:03,088 - #8 ,
INFO  05:32:03,088 - #27 niz2
INFO  05:32:03,088 - #20 [
INFO  05:32:03,089 - #21 ]
INFO  05:32:03,089 - #8 ,
INFO  05:32:03,089 - #27 a
INFO  05:32:03,089 - #8 ,
INFO  05:32:03,089 - #27 b
INFO  05:32:03,090 - #5 ;
INFO  05:32:03,090 - #27 char
INFO  05:32:03,091 - #27 nizch
INFO  05:32:03,091 - #20 [
INFO  05:32:03,091 - #21 ]
INFO  05:32:03,092 - #8 ,
INFO  05:32:03,092 - #27 c
INFO  05:32:03,092 - #5 ;
INFO  05:32:03,093 - #27 bool
INFO  05:32:03,093 - #27 s1
INFO  05:32:03,093 - #5 ;
INFO  05:32:03,093 - #3 {
INFO  05:32:03,093 - #13 void
INFO  05:32:03,095 - #27 main
INFO  05:32:03,096 - #6 (
INFO  05:32:03,096 - #7 )
INFO  05:32:03,096 - #27 int
INFO  05:32:03,096 - #27 bodovi
INFO  05:32:03,097 - #5 ;
INFO  05:32:03,097 - #27 bool
INFO  05:32:03,097 - #27 bt
INFO  05:32:03,097 - #5 ;
INFO  05:32:03,097 - #27 int
INFO  05:32:03,097 - #27 s
INFO  05:32:03,098 - #5 ;
INFO  05:32:03,098 - #3 {
INFO  05:32:03,098 - #27 nizch
INFO  05:32:03,100 - #20 [
INFO  05:32:03,100 - #26 0
INFO  05:32:03,100 - #21 ]
INFO  05:32:03,101 - #12 =
INFO  05:32:03,102 - #26 1
INFO  05:32:03,102 - #5 ;
INFO  05:32:03,102 - #27 bodovi
INFO  05:32:03,102 - #12 =
INFO  05:32:03,103 - #26 0
INFO  05:32:03,103 - #5 ;
INFO  05:32:03,103 - #27 bodovi
INFO  05:32:03,103 - #15 ++
INFO  05:32:03,103 - #5 ;
INFO  05:32:03,103 - #27 bodovi
INFO  05:32:03,104 - #12 =
INFO  05:32:03,104 - #27 bodovi
INFO  05:32:03,104 - #11 +
INFO  05:32:03,104 - #27 jedan
INFO  05:32:03,108 - #5 ;
INFO  05:32:03,108 - #27 bodovi
INFO  05:32:03,109 - #12 =
INFO  05:32:03,109 - #27 bodovi
INFO  05:32:03,109 - #14 *
INFO  05:32:03,109 - #27 pet
INFO  05:32:03,112 - #5 ;
INFO  05:32:03,113 - #27 bodovi
INFO  05:32:03,113 - #16 --
INFO  05:32:03,113 - #5 ;
INFO  05:32:03,114 - #9 print
INFO  05:32:03,114 - #6 (
INFO  05:32:03,114 - #27 bodovi
INFO  05:32:03,114 - #7 )
INFO  05:32:03,114 - #5 ;
INFO  05:32:03,115 - #27 niz
INFO  05:32:03,115 - #12 =
INFO  05:32:03,115 - #32 new
INFO  05:32:03,115 - #27 int
INFO  05:32:03,116 - #20 [
INFO  05:32:03,116 - #26 3
INFO  05:32:03,116 - #21 ]
INFO  05:32:03,116 - #5 ;
INFO  05:32:03,116 - #27 niz
INFO  05:32:03,116 - #20 [
INFO  05:32:03,117 - #27 nula
INFO  05:32:03,117 - #21 ]
INFO  05:32:03,117 - #12 =
INFO  05:32:03,117 - #27 jedan
INFO  05:32:03,117 - #5 ;
INFO  05:32:03,117 - #27 niz
INFO  05:32:03,117 - #20 [
INFO  05:32:03,117 - #26 1
INFO  05:32:03,117 - #21 ]
INFO  05:32:03,118 - #12 =
INFO  05:32:03,118 - #26 2
INFO  05:32:03,118 - #5 ;
INFO  05:32:03,118 - #27 bodovi
INFO  05:32:03,118 - #12 =
INFO  05:32:03,118 - #27 niz
INFO  05:32:03,118 - #20 [
INFO  05:32:03,118 - #26 2
INFO  05:32:03,118 - #21 ]
INFO  05:32:03,119 - #17 /
INFO  05:32:03,119 - #27 niz
INFO  05:32:03,120 - #20 [
INFO  05:32:03,121 - #26 0
INFO  05:32:03,121 - #21 ]
INFO  05:32:03,121 - #5 ;
INFO  05:32:03,121 - #9 print
INFO  05:32:03,121 - #6 (
INFO  05:32:03,121 - #27 bodovi
INFO  05:32:03,121 - #7 )
INFO  05:32:03,121 - #5 ;
INFO  05:32:03,122 - #9 print
INFO  05:32:03,122 - #6 (
INFO  05:32:03,122 - #27 niz
INFO  05:32:03,122 - #20 [
INFO  05:32:03,122 - #26 2
INFO  05:32:03,122 - #21 ]
INFO  05:32:03,122 - #7 )
INFO  05:32:03,122 - #5 ;
INFO  05:32:03,122 - #27 nizch
INFO  05:32:03,123 - #20 [
INFO  05:32:03,123 - #26 0
INFO  05:32:03,123 - #21 ]
INFO  05:32:03,123 - #12 =
INFO  05:32:03,123 - #28 a
INFO  05:32:03,123 - #5 ;
INFO  05:32:03,123 - #27 nizch
INFO  05:32:03,123 - #20 [
INFO  05:32:03,124 - #27 jedan
INFO  05:32:03,124 - #21 ]
INFO  05:32:03,124 - #12 =
INFO  05:32:03,124 - #28 b
INFO  05:32:03,124 - #5 ;
INFO  05:32:03,124 - #27 nizch
INFO  05:32:03,124 - #20 [
INFO  05:32:03,125 - #27 pet
INFO  05:32:03,125 - #19 -
INFO  05:32:03,125 - #26 3
INFO  05:32:03,130 - #21 ]
INFO  05:32:03,130 - #12 =
INFO  05:32:03,130 - #28 c
INFO  05:32:03,131 - #5 ;
INFO  05:32:03,131 - #9 print
INFO  05:32:03,131 - #6 (
INFO  05:32:03,131 - #27 nizch
INFO  05:32:03,131 - #20 [
INFO  05:32:03,131 - #26 1
INFO  05:32:03,131 - #21 ]
INFO  05:32:03,132 - #7 )
INFO  05:32:03,132 - #5 ;
INFO  05:32:03,132 - #9 print
INFO  05:32:03,132 - #6 (
INFO  05:32:03,132 - #27 nizch
INFO  05:32:03,132 - #20 [
INFO  05:32:03,132 - #27 jedan
INFO  05:32:03,132 - #14 *
INFO  05:32:03,133 - #26 2
INFO  05:32:03,133 - #21 ]
INFO  05:32:03,133 - #7 )
INFO  05:32:03,133 - #5 ;
INFO  05:32:03,133 - #22 read
INFO  05:32:03,133 - #6 (
INFO  05:32:03,133 - #27 bodovi
INFO  05:32:03,133 - #7 )
INFO  05:32:03,134 - #5 ;
INFO  05:32:03,134 - #27 bodovi
INFO  05:32:03,134 - #12 =
INFO  05:32:03,134 - #19 -
INFO  05:32:03,134 - #27 bodovi
INFO  05:32:03,135 - #11 +
INFO  05:32:03,135 - #6 (
INFO  05:32:03,135 - #27 pet
INFO  05:32:03,135 - #14 *
INFO  05:32:03,135 - #27 a
INFO  05:32:03,135 - #17 /
INFO  05:32:03,135 - #26 2
INFO  05:32:03,136 - #19 -
INFO  05:32:03,136 - #27 jedan
INFO  05:32:03,136 - #7 )
INFO  05:32:03,136 - #14 *
INFO  05:32:03,136 - #27 bodovi
INFO  05:32:03,136 - #19 -
INFO  05:32:03,137 - #6 (
INFO  05:32:03,137 - #26 3
INFO  05:32:03,137 - #18 %
INFO  05:32:03,137 - #26 2
INFO  05:32:03,139 - #11 +
INFO  05:32:03,139 - #26 3
INFO  05:32:03,139 - #14 *
INFO  05:32:03,139 - #26 2
INFO  05:32:03,139 - #19 -
INFO  05:32:03,140 - #26 3
INFO  05:32:03,140 - #7 )
INFO  05:32:03,140 - #5 ;
INFO  05:32:03,140 - #9 print
INFO  05:32:03,140 - #6 (
INFO  05:32:03,140 - #27 bodovi
INFO  05:32:03,140 - #7 )
INFO  05:32:03,140 - #5 ;
INFO  05:32:03,141 - #4 }
INFO  05:32:03,141 - #4 }
INFO  05:32:03,167 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     nizch
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorNUMBER(
                                                         1
                                                        ) [FactorNUMBER]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:32:03,170 - ===================================
INFO  05:32:03,226 - Deklarisana je konsanta int nula = 0
INFO  05:32:03,226 - Deklarisana je konsanta int jedan = 1
INFO  05:32:03,226 - Deklarisana je konsanta int pet = 5
INFO  05:32:03,227 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:32:03,227 - Deklarisan je niz niz
INFO  05:32:03,227 - Deklarisan je niz niz2
INFO  05:32:03,227 - Deklarisana promenljiva a
INFO  05:32:03,227 - Deklarisana promenljiva b
INFO  05:32:03,227 - Deklarisan je niz nizch
INFO  05:32:03,227 - Deklarisana promenljiva c
INFO  05:32:03,227 - Deklarisana promenljiva s1
INFO  05:32:03,228 - Obradjuje se funkcija main na liniji 12
INFO  05:32:03,228 - Deklarisana promenljiva bodovi
INFO  05:32:03,228 - Deklarisana promenljiva bt
INFO  05:32:03,229 - Deklarisana promenljiva s
INFO  05:32:55,830 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:32:55,905 - #2 program
INFO  05:32:55,906 - #27 MJProgram
INFO  05:32:55,906 - #23 const
INFO  05:32:55,908 - #27 int
INFO  05:32:55,908 - #27 nula
INFO  05:32:55,909 - #12 =
INFO  05:32:55,910 - #26 0
INFO  05:32:55,910 - #5 ;
INFO  05:32:55,910 - #23 const
INFO  05:32:55,911 - #27 int
INFO  05:32:55,911 - #27 jedan
INFO  05:32:55,911 - #12 =
INFO  05:32:55,911 - #26 1
INFO  05:32:55,911 - #5 ;
INFO  05:32:55,912 - #23 const
INFO  05:32:55,912 - #27 int
INFO  05:32:55,912 - #27 pet
INFO  05:32:55,912 - #12 =
INFO  05:32:55,912 - #26 5
INFO  05:32:55,912 - #5 ;
INFO  05:32:55,912 - #23 const
INFO  05:32:55,913 - #27 char
INFO  05:32:55,913 - #27 pet1
INFO  05:32:55,913 - #12 =
INFO  05:32:55,913 - #28 c
INFO  05:32:55,913 - #5 ;
INFO  05:32:55,914 - #27 int
INFO  05:32:55,914 - #27 niz
INFO  05:32:55,914 - #20 [
INFO  05:32:55,914 - #21 ]
INFO  05:32:55,914 - #8 ,
INFO  05:32:55,914 - #27 niz2
INFO  05:32:55,915 - #20 [
INFO  05:32:55,915 - #21 ]
INFO  05:32:55,915 - #8 ,
INFO  05:32:55,915 - #27 a
INFO  05:32:55,915 - #8 ,
INFO  05:32:55,916 - #27 b
INFO  05:32:55,916 - #5 ;
INFO  05:32:55,916 - #27 char
INFO  05:32:55,917 - #27 nizch
INFO  05:32:55,917 - #20 [
INFO  05:32:55,917 - #21 ]
INFO  05:32:55,917 - #8 ,
INFO  05:32:55,917 - #27 c
INFO  05:32:55,917 - #5 ;
INFO  05:32:55,918 - #27 bool
INFO  05:32:55,918 - #27 s1
INFO  05:32:55,918 - #5 ;
INFO  05:32:55,918 - #3 {
INFO  05:32:55,918 - #13 void
INFO  05:32:55,920 - #27 main
INFO  05:32:55,920 - #6 (
INFO  05:32:55,920 - #7 )
INFO  05:32:55,920 - #27 int
INFO  05:32:55,920 - #27 bodovi
INFO  05:32:55,921 - #5 ;
INFO  05:32:55,921 - #27 bool
INFO  05:32:55,921 - #27 bt
INFO  05:32:55,921 - #5 ;
INFO  05:32:55,921 - #27 int
INFO  05:32:55,921 - #27 s
INFO  05:32:55,921 - #5 ;
INFO  05:32:55,921 - #3 {
INFO  05:32:55,922 - #27 niz
INFO  05:32:55,923 - #20 [
INFO  05:32:55,924 - #26 0
INFO  05:32:55,924 - #21 ]
INFO  05:32:55,924 - #12 =
INFO  05:32:55,924 - #28 c
INFO  05:32:55,925 - #5 ;
INFO  05:32:55,925 - #27 bodovi
INFO  05:32:55,925 - #12 =
INFO  05:32:55,925 - #26 0
INFO  05:32:55,926 - #5 ;
INFO  05:32:55,926 - #27 bodovi
INFO  05:32:55,926 - #15 ++
INFO  05:32:55,926 - #5 ;
INFO  05:32:55,926 - #27 bodovi
INFO  05:32:55,926 - #12 =
INFO  05:32:55,927 - #27 bodovi
INFO  05:32:55,927 - #11 +
INFO  05:32:55,927 - #27 jedan
INFO  05:32:55,931 - #5 ;
INFO  05:32:55,932 - #27 bodovi
INFO  05:32:55,932 - #12 =
INFO  05:32:55,932 - #27 bodovi
INFO  05:32:55,932 - #14 *
INFO  05:32:55,933 - #27 pet
INFO  05:32:55,936 - #5 ;
INFO  05:32:55,937 - #27 bodovi
INFO  05:32:55,937 - #16 --
INFO  05:32:55,938 - #5 ;
INFO  05:32:55,938 - #9 print
INFO  05:32:55,939 - #6 (
INFO  05:32:55,939 - #27 bodovi
INFO  05:32:55,939 - #7 )
INFO  05:32:55,939 - #5 ;
INFO  05:32:55,940 - #27 niz
INFO  05:32:55,940 - #12 =
INFO  05:32:55,942 - #32 new
INFO  05:32:55,943 - #27 int
INFO  05:32:55,943 - #20 [
INFO  05:32:55,943 - #26 3
INFO  05:32:55,943 - #21 ]
INFO  05:32:55,943 - #5 ;
INFO  05:32:55,944 - #27 niz
INFO  05:32:55,944 - #20 [
INFO  05:32:55,944 - #27 nula
INFO  05:32:55,944 - #21 ]
INFO  05:32:55,944 - #12 =
INFO  05:32:55,944 - #27 jedan
INFO  05:32:55,944 - #5 ;
INFO  05:32:55,945 - #27 niz
INFO  05:32:55,945 - #20 [
INFO  05:32:55,945 - #26 1
INFO  05:32:55,945 - #21 ]
INFO  05:32:55,945 - #12 =
INFO  05:32:55,945 - #26 2
INFO  05:32:55,945 - #5 ;
INFO  05:32:55,945 - #27 bodovi
INFO  05:32:55,946 - #12 =
INFO  05:32:55,946 - #27 niz
INFO  05:32:55,946 - #20 [
INFO  05:32:55,946 - #26 2
INFO  05:32:55,946 - #21 ]
INFO  05:32:55,946 - #17 /
INFO  05:32:55,947 - #27 niz
INFO  05:32:55,948 - #20 [
INFO  05:32:55,949 - #26 0
INFO  05:32:55,949 - #21 ]
INFO  05:32:55,949 - #5 ;
INFO  05:32:55,949 - #9 print
INFO  05:32:55,949 - #6 (
INFO  05:32:55,949 - #27 bodovi
INFO  05:32:55,949 - #7 )
INFO  05:32:55,949 - #5 ;
INFO  05:32:55,949 - #9 print
INFO  05:32:55,950 - #6 (
INFO  05:32:55,950 - #27 niz
INFO  05:32:55,950 - #20 [
INFO  05:32:55,950 - #26 2
INFO  05:32:55,950 - #21 ]
INFO  05:32:55,950 - #7 )
INFO  05:32:55,950 - #5 ;
INFO  05:32:55,950 - #27 nizch
INFO  05:32:55,950 - #20 [
INFO  05:32:55,951 - #26 0
INFO  05:32:55,951 - #21 ]
INFO  05:32:55,951 - #12 =
INFO  05:32:55,951 - #28 a
INFO  05:32:55,951 - #5 ;
INFO  05:32:55,951 - #27 nizch
INFO  05:32:55,951 - #20 [
INFO  05:32:55,951 - #27 jedan
INFO  05:32:55,952 - #21 ]
INFO  05:32:55,952 - #12 =
INFO  05:32:55,952 - #28 b
INFO  05:32:55,952 - #5 ;
INFO  05:32:55,952 - #27 nizch
INFO  05:32:55,952 - #20 [
INFO  05:32:55,952 - #27 pet
INFO  05:32:55,952 - #19 -
INFO  05:32:55,952 - #26 3
INFO  05:32:55,954 - #21 ]
INFO  05:32:55,954 - #12 =
INFO  05:32:55,955 - #28 c
INFO  05:32:55,955 - #5 ;
INFO  05:32:55,955 - #9 print
INFO  05:32:55,955 - #6 (
INFO  05:32:55,955 - #27 nizch
INFO  05:32:55,955 - #20 [
INFO  05:32:55,955 - #26 1
INFO  05:32:55,955 - #21 ]
INFO  05:32:55,955 - #7 )
INFO  05:32:55,956 - #5 ;
INFO  05:32:55,956 - #9 print
INFO  05:32:55,956 - #6 (
INFO  05:32:55,956 - #27 nizch
INFO  05:32:55,956 - #20 [
INFO  05:32:55,957 - #27 jedan
INFO  05:32:55,957 - #14 *
INFO  05:32:55,957 - #26 2
INFO  05:32:55,957 - #21 ]
INFO  05:32:55,957 - #7 )
INFO  05:32:55,957 - #5 ;
INFO  05:32:55,957 - #22 read
INFO  05:32:55,957 - #6 (
INFO  05:32:55,958 - #27 bodovi
INFO  05:32:55,958 - #7 )
INFO  05:32:55,958 - #5 ;
INFO  05:32:55,958 - #27 bodovi
INFO  05:32:55,958 - #12 =
INFO  05:32:55,958 - #19 -
INFO  05:32:55,959 - #27 bodovi
INFO  05:32:55,959 - #11 +
INFO  05:32:55,959 - #6 (
INFO  05:32:55,959 - #27 pet
INFO  05:32:55,959 - #14 *
INFO  05:32:55,959 - #27 a
INFO  05:32:55,959 - #17 /
INFO  05:32:55,960 - #26 2
INFO  05:32:55,960 - #19 -
INFO  05:32:55,960 - #27 jedan
INFO  05:32:55,960 - #7 )
INFO  05:32:55,960 - #14 *
INFO  05:32:55,960 - #27 bodovi
INFO  05:32:55,960 - #19 -
INFO  05:32:55,961 - #6 (
INFO  05:32:55,961 - #26 3
INFO  05:32:55,961 - #18 %
INFO  05:32:55,961 - #26 2
INFO  05:32:55,963 - #11 +
INFO  05:32:55,963 - #26 3
INFO  05:32:55,963 - #14 *
INFO  05:32:55,963 - #26 2
INFO  05:32:55,963 - #19 -
INFO  05:32:55,964 - #26 3
INFO  05:32:55,964 - #7 )
INFO  05:32:55,964 - #5 ;
INFO  05:32:55,964 - #9 print
INFO  05:32:55,964 - #6 (
INFO  05:32:55,964 - #27 bodovi
INFO  05:32:55,964 - #7 )
INFO  05:32:55,964 - #5 ;
INFO  05:32:55,965 - #4 }
INFO  05:32:55,965 - #4 }
INFO  05:32:55,989 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     niz
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorChar(
                                                         c
                                                        ) [FactorChar]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:32:55,991 - ===================================
INFO  05:32:55,996 - Deklarisana je konsanta int nula = 0
INFO  05:32:55,996 - Deklarisana je konsanta int jedan = 1
INFO  05:32:55,997 - Deklarisana je konsanta int pet = 5
INFO  05:32:55,997 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:32:55,997 - Deklarisan je niz niz
INFO  05:32:55,997 - Deklarisan je niz niz2
INFO  05:32:55,997 - Deklarisana promenljiva a
INFO  05:32:55,997 - Deklarisana promenljiva b
INFO  05:32:55,997 - Deklarisan je niz nizch
INFO  05:32:55,998 - Deklarisana promenljiva c
INFO  05:32:55,998 - Deklarisana promenljiva s1
INFO  05:32:55,998 - Obradjuje se funkcija main na liniji 12
INFO  05:32:55,998 - Deklarisana promenljiva bodovi
INFO  05:32:55,998 - Deklarisana promenljiva bt
INFO  05:32:55,998 - Deklarisana promenljiva s
INFO  05:32:55,999 - Deklarisana je niz (uz pomoc NEW)
INFO  05:32:55,999 - Izvrsena negacija  na liniji 51
INFO  05:32:56,000 -  Print count calls = 6
INFO  05:32:56,000 -  Deklarisanih promenljivih ima = 11
INFO  05:32:56,000 - ===================================
INFO  05:32:56,003 - Parsiranje uspesno zavrseno!
INFO  05:33:09,529 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:33:09,616 - #2 program
INFO  05:33:09,616 - #27 MJProgram
INFO  05:33:09,616 - #23 const
INFO  05:33:09,619 - #27 int
INFO  05:33:09,619 - #27 nula
INFO  05:33:09,620 - #12 =
INFO  05:33:09,621 - #26 0
INFO  05:33:09,621 - #5 ;
INFO  05:33:09,621 - #23 const
INFO  05:33:09,621 - #27 int
INFO  05:33:09,622 - #27 jedan
INFO  05:33:09,622 - #12 =
INFO  05:33:09,622 - #26 1
INFO  05:33:09,622 - #5 ;
INFO  05:33:09,622 - #23 const
INFO  05:33:09,622 - #27 int
INFO  05:33:09,622 - #27 pet
INFO  05:33:09,622 - #12 =
INFO  05:33:09,622 - #26 5
INFO  05:33:09,623 - #5 ;
INFO  05:33:09,623 - #23 const
INFO  05:33:09,623 - #27 char
INFO  05:33:09,623 - #27 pet1
INFO  05:33:09,623 - #12 =
INFO  05:33:09,623 - #28 c
INFO  05:33:09,623 - #5 ;
INFO  05:33:09,623 - #27 int
INFO  05:33:09,623 - #27 niz
INFO  05:33:09,623 - #20 [
INFO  05:33:09,624 - #21 ]
INFO  05:33:09,624 - #8 ,
INFO  05:33:09,624 - #27 niz2
INFO  05:33:09,624 - #20 [
INFO  05:33:09,624 - #21 ]
INFO  05:33:09,624 - #8 ,
INFO  05:33:09,624 - #27 a
INFO  05:33:09,624 - #8 ,
INFO  05:33:09,625 - #27 b
INFO  05:33:09,625 - #5 ;
INFO  05:33:09,625 - #27 char
INFO  05:33:09,626 - #27 nizch
INFO  05:33:09,626 - #20 [
INFO  05:33:09,626 - #21 ]
INFO  05:33:09,626 - #8 ,
INFO  05:33:09,626 - #27 c
INFO  05:33:09,626 - #5 ;
INFO  05:33:09,626 - #27 bool
INFO  05:33:09,627 - #27 s1
INFO  05:33:09,627 - #5 ;
INFO  05:33:09,627 - #3 {
INFO  05:33:09,627 - #13 void
INFO  05:33:09,629 - #27 main
INFO  05:33:09,629 - #6 (
INFO  05:33:09,629 - #7 )
INFO  05:33:09,629 - #27 int
INFO  05:33:09,629 - #27 bodovi
INFO  05:33:09,630 - #5 ;
INFO  05:33:09,630 - #27 bool
INFO  05:33:09,630 - #27 bt
INFO  05:33:09,630 - #5 ;
INFO  05:33:09,630 - #27 int
INFO  05:33:09,630 - #27 s
INFO  05:33:09,631 - #5 ;
INFO  05:33:09,631 - #3 {
INFO  05:33:09,631 - #27 niz
INFO  05:33:09,633 - #20 [
INFO  05:33:09,633 - #26 0
INFO  05:33:09,633 - #21 ]
INFO  05:33:09,634 - #12 =
INFO  05:33:09,634 - #28 c
INFO  05:33:09,634 - #5 ;
INFO  05:33:09,634 - #27 bodovi
INFO  05:33:09,635 - #12 =
INFO  05:33:09,635 - #26 0
INFO  05:33:09,635 - #5 ;
INFO  05:33:09,635 - #27 bodovi
INFO  05:33:09,636 - #15 ++
INFO  05:33:09,636 - #5 ;
INFO  05:33:09,636 - #27 bodovi
INFO  05:33:09,636 - #12 =
INFO  05:33:09,636 - #27 bodovi
INFO  05:33:09,636 - #11 +
INFO  05:33:09,636 - #27 jedan
INFO  05:33:09,639 - #5 ;
INFO  05:33:09,640 - #27 bodovi
INFO  05:33:09,640 - #12 =
INFO  05:33:09,640 - #27 bodovi
INFO  05:33:09,640 - #14 *
INFO  05:33:09,640 - #27 pet
INFO  05:33:09,643 - #5 ;
INFO  05:33:09,643 - #27 bodovi
INFO  05:33:09,644 - #16 --
INFO  05:33:09,644 - #5 ;
INFO  05:33:09,644 - #9 print
INFO  05:33:09,644 - #6 (
INFO  05:33:09,645 - #27 bodovi
INFO  05:33:09,645 - #7 )
INFO  05:33:09,645 - #5 ;
INFO  05:33:09,645 - #27 niz
INFO  05:33:09,646 - #12 =
INFO  05:33:09,646 - #32 new
INFO  05:33:09,646 - #27 int
INFO  05:33:09,646 - #20 [
INFO  05:33:09,646 - #26 3
INFO  05:33:09,646 - #21 ]
INFO  05:33:09,646 - #5 ;
INFO  05:33:09,647 - #27 niz
INFO  05:33:09,647 - #20 [
INFO  05:33:09,647 - #27 nula
INFO  05:33:09,647 - #21 ]
INFO  05:33:09,647 - #12 =
INFO  05:33:09,647 - #27 jedan
INFO  05:33:09,647 - #5 ;
INFO  05:33:09,648 - #27 niz
INFO  05:33:09,648 - #20 [
INFO  05:33:09,648 - #26 1
INFO  05:33:09,648 - #21 ]
INFO  05:33:09,648 - #12 =
INFO  05:33:09,648 - #26 2
INFO  05:33:09,649 - #5 ;
INFO  05:33:09,649 - #27 bodovi
INFO  05:33:09,649 - #12 =
INFO  05:33:09,649 - #27 niz
INFO  05:33:09,650 - #20 [
INFO  05:33:09,650 - #26 2
INFO  05:33:09,650 - #21 ]
INFO  05:33:09,651 - #17 /
INFO  05:33:09,651 - #27 niz
INFO  05:33:09,653 - #20 [
INFO  05:33:09,653 - #26 0
INFO  05:33:09,653 - #21 ]
INFO  05:33:09,654 - #5 ;
INFO  05:33:09,654 - #9 print
INFO  05:33:09,654 - #6 (
INFO  05:33:09,654 - #27 bodovi
INFO  05:33:09,654 - #7 )
INFO  05:33:09,654 - #5 ;
INFO  05:33:09,654 - #9 print
INFO  05:33:09,654 - #6 (
INFO  05:33:09,654 - #27 niz
INFO  05:33:09,655 - #20 [
INFO  05:33:09,655 - #26 2
INFO  05:33:09,655 - #21 ]
INFO  05:33:09,655 - #7 )
INFO  05:33:09,655 - #5 ;
INFO  05:33:09,655 - #27 nizch
INFO  05:33:09,655 - #20 [
INFO  05:33:09,655 - #26 0
INFO  05:33:09,655 - #21 ]
INFO  05:33:09,656 - #12 =
INFO  05:33:09,656 - #28 a
INFO  05:33:09,656 - #5 ;
INFO  05:33:09,656 - #27 nizch
INFO  05:33:09,656 - #20 [
INFO  05:33:09,656 - #27 jedan
INFO  05:33:09,656 - #21 ]
INFO  05:33:09,656 - #12 =
INFO  05:33:09,656 - #28 b
INFO  05:33:09,656 - #5 ;
INFO  05:33:09,657 - #27 nizch
INFO  05:33:09,657 - #20 [
INFO  05:33:09,657 - #27 pet
INFO  05:33:09,657 - #19 -
INFO  05:33:09,657 - #26 3
INFO  05:33:09,661 - #21 ]
INFO  05:33:09,661 - #12 =
INFO  05:33:09,661 - #28 c
INFO  05:33:09,661 - #5 ;
INFO  05:33:09,662 - #9 print
INFO  05:33:09,662 - #6 (
INFO  05:33:09,662 - #27 nizch
INFO  05:33:09,662 - #20 [
INFO  05:33:09,662 - #26 1
INFO  05:33:09,662 - #21 ]
INFO  05:33:09,662 - #7 )
INFO  05:33:09,662 - #5 ;
INFO  05:33:09,662 - #9 print
INFO  05:33:09,663 - #6 (
INFO  05:33:09,663 - #27 nizch
INFO  05:33:09,663 - #20 [
INFO  05:33:09,663 - #27 jedan
INFO  05:33:09,663 - #14 *
INFO  05:33:09,663 - #26 2
INFO  05:33:09,663 - #21 ]
INFO  05:33:09,663 - #7 )
INFO  05:33:09,663 - #5 ;
INFO  05:33:09,664 - #22 read
INFO  05:33:09,664 - #6 (
INFO  05:33:09,664 - #27 bodovi
INFO  05:33:09,664 - #7 )
INFO  05:33:09,664 - #5 ;
INFO  05:33:09,664 - #27 bodovi
INFO  05:33:09,665 - #12 =
INFO  05:33:09,665 - #19 -
INFO  05:33:09,665 - #27 bodovi
INFO  05:33:09,665 - #11 +
INFO  05:33:09,666 - #6 (
INFO  05:33:09,666 - #27 pet
INFO  05:33:09,666 - #14 *
INFO  05:33:09,666 - #27 a
INFO  05:33:09,666 - #17 /
INFO  05:33:09,666 - #26 2
INFO  05:33:09,666 - #19 -
INFO  05:33:09,667 - #27 jedan
INFO  05:33:09,667 - #7 )
INFO  05:33:09,667 - #14 *
INFO  05:33:09,667 - #27 bodovi
INFO  05:33:09,667 - #19 -
INFO  05:33:09,667 - #6 (
INFO  05:33:09,668 - #26 3
INFO  05:33:09,668 - #18 %
INFO  05:33:09,668 - #26 2
INFO  05:33:09,669 - #11 +
INFO  05:33:09,670 - #26 3
INFO  05:33:09,670 - #14 *
INFO  05:33:09,670 - #26 2
INFO  05:33:09,670 - #19 -
INFO  05:33:09,670 - #26 3
INFO  05:33:09,670 - #7 )
INFO  05:33:09,670 - #5 ;
INFO  05:33:09,670 - #9 print
INFO  05:33:09,670 - #6 (
INFO  05:33:09,670 - #27 bodovi
INFO  05:33:09,670 - #7 )
INFO  05:33:09,671 - #5 ;
INFO  05:33:09,671 - #4 }
INFO  05:33:09,671 - #4 }
INFO  05:33:09,692 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     niz
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorChar(
                                                         c
                                                        ) [FactorChar]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:33:09,694 - ===================================
INFO  05:33:09,741 - Deklarisana je konsanta int nula = 0
INFO  05:33:09,742 - Deklarisana je konsanta int jedan = 1
INFO  05:33:09,742 - Deklarisana je konsanta int pet = 5
INFO  05:33:09,742 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:33:09,742 - Deklarisan je niz niz
INFO  05:33:09,742 - Deklarisan je niz niz2
INFO  05:33:09,742 - Deklarisana promenljiva a
INFO  05:33:09,742 - Deklarisana promenljiva b
INFO  05:33:09,742 - Deklarisan je niz nizch
INFO  05:33:09,742 - Deklarisana promenljiva c
INFO  05:33:09,743 - Deklarisana promenljiva s1
INFO  05:33:09,743 - Obradjuje se funkcija main na liniji 12
INFO  05:33:09,743 - Deklarisana promenljiva bodovi
INFO  05:33:09,743 - Deklarisana promenljiva bt
INFO  05:33:09,743 - Deklarisana promenljiva s
INFO  05:33:39,508 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:33:39,592 - #2 program
INFO  05:33:39,593 - #27 MJProgram
INFO  05:33:39,593 - #23 const
INFO  05:33:39,596 - #27 int
INFO  05:33:39,596 - #27 nula
INFO  05:33:39,597 - #12 =
INFO  05:33:39,597 - #26 0
INFO  05:33:39,598 - #5 ;
INFO  05:33:39,598 - #23 const
INFO  05:33:39,599 - #27 int
INFO  05:33:39,599 - #27 jedan
INFO  05:33:39,599 - #12 =
INFO  05:33:39,599 - #26 1
INFO  05:33:39,599 - #5 ;
INFO  05:33:39,599 - #23 const
INFO  05:33:39,599 - #27 int
INFO  05:33:39,599 - #27 pet
INFO  05:33:39,599 - #12 =
INFO  05:33:39,599 - #26 5
INFO  05:33:39,600 - #5 ;
INFO  05:33:39,600 - #23 const
INFO  05:33:39,600 - #27 char
INFO  05:33:39,600 - #27 pet1
INFO  05:33:39,600 - #12 =
INFO  05:33:39,600 - #28 c
INFO  05:33:39,600 - #5 ;
INFO  05:33:39,601 - #27 int
INFO  05:33:39,601 - #27 niz
INFO  05:33:39,601 - #20 [
INFO  05:33:39,601 - #21 ]
INFO  05:33:39,601 - #8 ,
INFO  05:33:39,602 - #27 niz2
INFO  05:33:39,602 - #20 [
INFO  05:33:39,602 - #21 ]
INFO  05:33:39,602 - #8 ,
INFO  05:33:39,602 - #27 a
INFO  05:33:39,602 - #8 ,
INFO  05:33:39,602 - #27 b
INFO  05:33:39,603 - #5 ;
INFO  05:33:39,603 - #27 char
INFO  05:33:39,603 - #27 nizch
INFO  05:33:39,603 - #20 [
INFO  05:33:39,603 - #21 ]
INFO  05:33:39,604 - #8 ,
INFO  05:33:39,604 - #27 c
INFO  05:33:39,604 - #5 ;
INFO  05:33:39,604 - #27 bool
INFO  05:33:39,604 - #27 s1
INFO  05:33:39,604 - #5 ;
INFO  05:33:39,604 - #3 {
INFO  05:33:39,605 - #13 void
INFO  05:33:39,607 - #27 main
INFO  05:33:39,607 - #6 (
INFO  05:33:39,608 - #7 )
INFO  05:33:39,608 - #27 int
INFO  05:33:39,608 - #27 bodovi
INFO  05:33:39,608 - #5 ;
INFO  05:33:39,609 - #27 bool
INFO  05:33:39,609 - #27 bt
INFO  05:33:39,609 - #5 ;
INFO  05:33:39,609 - #27 int
INFO  05:33:39,609 - #27 s
INFO  05:33:39,610 - #5 ;
INFO  05:33:39,610 - #3 {
INFO  05:33:39,610 - #27 niz
INFO  05:33:39,612 - #20 [
INFO  05:33:39,612 - #26 0
INFO  05:33:39,612 - #21 ]
INFO  05:33:39,613 - #12 =
INFO  05:33:39,613 - #28 c
INFO  05:33:39,614 - #5 ;
INFO  05:33:39,614 - #27 bodovi
INFO  05:33:39,615 - #12 =
INFO  05:33:39,615 - #26 0
INFO  05:33:39,616 - #5 ;
INFO  05:33:39,616 - #27 bodovi
INFO  05:33:39,616 - #15 ++
INFO  05:33:39,616 - #5 ;
INFO  05:33:39,616 - #27 bodovi
INFO  05:33:39,616 - #12 =
INFO  05:33:39,616 - #27 bodovi
INFO  05:33:39,616 - #11 +
INFO  05:33:39,616 - #27 jedan
INFO  05:33:39,619 - #5 ;
INFO  05:33:39,619 - #27 bodovi
INFO  05:33:39,620 - #12 =
INFO  05:33:39,620 - #27 bodovi
INFO  05:33:39,620 - #14 *
INFO  05:33:39,620 - #27 pet
INFO  05:33:39,623 - #5 ;
INFO  05:33:39,624 - #27 bodovi
INFO  05:33:39,624 - #16 --
INFO  05:33:39,624 - #5 ;
INFO  05:33:39,624 - #9 print
INFO  05:33:39,625 - #6 (
INFO  05:33:39,625 - #27 bodovi
INFO  05:33:39,625 - #7 )
INFO  05:33:39,626 - #5 ;
INFO  05:33:39,626 - #27 niz
INFO  05:33:39,627 - #12 =
INFO  05:33:39,627 - #32 new
INFO  05:33:39,628 - #27 int
INFO  05:33:39,628 - #20 [
INFO  05:33:39,628 - #26 3
INFO  05:33:39,628 - #21 ]
INFO  05:33:39,629 - #5 ;
INFO  05:33:39,629 - #27 niz
INFO  05:33:39,630 - #20 [
INFO  05:33:39,630 - #27 nula
INFO  05:33:39,630 - #21 ]
INFO  05:33:39,630 - #12 =
INFO  05:33:39,630 - #27 jedan
INFO  05:33:39,630 - #5 ;
INFO  05:33:39,630 - #27 niz
INFO  05:33:39,631 - #20 [
INFO  05:33:39,631 - #26 1
INFO  05:33:39,631 - #21 ]
INFO  05:33:39,631 - #12 =
INFO  05:33:39,631 - #26 2
INFO  05:33:39,631 - #5 ;
INFO  05:33:39,631 - #27 bodovi
INFO  05:33:39,631 - #12 =
INFO  05:33:39,632 - #27 niz
INFO  05:33:39,632 - #20 [
INFO  05:33:39,632 - #26 2
INFO  05:33:39,632 - #21 ]
INFO  05:33:39,632 - #17 /
INFO  05:33:39,632 - #27 niz
INFO  05:33:39,634 - #20 [
INFO  05:33:39,635 - #26 0
INFO  05:33:39,635 - #21 ]
INFO  05:33:39,635 - #5 ;
INFO  05:33:39,635 - #9 print
INFO  05:33:39,636 - #6 (
INFO  05:33:39,636 - #27 bodovi
INFO  05:33:39,636 - #7 )
INFO  05:33:39,636 - #5 ;
INFO  05:33:39,636 - #9 print
INFO  05:33:39,637 - #6 (
INFO  05:33:39,637 - #27 niz
INFO  05:33:39,637 - #20 [
INFO  05:33:39,637 - #26 2
INFO  05:33:39,637 - #21 ]
INFO  05:33:39,638 - #7 )
INFO  05:33:39,638 - #5 ;
INFO  05:33:39,638 - #27 nizch
INFO  05:33:39,638 - #20 [
INFO  05:33:39,638 - #26 0
INFO  05:33:39,639 - #21 ]
INFO  05:33:39,639 - #12 =
INFO  05:33:39,639 - #28 a
INFO  05:33:39,639 - #5 ;
INFO  05:33:39,639 - #27 nizch
INFO  05:33:39,639 - #20 [
INFO  05:33:39,640 - #27 jedan
INFO  05:33:39,640 - #21 ]
INFO  05:33:39,640 - #12 =
INFO  05:33:39,640 - #28 b
INFO  05:33:39,640 - #5 ;
INFO  05:33:39,640 - #27 nizch
INFO  05:33:39,640 - #20 [
INFO  05:33:39,640 - #27 pet
INFO  05:33:39,640 - #19 -
INFO  05:33:39,641 - #26 3
INFO  05:33:39,645 - #21 ]
INFO  05:33:39,646 - #12 =
INFO  05:33:39,646 - #28 c
INFO  05:33:39,646 - #5 ;
INFO  05:33:39,646 - #9 print
INFO  05:33:39,647 - #6 (
INFO  05:33:39,647 - #27 nizch
INFO  05:33:39,647 - #20 [
INFO  05:33:39,647 - #26 1
INFO  05:33:39,647 - #21 ]
INFO  05:33:39,648 - #7 )
INFO  05:33:39,648 - #5 ;
INFO  05:33:39,648 - #9 print
INFO  05:33:39,648 - #6 (
INFO  05:33:39,648 - #27 nizch
INFO  05:33:39,648 - #20 [
INFO  05:33:39,648 - #27 jedan
INFO  05:33:39,648 - #14 *
INFO  05:33:39,648 - #26 2
INFO  05:33:39,649 - #21 ]
INFO  05:33:39,649 - #7 )
INFO  05:33:39,649 - #5 ;
INFO  05:33:39,650 - #22 read
INFO  05:33:39,650 - #6 (
INFO  05:33:39,650 - #27 bodovi
INFO  05:33:39,650 - #7 )
INFO  05:33:39,650 - #5 ;
INFO  05:33:39,651 - #27 bodovi
INFO  05:33:39,651 - #12 =
INFO  05:33:39,652 - #19 -
INFO  05:33:39,652 - #27 bodovi
INFO  05:33:39,652 - #11 +
INFO  05:33:39,653 - #6 (
INFO  05:33:39,653 - #27 pet
INFO  05:33:39,653 - #14 *
INFO  05:33:39,653 - #27 a
INFO  05:33:39,653 - #17 /
INFO  05:33:39,653 - #26 2
INFO  05:33:39,653 - #19 -
INFO  05:33:39,653 - #27 jedan
INFO  05:33:39,654 - #7 )
INFO  05:33:39,654 - #14 *
INFO  05:33:39,654 - #27 bodovi
INFO  05:33:39,654 - #19 -
INFO  05:33:39,654 - #6 (
INFO  05:33:39,654 - #26 3
INFO  05:33:39,654 - #18 %
INFO  05:33:39,655 - #26 2
INFO  05:33:39,657 - #11 +
INFO  05:33:39,657 - #26 3
INFO  05:33:39,657 - #14 *
INFO  05:33:39,657 - #26 2
INFO  05:33:39,658 - #19 -
INFO  05:33:39,658 - #26 3
INFO  05:33:39,658 - #7 )
INFO  05:33:39,658 - #5 ;
INFO  05:33:39,658 - #9 print
INFO  05:33:39,659 - #6 (
INFO  05:33:39,659 - #27 bodovi
INFO  05:33:39,659 - #7 )
INFO  05:33:39,659 - #5 ;
INFO  05:33:39,659 - #4 }
INFO  05:33:39,659 - #4 }
INFO  05:33:39,680 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     niz
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorChar(
                                                         c
                                                        ) [FactorChar]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:33:39,682 - ===================================
INFO  05:33:39,725 - Deklarisana je konsanta int nula = 0
INFO  05:33:39,725 - Deklarisana je konsanta int jedan = 1
INFO  05:33:39,725 - Deklarisana je konsanta int pet = 5
INFO  05:33:39,725 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:33:39,725 - Deklarisan je niz niz
INFO  05:33:39,725 - Deklarisan je niz niz2
INFO  05:33:39,725 - Deklarisana promenljiva a
INFO  05:33:39,726 - Deklarisana promenljiva b
INFO  05:33:39,726 - Deklarisan je niz nizch
INFO  05:33:39,726 - Deklarisana promenljiva c
INFO  05:33:39,726 - Deklarisana promenljiva s1
INFO  05:33:39,726 - Obradjuje se funkcija main na liniji 12
INFO  05:33:39,726 - Deklarisana promenljiva bodovi
INFO  05:33:39,726 - Deklarisana promenljiva bt
INFO  05:33:39,726 - Deklarisana promenljiva s
INFO  05:34:56,178 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  05:34:56,243 - #2 program
INFO  05:34:56,244 - #27 MJProgram
INFO  05:34:56,244 - #23 const
INFO  05:34:56,245 - #27 int
INFO  05:34:56,245 - #27 nula
INFO  05:34:56,246 - #12 =
INFO  05:34:56,247 - #26 0
INFO  05:34:56,247 - #5 ;
INFO  05:34:56,247 - #23 const
INFO  05:34:56,248 - #27 int
INFO  05:34:56,248 - #27 jedan
INFO  05:34:56,248 - #12 =
INFO  05:34:56,248 - #26 1
INFO  05:34:56,248 - #5 ;
INFO  05:34:56,248 - #23 const
INFO  05:34:56,249 - #27 int
INFO  05:34:56,249 - #27 pet
INFO  05:34:56,249 - #12 =
INFO  05:34:56,249 - #26 5
INFO  05:34:56,249 - #5 ;
INFO  05:34:56,249 - #23 const
INFO  05:34:56,249 - #27 char
INFO  05:34:56,250 - #27 pet1
INFO  05:34:56,250 - #12 =
INFO  05:34:56,250 - #28 c
INFO  05:34:56,250 - #5 ;
INFO  05:34:56,250 - #27 int
INFO  05:34:56,251 - #27 niz
INFO  05:34:56,251 - #20 [
INFO  05:34:56,251 - #21 ]
INFO  05:34:56,251 - #8 ,
INFO  05:34:56,251 - #27 niz2
INFO  05:34:56,251 - #20 [
INFO  05:34:56,251 - #21 ]
INFO  05:34:56,252 - #8 ,
INFO  05:34:56,252 - #27 a
INFO  05:34:56,252 - #8 ,
INFO  05:34:56,252 - #27 b
INFO  05:34:56,252 - #5 ;
INFO  05:34:56,253 - #27 char
INFO  05:34:56,253 - #27 nizch
INFO  05:34:56,254 - #20 [
INFO  05:34:56,254 - #21 ]
INFO  05:34:56,254 - #8 ,
INFO  05:34:56,254 - #27 c
INFO  05:34:56,254 - #5 ;
INFO  05:34:56,254 - #27 bool
INFO  05:34:56,255 - #27 s1
INFO  05:34:56,255 - #5 ;
INFO  05:34:56,255 - #3 {
INFO  05:34:56,255 - #13 void
INFO  05:34:56,256 - #27 main
INFO  05:34:56,257 - #6 (
INFO  05:34:56,257 - #7 )
INFO  05:34:56,257 - #27 int
INFO  05:34:56,257 - #27 bodovi
INFO  05:34:56,257 - #5 ;
INFO  05:34:56,257 - #27 bool
INFO  05:34:56,258 - #27 bt
INFO  05:34:56,258 - #5 ;
INFO  05:34:56,258 - #27 int
INFO  05:34:56,258 - #27 s
INFO  05:34:56,258 - #5 ;
INFO  05:34:56,258 - #3 {
INFO  05:34:56,259 - #27 niz
INFO  05:34:56,260 - #20 [
INFO  05:34:56,260 - #26 0
INFO  05:34:56,260 - #21 ]
INFO  05:34:56,261 - #12 =
INFO  05:34:56,261 - #28 c
INFO  05:34:56,261 - #5 ;
INFO  05:34:56,262 - #27 bodovi
INFO  05:34:56,262 - #12 =
INFO  05:34:56,262 - #26 0
INFO  05:34:56,262 - #5 ;
INFO  05:34:56,262 - #27 bodovi
INFO  05:34:56,263 - #15 ++
INFO  05:34:56,263 - #5 ;
INFO  05:34:56,263 - #27 bodovi
INFO  05:34:56,263 - #12 =
INFO  05:34:56,263 - #27 bodovi
INFO  05:34:56,263 - #11 +
INFO  05:34:56,263 - #27 jedan
INFO  05:34:56,265 - #5 ;
INFO  05:34:56,265 - #27 bodovi
INFO  05:34:56,265 - #12 =
INFO  05:34:56,265 - #27 bodovi
INFO  05:34:56,266 - #14 *
INFO  05:34:56,266 - #27 pet
INFO  05:34:56,268 - #5 ;
INFO  05:34:56,268 - #27 bodovi
INFO  05:34:56,268 - #16 --
INFO  05:34:56,268 - #5 ;
INFO  05:34:56,268 - #9 print
INFO  05:34:56,269 - #6 (
INFO  05:34:56,269 - #27 bodovi
INFO  05:34:56,269 - #7 )
INFO  05:34:56,269 - #5 ;
INFO  05:34:56,269 - #27 niz
INFO  05:34:56,269 - #12 =
INFO  05:34:56,270 - #32 new
INFO  05:34:56,270 - #27 int
INFO  05:34:56,270 - #20 [
INFO  05:34:56,270 - #26 3
INFO  05:34:56,270 - #21 ]
INFO  05:34:56,270 - #5 ;
INFO  05:34:56,270 - #27 niz
INFO  05:34:56,271 - #20 [
INFO  05:34:56,271 - #27 nula
INFO  05:34:56,271 - #21 ]
INFO  05:34:56,271 - #12 =
INFO  05:34:56,271 - #27 jedan
INFO  05:34:56,271 - #5 ;
INFO  05:34:56,271 - #27 niz
INFO  05:34:56,271 - #20 [
INFO  05:34:56,272 - #26 1
INFO  05:34:56,272 - #21 ]
INFO  05:34:56,272 - #12 =
INFO  05:34:56,272 - #26 2
INFO  05:34:56,272 - #5 ;
INFO  05:34:56,272 - #27 bodovi
INFO  05:34:56,272 - #12 =
INFO  05:34:56,272 - #27 niz
INFO  05:34:56,273 - #20 [
INFO  05:34:56,273 - #26 2
INFO  05:34:56,273 - #21 ]
INFO  05:34:56,273 - #17 /
INFO  05:34:56,273 - #27 niz
INFO  05:34:56,275 - #20 [
INFO  05:34:56,275 - #26 0
INFO  05:34:56,275 - #21 ]
INFO  05:34:56,275 - #5 ;
INFO  05:34:56,276 - #9 print
INFO  05:34:56,276 - #6 (
INFO  05:34:56,276 - #27 bodovi
INFO  05:34:56,276 - #7 )
INFO  05:34:56,276 - #5 ;
INFO  05:34:56,276 - #9 print
INFO  05:34:56,276 - #6 (
INFO  05:34:56,276 - #27 niz
INFO  05:34:56,276 - #20 [
INFO  05:34:56,277 - #26 2
INFO  05:34:56,277 - #21 ]
INFO  05:34:56,277 - #7 )
INFO  05:34:56,277 - #5 ;
INFO  05:34:56,277 - #27 nizch
INFO  05:34:56,277 - #20 [
INFO  05:34:56,277 - #26 0
INFO  05:34:56,278 - #21 ]
INFO  05:34:56,278 - #12 =
INFO  05:34:56,278 - #28 a
INFO  05:34:56,278 - #5 ;
INFO  05:34:56,279 - #27 nizch
INFO  05:34:56,279 - #20 [
INFO  05:34:56,279 - #27 jedan
INFO  05:34:56,279 - #21 ]
INFO  05:34:56,279 - #12 =
INFO  05:34:56,279 - #28 b
INFO  05:34:56,279 - #5 ;
INFO  05:34:56,279 - #27 nizch
INFO  05:34:56,279 - #20 [
INFO  05:34:56,280 - #27 pet
INFO  05:34:56,280 - #19 -
INFO  05:34:56,280 - #26 3
INFO  05:34:56,283 - #21 ]
INFO  05:34:56,284 - #12 =
INFO  05:34:56,284 - #28 c
INFO  05:34:56,284 - #5 ;
INFO  05:34:56,284 - #9 print
INFO  05:34:56,284 - #6 (
INFO  05:34:56,284 - #27 nizch
INFO  05:34:56,285 - #20 [
INFO  05:34:56,285 - #26 1
INFO  05:34:56,285 - #21 ]
INFO  05:34:56,285 - #7 )
INFO  05:34:56,285 - #5 ;
INFO  05:34:56,285 - #9 print
INFO  05:34:56,286 - #6 (
INFO  05:34:56,286 - #27 nizch
INFO  05:34:56,286 - #20 [
INFO  05:34:56,286 - #27 jedan
INFO  05:34:56,286 - #14 *
INFO  05:34:56,286 - #26 2
INFO  05:34:56,286 - #21 ]
INFO  05:34:56,286 - #7 )
INFO  05:34:56,287 - #5 ;
INFO  05:34:56,287 - #22 read
INFO  05:34:56,287 - #6 (
INFO  05:34:56,287 - #27 bodovi
INFO  05:34:56,287 - #7 )
INFO  05:34:56,287 - #5 ;
INFO  05:34:56,288 - #27 bodovi
INFO  05:34:56,288 - #12 =
INFO  05:34:56,288 - #19 -
INFO  05:34:56,288 - #27 bodovi
INFO  05:34:56,288 - #11 +
INFO  05:34:56,289 - #6 (
INFO  05:34:56,289 - #27 pet
INFO  05:34:56,289 - #14 *
INFO  05:34:56,289 - #27 a
INFO  05:34:56,289 - #17 /
INFO  05:34:56,290 - #26 2
INFO  05:34:56,290 - #19 -
INFO  05:34:56,290 - #27 jedan
INFO  05:34:56,290 - #7 )
INFO  05:34:56,290 - #14 *
INFO  05:34:56,290 - #27 bodovi
INFO  05:34:56,290 - #19 -
INFO  05:34:56,290 - #6 (
INFO  05:34:56,291 - #26 3
INFO  05:34:56,291 - #18 %
INFO  05:34:56,291 - #26 2
INFO  05:34:56,292 - #11 +
INFO  05:34:56,293 - #26 3
INFO  05:34:56,293 - #14 *
INFO  05:34:56,293 - #26 2
INFO  05:34:56,293 - #19 -
INFO  05:34:56,293 - #26 3
INFO  05:34:56,293 - #7 )
INFO  05:34:56,293 - #5 ;
INFO  05:34:56,293 - #9 print
INFO  05:34:56,293 - #6 (
INFO  05:34:56,294 - #27 bodovi
INFO  05:34:56,294 - #7 )
INFO  05:34:56,294 - #5 ;
INFO  05:34:56,294 - #4 }
INFO  05:34:56,294 - #4 }
INFO  05:34:56,314 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                NoStmt(
                                                ) [NoStmt]
                                                DesignatorStmt(
                                                  Assignment(
                                                    DesignatorExpr(
                                                     niz
                                                      TermExpr(
                                                        TermFactor(
                                                          FactorNUMBER(
                                                           0
                                                          ) [FactorNUMBER]
                                                        ) [TermFactor]
                                                      ) [TermExpr]
                                                    ) [DesignatorExpr]
                                                    TermExpr(
                                                      TermFactor(
                                                        FactorChar(
                                                         c
                                                        ) [FactorChar]
                                                      ) [TermFactor]
                                                    ) [TermExpr]
                                                  ) [Assignment]
                                                ) [DesignatorStmt]
                                              ) [Statements]
                                              DesignatorStmt(
                                                Assignment(
                                                  DesignatorIDENT(
                                                   bodovi
                                                  ) [DesignatorIDENT]
                                                  TermExpr(
                                                    TermFactor(
                                                      FactorNUMBER(
                                                       0
                                                      ) [FactorNUMBER]
                                                    ) [TermFactor]
                                                  ) [TermExpr]
                                                ) [Assignment]
                                              ) [DesignatorStmt]
                                            ) [Statements]
                                            DesignatorStmt(
                                              DesignatorINC(
                                                DesignatorIDENT(
                                                 bodovi
                                                ) [DesignatorIDENT]
                                              ) [DesignatorINC]
                                            ) [DesignatorStmt]
                                          ) [Statements]
                                          DesignatorStmt(
                                            Assignment(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                              AddExpr(
                                                TermExpr(
                                                  TermFactor(
                                                    Var(
                                                      DesignatorIDENT(
                                                       bodovi
                                                      ) [DesignatorIDENT]
                                                    ) [Var]
                                                  ) [TermFactor]
                                                ) [TermExpr]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     jedan
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                              ) [AddExpr]
                                            ) [Assignment]
                                          ) [DesignatorStmt]
                                        ) [Statements]
                                        DesignatorStmt(
                                          Assignment(
                                            DesignatorIDENT(
                                             bodovi
                                            ) [DesignatorIDENT]
                                            TermExpr(
                                              TermMulop(
                                                TermFactor(
                                                  Var(
                                                    DesignatorIDENT(
                                                     bodovi
                                                    ) [DesignatorIDENT]
                                                  ) [Var]
                                                ) [TermFactor]
                                                MulopMUL(
                                                ) [MulopMUL]
                                                Var(
                                                  DesignatorIDENT(
                                                   pet
                                                  ) [DesignatorIDENT]
                                                ) [Var]
                                              ) [TermMulop]
                                            ) [TermExpr]
                                          ) [Assignment]
                                        ) [DesignatorStmt]
                                      ) [Statements]
                                      DesignatorStmt(
                                        DesignatorDEC(
                                          DesignatorIDENT(
                                           bodovi
                                          ) [DesignatorIDENT]
                                        ) [DesignatorDEC]
                                      ) [DesignatorStmt]
                                    ) [Statements]
                                    MatchedStmt(
                                      PrintStmt(
                                        TermExpr(
                                          TermFactor(
                                            Var(
                                              DesignatorIDENT(
                                               bodovi
                                              ) [DesignatorIDENT]
                                            ) [Var]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [PrintStmt]
                                    ) [MatchedStmt]
                                  ) [Statements]
                                  DesignatorStmt(
                                    Assignment(
                                      DesignatorIDENT(
                                       niz
                                      ) [DesignatorIDENT]
                                      TermExpr(
                                        TermFactor(
                                          FactorNEW(
                                            Type(
                                             int
                                            ) [Type]
                                            TermExpr(
                                              TermFactor(
                                                FactorNUMBER(
                                                 3
                                                ) [FactorNUMBER]
                                              ) [TermFactor]
                                            ) [TermExpr]
                                          ) [FactorNEW]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [Assignment]
                                  ) [DesignatorStmt]
                                ) [Statements]
                                DesignatorStmt(
                                  Assignment(
                                    DesignatorExpr(
                                     niz
                                      TermExpr(
                                        TermFactor(
                                          Var(
                                            DesignatorIDENT(
                                             nula
                                            ) [DesignatorIDENT]
                                          ) [Var]
                                        ) [TermFactor]
                                      ) [TermExpr]
                                    ) [DesignatorExpr]
                                    TermExpr(
                                      TermFactor(
                                        Var(
                                          DesignatorIDENT(
                                           jedan
                                          ) [DesignatorIDENT]
                                        ) [Var]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [Assignment]
                                ) [DesignatorStmt]
                              ) [Statements]
                              DesignatorStmt(
                                Assignment(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         1
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       2
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [Assignment]
                              ) [DesignatorStmt]
                            ) [Statements]
                            DesignatorStmt(
                              Assignment(
                                DesignatorIDENT(
                                 bodovi
                                ) [DesignatorIDENT]
                                TermExpr(
                                  TermMulop(
                                    TermFactor(
                                      Var(
                                        DesignatorExpr(
                                         niz
                                          TermExpr(
                                            TermFactor(
                                              FactorNUMBER(
                                               2
                                              ) [FactorNUMBER]
                                            ) [TermFactor]
                                          ) [TermExpr]
                                        ) [DesignatorExpr]
                                      ) [Var]
                                    ) [TermFactor]
                                    MulopDIV(
                                    ) [MulopDIV]
                                    Var(
                                      DesignatorExpr(
                                       niz
                                        TermExpr(
                                          TermFactor(
                                            FactorNUMBER(
                                             0
                                            ) [FactorNUMBER]
                                          ) [TermFactor]
                                        ) [TermExpr]
                                      ) [DesignatorExpr]
                                    ) [Var]
                                  ) [TermMulop]
                                ) [TermExpr]
                              ) [Assignment]
                            ) [DesignatorStmt]
                          ) [Statements]
                          MatchedStmt(
                            PrintStmt(
                              TermExpr(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     bodovi
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                              ) [TermExpr]
                            ) [PrintStmt]
                          ) [MatchedStmt]
                        ) [Statements]
                        MatchedStmt(
                          PrintStmt(
                            TermExpr(
                              TermFactor(
                                Var(
                                  DesignatorExpr(
                                   niz
                                    TermExpr(
                                      TermFactor(
                                        FactorNUMBER(
                                         2
                                        ) [FactorNUMBER]
                                      ) [TermFactor]
                                    ) [TermExpr]
                                  ) [DesignatorExpr]
                                ) [Var]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [PrintStmt]
                        ) [MatchedStmt]
                      ) [Statements]
                      DesignatorStmt(
                        Assignment(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 0
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                          TermExpr(
                            TermFactor(
                              FactorChar(
                               a
                              ) [FactorChar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [Assignment]
                      ) [DesignatorStmt]
                    ) [Statements]
                    DesignatorStmt(
                      Assignment(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                        TermExpr(
                          TermFactor(
                            FactorChar(
                             b
                            ) [FactorChar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [Assignment]
                    ) [DesignatorStmt]
                  ) [Statements]
                  DesignatorStmt(
                    Assignment(
                      DesignatorExpr(
                       nizch
                        AddExpr(
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 pet
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [DesignatorExpr]
                      TermExpr(
                        TermFactor(
                          FactorChar(
                           c
                          ) [FactorChar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                MatchedStmt(
                  PrintStmt(
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorExpr(
                           nizch
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 1
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [DesignatorExpr]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [PrintStmt]
                ) [MatchedStmt]
              ) [Statements]
              MatchedStmt(
                PrintStmt(
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         nizch
                          TermExpr(
                            TermMulop(
                              TermFactor(
                                Var(
                                  DesignatorIDENT(
                                   jedan
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermFactor]
                              MulopMUL(
                              ) [MulopMUL]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [PrintStmt]
              ) [MatchedStmt]
            ) [Statements]
            MatchedStmt(
              StatementRead(
                DesignatorIDENT(
                 bodovi
                ) [DesignatorIDENT]
              ) [StatementRead]
            ) [MatchedStmt]
          ) [Statements]
          DesignatorStmt(
            Assignment(
              DesignatorIDENT(
               bodovi
              ) [DesignatorIDENT]
              AddExpr(
                AddExpr(
                  TermExprMinus(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         bodovi
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExprMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulop(
                    TermFactor(
                      FactorExpr(
                        AddExpr(
                          TermExpr(
                            TermMulop(
                              TermMulop(
                                TermFactor(
                                  Var(
                                    DesignatorIDENT(
                                     pet
                                    ) [DesignatorIDENT]
                                  ) [Var]
                                ) [TermFactor]
                                MulopMUL(
                                ) [MulopMUL]
                                Var(
                                  DesignatorIDENT(
                                   a
                                  ) [DesignatorIDENT]
                                ) [Var]
                              ) [TermMulop]
                              MulopDIV(
                              ) [MulopDIV]
                              FactorNUMBER(
                               2
                              ) [FactorNUMBER]
                            ) [TermMulop]
                          ) [TermExpr]
                          AddopMinus(
                          ) [AddopMinus]
                          TermFactor(
                            Var(
                              DesignatorIDENT(
                               jedan
                              ) [DesignatorIDENT]
                            ) [Var]
                          ) [TermFactor]
                        ) [AddExpr]
                      ) [FactorExpr]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    Var(
                      DesignatorIDENT(
                       bodovi
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermMulop]
                ) [AddExpr]
                AddopMinus(
                ) [AddopMinus]
                TermFactor(
                  FactorExpr(
                    AddExpr(
                      AddExpr(
                        TermExpr(
                          TermMulop(
                            TermFactor(
                              FactorNUMBER(
                               3
                              ) [FactorNUMBER]
                            ) [TermFactor]
                            MulopMOD(
                            ) [MulopMOD]
                            FactorNUMBER(
                             2
                            ) [FactorNUMBER]
                          ) [TermMulop]
                        ) [TermExpr]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulop(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                          MulopMUL(
                          ) [MulopMUL]
                          FactorNUMBER(
                           2
                          ) [FactorNUMBER]
                        ) [TermMulop]
                      ) [AddExpr]
                      AddopMinus(
                      ) [AddopMinus]
                      TermFactor(
                        FactorNUMBER(
                         3
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [AddExpr]
                  ) [FactorExpr]
                ) [TermFactor]
              ) [AddExpr]
            ) [Assignment]
          ) [DesignatorStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorIDENT(
                   bodovi
                  ) [DesignatorIDENT]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  05:34:56,317 - ===================================
INFO  05:34:56,322 - Deklarisana je konsanta int nula = 0
INFO  05:34:56,323 - Deklarisana je konsanta int jedan = 1
INFO  05:34:56,323 - Deklarisana je konsanta int pet = 5
INFO  05:34:56,323 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  05:34:56,323 - Deklarisan je niz niz
INFO  05:34:56,323 - Deklarisan je niz niz2
INFO  05:34:56,323 - Deklarisana promenljiva a
INFO  05:34:56,323 - Deklarisana promenljiva b
INFO  05:34:56,323 - Deklarisan je niz nizch
INFO  05:34:56,323 - Deklarisana promenljiva c
INFO  05:34:56,324 - Deklarisana promenljiva s1
INFO  05:34:56,324 - Obradjuje se funkcija main na liniji 12
INFO  05:34:56,324 - Deklarisana promenljiva bodovi
INFO  05:34:56,324 - Deklarisana promenljiva bt
INFO  05:34:56,324 - Deklarisana promenljiva s
ERROR 05:34:56,324 - Greska na liniji 23 :  nekompatibilni tipovi.
INFO  05:34:56,325 - Deklarisana je niz (uz pomoc NEW)
ERROR 05:34:56,325 - Greska na liniji 43 :  nekompatibilni tipovi.
ERROR 05:34:56,325 - Greska na liniji 44 :  nekompatibilni tipovi.
ERROR 05:34:56,325 - Greska na liniji 45 :  nekompatibilni tipovi.
INFO  05:34:56,325 - Izvrsena negacija  na liniji 51
INFO  05:34:56,325 -  Print count calls = 6
INFO  05:34:56,325 -  Deklarisanih promenljivih ima = 11
INFO  05:34:56,326 - ===================================
ERROR 05:34:56,327 - Parsiranje NIJE uspesno zavrseno!
