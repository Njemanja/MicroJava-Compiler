INFO  03:39:08,213 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:39:08,267 - #2 program
INFO  03:39:08,268 - #27 MJProgram
INFO  03:39:08,268 - #23 const
INFO  03:39:08,269 - #27 int
INFO  03:39:08,270 - #27 nula
INFO  03:39:08,271 - #12 =
INFO  03:39:08,271 - #26 0
INFO  03:39:08,271 - #5 ;
INFO  03:39:08,271 - #23 const
INFO  03:39:08,271 - #27 int
INFO  03:39:08,271 - #27 jedan
INFO  03:39:08,272 - #12 =
INFO  03:39:08,272 - #26 1
INFO  03:39:08,272 - #5 ;
INFO  03:39:08,272 - #23 const
INFO  03:39:08,272 - #27 int
INFO  03:39:08,272 - #27 pet
INFO  03:39:08,272 - #12 =
INFO  03:39:08,272 - #26 5
INFO  03:39:08,272 - #5 ;
INFO  03:39:08,273 - #23 const
INFO  03:39:08,273 - #27 char
INFO  03:39:08,273 - #27 pet1
INFO  03:39:08,273 - #12 =
INFO  03:39:08,273 - #28 c
INFO  03:39:08,273 - #5 ;
INFO  03:39:08,274 - #27 int
INFO  03:39:08,274 - #27 niz
INFO  03:39:08,274 - #20 [
INFO  03:39:08,274 - #21 ]
INFO  03:39:08,274 - #8 ,
INFO  03:39:08,274 - #27 niz2
INFO  03:39:08,274 - #20 [
INFO  03:39:08,275 - #21 ]
INFO  03:39:08,275 - #8 ,
INFO  03:39:08,275 - #27 a
INFO  03:39:08,275 - #8 ,
INFO  03:39:08,275 - #27 b
INFO  03:39:08,275 - #5 ;
INFO  03:39:08,275 - #27 char
INFO  03:39:08,276 - #27 nizch
INFO  03:39:08,276 - #20 [
INFO  03:39:08,276 - #21 ]
INFO  03:39:08,276 - #8 ,
INFO  03:39:08,276 - #27 c
INFO  03:39:08,276 - #5 ;
INFO  03:39:08,276 - #27 bool
INFO  03:39:08,277 - #27 s1
INFO  03:39:08,277 - #5 ;
INFO  03:39:08,277 - #3 {
INFO  03:39:08,277 - #13 void
INFO  03:39:08,278 - #27 main
INFO  03:39:08,278 - #6 (
INFO  03:39:08,278 - #7 )
INFO  03:39:08,278 - #27 int
INFO  03:39:08,278 - #27 bodovi
INFO  03:39:08,278 - #5 ;
INFO  03:39:08,279 - #27 bool
INFO  03:39:08,279 - #27 bt
INFO  03:39:08,279 - #5 ;
INFO  03:39:08,279 - #27 int
INFO  03:39:08,279 - #27 s
INFO  03:39:08,279 - #5 ;
INFO  03:39:08,279 - #3 {
INFO  03:39:08,279 - #27 c
INFO  03:39:08,280 - #12 =
INFO  03:39:08,280 - #27 nula
INFO  03:39:08,280 - #5 ;
INFO  03:39:08,281 - #27 a
INFO  03:39:08,281 - #12 =
INFO  03:39:08,281 - #27 pet1
INFO  03:39:08,281 - #5 ;
INFO  03:39:08,281 - #27 niz
INFO  03:39:08,281 - #12 =
INFO  03:39:08,281 - #32 new
INFO  03:39:08,281 - #27 int
INFO  03:39:08,281 - #20 [
INFO  03:39:08,281 - #26 3
INFO  03:39:08,281 - #21 ]
INFO  03:39:08,281 - #5 ;
INFO  03:39:08,282 - #27 niz
INFO  03:39:08,282 - #20 [
INFO  03:39:08,282 - #27 nula
INFO  03:39:08,282 - #21 ]
INFO  03:39:08,282 - #12 =
INFO  03:39:08,282 - #27 jedan
INFO  03:39:08,282 - #5 ;
INFO  03:39:08,282 - #9 print
INFO  03:39:08,282 - #6 (
INFO  03:39:08,282 - #27 bodovi
INFO  03:39:08,282 - #7 )
INFO  03:39:08,282 - #5 ;
INFO  03:39:08,283 - #9 print
INFO  03:39:08,283 - #6 (
INFO  03:39:08,283 - #27 niz
INFO  03:39:08,283 - #20 [
INFO  03:39:08,283 - #26 2
INFO  03:39:08,283 - #21 ]
INFO  03:39:08,283 - #7 )
INFO  03:39:08,283 - #5 ;
INFO  03:39:08,284 - #4 }
INFO  03:39:08,285 - #4 }
INFO  03:39:08,293 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorIDENT(
                       c
                      ) [DesignatorIDENT]
                      TermExpr(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             nula
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     a
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorIDENT(
                           pet1
                          ) [DesignatorIDENT]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:39:08,294 - ===================================
INFO  03:39:08,315 - Deklarisana je konsanta int nula = 0
INFO  03:39:08,316 - Deklarisana je konsanta int jedan = 1
INFO  03:39:08,316 - Deklarisana je konsanta int pet = 5
INFO  03:39:08,316 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:39:08,316 - Deklarisan je niz niz
INFO  03:39:08,316 - Deklarisan je niz niz2
INFO  03:39:08,316 - Deklarisana promenljiva a
INFO  03:39:08,316 - Deklarisana promenljiva b
INFO  03:39:08,316 - Deklarisan je niz nizch
INFO  03:39:08,316 - Deklarisana promenljiva c
INFO  03:39:08,317 - Deklarisana promenljiva s1
INFO  03:39:08,317 - Obradjuje se funkcija main na liniji 12
INFO  03:39:08,317 - Deklarisana promenljiva bodovi
INFO  03:39:08,317 - Deklarisana promenljiva bt
INFO  03:39:08,317 - Deklarisana promenljiva s
ERROR 03:41:13,625 - Greska na liniji 19 :  nekompatibilni tipovi.
INFO  03:41:21,248 - OK!
ERROR 03:41:22,758 - Greska na liniji 20 :  nekompatibilni tipovi.
INFO  03:41:22,762 - OK!
INFO  03:41:51,105 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:41:51,149 - #2 program
INFO  03:41:51,150 - #27 MJProgram
INFO  03:41:51,150 - #23 const
INFO  03:41:51,151 - #27 int
INFO  03:41:51,151 - #27 nula
INFO  03:41:51,152 - #12 =
INFO  03:41:51,152 - #26 0
INFO  03:41:51,152 - #5 ;
INFO  03:41:51,152 - #23 const
INFO  03:41:51,152 - #27 int
INFO  03:41:51,152 - #27 jedan
INFO  03:41:51,152 - #12 =
INFO  03:41:51,153 - #26 1
INFO  03:41:51,153 - #5 ;
INFO  03:41:51,153 - #23 const
INFO  03:41:51,153 - #27 int
INFO  03:41:51,153 - #27 pet
INFO  03:41:51,153 - #12 =
INFO  03:41:51,153 - #26 5
INFO  03:41:51,153 - #5 ;
INFO  03:41:51,153 - #23 const
INFO  03:41:51,153 - #27 char
INFO  03:41:51,153 - #27 pet1
INFO  03:41:51,153 - #12 =
INFO  03:41:51,154 - #28 c
INFO  03:41:51,154 - #5 ;
INFO  03:41:51,154 - #27 int
INFO  03:41:51,154 - #27 niz
INFO  03:41:51,154 - #20 [
INFO  03:41:51,154 - #21 ]
INFO  03:41:51,154 - #8 ,
INFO  03:41:51,154 - #27 niz2
INFO  03:41:51,154 - #20 [
INFO  03:41:51,154 - #21 ]
INFO  03:41:51,154 - #8 ,
INFO  03:41:51,155 - #27 a
INFO  03:41:51,155 - #8 ,
INFO  03:41:51,155 - #27 b
INFO  03:41:51,155 - #5 ;
INFO  03:41:51,155 - #27 char
INFO  03:41:51,155 - #27 nizch
INFO  03:41:51,155 - #20 [
INFO  03:41:51,155 - #21 ]
INFO  03:41:51,155 - #8 ,
INFO  03:41:51,156 - #27 c
INFO  03:41:51,156 - #5 ;
INFO  03:41:51,156 - #27 bool
INFO  03:41:51,156 - #27 s1
INFO  03:41:51,156 - #5 ;
INFO  03:41:51,156 - #3 {
INFO  03:41:51,156 - #13 void
INFO  03:41:51,157 - #27 main
INFO  03:41:51,157 - #6 (
INFO  03:41:51,157 - #7 )
INFO  03:41:51,157 - #27 int
INFO  03:41:51,157 - #27 bodovi
INFO  03:41:51,157 - #5 ;
INFO  03:41:51,157 - #27 bool
INFO  03:41:51,157 - #27 bt
INFO  03:41:51,158 - #5 ;
INFO  03:41:51,158 - #27 int
INFO  03:41:51,158 - #27 s
INFO  03:41:51,158 - #5 ;
INFO  03:41:51,158 - #3 {
INFO  03:41:51,158 - #27 c
INFO  03:41:51,159 - #12 =
INFO  03:41:51,159 - #27 nula
INFO  03:41:51,159 - #5 ;
INFO  03:41:51,159 - #27 a
INFO  03:41:51,160 - #12 =
INFO  03:41:51,160 - #27 pet1
INFO  03:41:51,160 - #5 ;
INFO  03:41:51,160 - #27 niz
INFO  03:41:51,160 - #12 =
INFO  03:41:51,160 - #32 new
INFO  03:41:51,160 - #27 int
INFO  03:41:51,160 - #20 [
INFO  03:41:51,160 - #26 3
INFO  03:41:51,160 - #21 ]
INFO  03:41:51,161 - #5 ;
INFO  03:41:51,161 - #27 niz
INFO  03:41:51,161 - #20 [
INFO  03:41:51,161 - #27 nula
INFO  03:41:51,161 - #21 ]
INFO  03:41:51,161 - #12 =
INFO  03:41:51,161 - #27 jedan
INFO  03:41:51,161 - #5 ;
INFO  03:41:51,161 - #9 print
INFO  03:41:51,162 - #6 (
INFO  03:41:51,162 - #27 bodovi
INFO  03:41:51,162 - #7 )
INFO  03:41:51,162 - #5 ;
INFO  03:41:51,162 - #9 print
INFO  03:41:51,162 - #6 (
INFO  03:41:51,162 - #27 niz
INFO  03:41:51,162 - #20 [
INFO  03:41:51,162 - #26 2
INFO  03:41:51,162 - #21 ]
INFO  03:41:51,162 - #7 )
INFO  03:41:51,162 - #5 ;
INFO  03:41:51,164 - #4 }
INFO  03:41:51,164 - #4 }
INFO  03:41:51,171 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorIDENT(
                       c
                      ) [DesignatorIDENT]
                      TermExpr(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             nula
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorIDENT(
                     a
                    ) [DesignatorIDENT]
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorIDENT(
                           pet1
                          ) [DesignatorIDENT]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:41:51,171 - ===================================
INFO  03:41:51,174 - Deklarisana je konsanta int nula = 0
INFO  03:41:51,174 - Deklarisana je konsanta int jedan = 1
INFO  03:41:51,174 - Deklarisana je konsanta int pet = 5
INFO  03:41:51,174 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:41:51,174 - Deklarisan je niz niz
INFO  03:41:51,174 - Deklarisan je niz niz2
INFO  03:41:51,174 - Deklarisana promenljiva a
INFO  03:41:51,174 - Deklarisana promenljiva b
INFO  03:41:51,175 - Deklarisan je niz nizch
INFO  03:41:51,175 - Deklarisana promenljiva c
INFO  03:41:51,175 - Deklarisana promenljiva s1
INFO  03:41:51,175 - Obradjuje se funkcija main na liniji 12
INFO  03:41:51,175 - Deklarisana promenljiva bodovi
INFO  03:41:51,175 - Deklarisana promenljiva bt
INFO  03:41:51,175 - Deklarisana promenljiva s
ERROR 03:41:51,175 - Greska na liniji 19 :  nekompatibilni tipovi.
ERROR 03:41:51,175 - Greska na liniji 20 :  nekompatibilni tipovi.
INFO  03:41:51,175 - Deklarisana je niz (uz pomoc NEW) na liniji 34
ERROR 03:41:51,176 - Greska na liniji 34 :  u [ ] treba da bude INT.
ERROR 03:41:51,176 - Greska na liniji 35 :  nekompatibilni tipovi.
INFO  03:41:51,176 -  Print count calls = 2
INFO  03:41:51,176 -  Deklarisanih promenljivih ima = 11
INFO  03:41:51,176 - ===================================
ERROR 03:41:51,177 - Parsiranje NIJE uspesno zavrseno!
INFO  03:42:25,373 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:42:25,430 - #2 program
INFO  03:42:25,431 - #27 MJProgram
INFO  03:42:25,431 - #23 const
INFO  03:42:25,432 - #27 int
INFO  03:42:25,432 - #27 nula
INFO  03:42:25,433 - #12 =
INFO  03:42:25,433 - #26 0
INFO  03:42:25,434 - #5 ;
INFO  03:42:25,434 - #23 const
INFO  03:42:25,434 - #27 int
INFO  03:42:25,434 - #27 jedan
INFO  03:42:25,434 - #12 =
INFO  03:42:25,434 - #26 1
INFO  03:42:25,434 - #5 ;
INFO  03:42:25,434 - #23 const
INFO  03:42:25,434 - #27 int
INFO  03:42:25,435 - #27 pet
INFO  03:42:25,435 - #12 =
INFO  03:42:25,435 - #26 5
INFO  03:42:25,435 - #5 ;
INFO  03:42:25,435 - #23 const
INFO  03:42:25,435 - #27 char
INFO  03:42:25,435 - #27 pet1
INFO  03:42:25,435 - #12 =
INFO  03:42:25,435 - #28 c
INFO  03:42:25,435 - #5 ;
INFO  03:42:25,435 - #27 int
INFO  03:42:25,435 - #27 niz
INFO  03:42:25,435 - #20 [
INFO  03:42:25,436 - #21 ]
INFO  03:42:25,436 - #8 ,
INFO  03:42:25,436 - #27 niz2
INFO  03:42:25,436 - #20 [
INFO  03:42:25,436 - #21 ]
INFO  03:42:25,436 - #8 ,
INFO  03:42:25,436 - #27 a
INFO  03:42:25,436 - #8 ,
INFO  03:42:25,436 - #27 b
INFO  03:42:25,436 - #5 ;
INFO  03:42:25,436 - #27 char
INFO  03:42:25,437 - #27 nizch
INFO  03:42:25,437 - #20 [
INFO  03:42:25,437 - #21 ]
INFO  03:42:25,437 - #8 ,
INFO  03:42:25,437 - #27 c
INFO  03:42:25,437 - #5 ;
INFO  03:42:25,437 - #27 bool
INFO  03:42:25,437 - #27 s1
INFO  03:42:25,437 - #5 ;
INFO  03:42:25,437 - #3 {
INFO  03:42:25,437 - #13 void
INFO  03:42:25,438 - #27 main
INFO  03:42:25,438 - #6 (
INFO  03:42:25,439 - #7 )
INFO  03:42:25,439 - #27 int
INFO  03:42:25,439 - #27 bodovi
INFO  03:42:25,439 - #5 ;
INFO  03:42:25,439 - #27 bool
INFO  03:42:25,439 - #27 bt
INFO  03:42:25,439 - #5 ;
INFO  03:42:25,439 - #27 int
INFO  03:42:25,439 - #27 s
INFO  03:42:25,439 - #5 ;
INFO  03:42:25,440 - #3 {
INFO  03:42:25,440 - #27 niz
INFO  03:42:25,441 - #12 =
INFO  03:42:25,441 - #32 new
INFO  03:42:25,441 - #27 int
INFO  03:42:25,441 - #20 [
INFO  03:42:25,441 - #26 3
INFO  03:42:25,441 - #21 ]
INFO  03:42:25,441 - #5 ;
INFO  03:42:25,441 - #27 niz
INFO  03:42:25,442 - #20 [
INFO  03:42:25,442 - #27 nula
INFO  03:42:25,442 - #21 ]
INFO  03:42:25,442 - #12 =
INFO  03:42:25,442 - #27 jedan
INFO  03:42:25,442 - #5 ;
INFO  03:42:25,442 - #9 print
INFO  03:42:25,442 - #6 (
INFO  03:42:25,442 - #27 bodovi
INFO  03:42:25,443 - #7 )
INFO  03:42:25,443 - #5 ;
INFO  03:42:25,443 - #9 print
INFO  03:42:25,443 - #6 (
INFO  03:42:25,443 - #27 niz
INFO  03:42:25,443 - #20 [
INFO  03:42:25,443 - #26 2
INFO  03:42:25,443 - #21 ]
INFO  03:42:25,443 - #7 )
INFO  03:42:25,443 - #5 ;
INFO  03:42:25,443 - #4 }
INFO  03:42:25,443 - #4 }
INFO  03:42:25,452 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:42:25,453 - ===================================
INFO  03:42:25,473 - Deklarisana je konsanta int nula = 0
INFO  03:42:25,473 - Deklarisana je konsanta int jedan = 1
INFO  03:42:25,474 - Deklarisana je konsanta int pet = 5
INFO  03:42:25,474 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:42:25,475 - Deklarisan je niz niz
INFO  03:42:25,475 - Deklarisan je niz niz2
INFO  03:42:25,475 - Deklarisana promenljiva a
INFO  03:42:25,475 - Deklarisana promenljiva b
INFO  03:42:25,475 - Deklarisan je niz nizch
INFO  03:42:25,475 - Deklarisana promenljiva c
INFO  03:42:25,475 - Deklarisana promenljiva s1
INFO  03:42:25,476 - Obradjuje se funkcija main na liniji 12
INFO  03:42:25,476 - Deklarisana promenljiva bodovi
INFO  03:42:25,476 - Deklarisana promenljiva bt
INFO  03:42:25,476 - Deklarisana promenljiva s
INFO  03:42:25,476 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:42:38,288 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:42:38,339 - #2 program
INFO  03:42:38,340 - #27 MJProgram
INFO  03:42:38,340 - #23 const
INFO  03:42:38,341 - #27 int
INFO  03:42:38,341 - #27 nula
INFO  03:42:38,342 - #12 =
INFO  03:42:38,342 - #26 0
INFO  03:42:38,343 - #5 ;
INFO  03:42:38,343 - #23 const
INFO  03:42:38,343 - #27 int
INFO  03:42:38,343 - #27 jedan
INFO  03:42:38,343 - #12 =
INFO  03:42:38,343 - #26 1
INFO  03:42:38,343 - #5 ;
INFO  03:42:38,343 - #23 const
INFO  03:42:38,344 - #27 int
INFO  03:42:38,344 - #27 pet
INFO  03:42:38,344 - #12 =
INFO  03:42:38,344 - #26 5
INFO  03:42:38,344 - #5 ;
INFO  03:42:38,344 - #23 const
INFO  03:42:38,344 - #27 char
INFO  03:42:38,344 - #27 pet1
INFO  03:42:38,344 - #12 =
INFO  03:42:38,344 - #28 c
INFO  03:42:38,344 - #5 ;
INFO  03:42:38,345 - #27 int
INFO  03:42:38,345 - #27 niz
INFO  03:42:38,345 - #20 [
INFO  03:42:38,345 - #21 ]
INFO  03:42:38,345 - #8 ,
INFO  03:42:38,345 - #27 niz2
INFO  03:42:38,345 - #20 [
INFO  03:42:38,345 - #21 ]
INFO  03:42:38,345 - #8 ,
INFO  03:42:38,345 - #27 a
INFO  03:42:38,345 - #8 ,
INFO  03:42:38,345 - #27 b
INFO  03:42:38,345 - #5 ;
INFO  03:42:38,346 - #27 char
INFO  03:42:38,346 - #27 nizch
INFO  03:42:38,346 - #20 [
INFO  03:42:38,346 - #21 ]
INFO  03:42:38,346 - #8 ,
INFO  03:42:38,346 - #27 c
INFO  03:42:38,346 - #5 ;
INFO  03:42:38,346 - #27 bool
INFO  03:42:38,346 - #27 s1
INFO  03:42:38,346 - #5 ;
INFO  03:42:38,347 - #3 {
INFO  03:42:38,347 - #13 void
INFO  03:42:38,348 - #27 main
INFO  03:42:38,348 - #6 (
INFO  03:42:38,348 - #7 )
INFO  03:42:38,348 - #27 int
INFO  03:42:38,348 - #27 bodovi
INFO  03:42:38,348 - #5 ;
INFO  03:42:38,348 - #27 bool
INFO  03:42:38,348 - #27 bt
INFO  03:42:38,348 - #5 ;
INFO  03:42:38,348 - #27 int
INFO  03:42:38,348 - #27 s
INFO  03:42:38,348 - #5 ;
INFO  03:42:38,349 - #3 {
INFO  03:42:38,349 - #27 niz
INFO  03:42:38,349 - #12 =
INFO  03:42:38,350 - #32 new
INFO  03:42:38,350 - #27 int
INFO  03:42:38,350 - #20 [
INFO  03:42:38,350 - #26 3
INFO  03:42:38,350 - #21 ]
INFO  03:42:38,350 - #5 ;
INFO  03:42:38,350 - #27 niz
INFO  03:42:38,351 - #20 [
INFO  03:42:38,351 - #27 nula
INFO  03:42:38,351 - #21 ]
INFO  03:42:38,351 - #12 =
INFO  03:42:38,351 - #27 jedan
INFO  03:42:38,351 - #5 ;
INFO  03:42:38,351 - #9 print
INFO  03:42:38,351 - #6 (
INFO  03:42:38,352 - #27 bodovi
INFO  03:42:38,352 - #7 )
INFO  03:42:38,352 - #5 ;
INFO  03:42:38,352 - #9 print
INFO  03:42:38,352 - #6 (
INFO  03:42:38,352 - #27 niz
INFO  03:42:38,352 - #20 [
INFO  03:42:38,352 - #26 2
INFO  03:42:38,352 - #21 ]
INFO  03:42:38,352 - #7 )
INFO  03:42:38,352 - #5 ;
INFO  03:42:38,352 - #4 }
INFO  03:42:38,353 - #4 }
INFO  03:42:38,362 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:42:38,362 - ===================================
INFO  03:42:38,383 - Deklarisana je konsanta int nula = 0
INFO  03:42:38,383 - Deklarisana je konsanta int jedan = 1
INFO  03:42:38,383 - Deklarisana je konsanta int pet = 5
INFO  03:42:38,384 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:42:38,385 - Deklarisan je niz niz
INFO  03:42:38,386 - Deklarisan je niz niz2
INFO  03:42:38,386 - Deklarisana promenljiva a
INFO  03:42:38,386 - Deklarisana promenljiva b
INFO  03:42:38,386 - Deklarisan je niz nizch
INFO  03:42:38,386 - Deklarisana promenljiva c
INFO  03:42:38,386 - Deklarisana promenljiva s1
INFO  03:42:38,386 - Obradjuje se funkcija main na liniji 12
INFO  03:42:38,387 - Deklarisana promenljiva bodovi
INFO  03:42:38,387 - Deklarisana promenljiva bt
INFO  03:42:38,387 - Deklarisana promenljiva s
INFO  03:42:38,387 - Deklarisana je niz (uz pomoc NEW) na liniji 33
ERROR 03:43:54,785 - Greska na liniji 33 :  u [ ] treba da bude INT.
INFO  03:44:07,443 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:44:07,502 - #2 program
INFO  03:44:07,502 - #27 MJProgram
INFO  03:44:07,502 - #23 const
INFO  03:44:07,504 - #27 int
INFO  03:44:07,505 - #27 nula
INFO  03:44:07,506 - #12 =
INFO  03:44:07,506 - #26 0
INFO  03:44:07,506 - #5 ;
INFO  03:44:07,506 - #23 const
INFO  03:44:07,507 - #27 int
INFO  03:44:07,507 - #27 jedan
INFO  03:44:07,507 - #12 =
INFO  03:44:07,507 - #26 1
INFO  03:44:07,507 - #5 ;
INFO  03:44:07,507 - #23 const
INFO  03:44:07,507 - #27 int
INFO  03:44:07,507 - #27 pet
INFO  03:44:07,507 - #12 =
INFO  03:44:07,507 - #26 5
INFO  03:44:07,508 - #5 ;
INFO  03:44:07,508 - #23 const
INFO  03:44:07,508 - #27 char
INFO  03:44:07,508 - #27 pet1
INFO  03:44:07,508 - #12 =
INFO  03:44:07,508 - #28 c
INFO  03:44:07,508 - #5 ;
INFO  03:44:07,508 - #27 int
INFO  03:44:07,508 - #27 niz
INFO  03:44:07,508 - #20 [
INFO  03:44:07,508 - #21 ]
INFO  03:44:07,508 - #8 ,
INFO  03:44:07,509 - #27 niz2
INFO  03:44:07,509 - #20 [
INFO  03:44:07,509 - #21 ]
INFO  03:44:07,509 - #8 ,
INFO  03:44:07,509 - #27 a
INFO  03:44:07,509 - #8 ,
INFO  03:44:07,509 - #27 b
INFO  03:44:07,509 - #5 ;
INFO  03:44:07,509 - #27 char
INFO  03:44:07,510 - #27 nizch
INFO  03:44:07,510 - #20 [
INFO  03:44:07,510 - #21 ]
INFO  03:44:07,510 - #8 ,
INFO  03:44:07,510 - #27 c
INFO  03:44:07,510 - #5 ;
INFO  03:44:07,510 - #27 bool
INFO  03:44:07,510 - #27 s1
INFO  03:44:07,510 - #5 ;
INFO  03:44:07,510 - #3 {
INFO  03:44:07,510 - #13 void
INFO  03:44:07,511 - #27 main
INFO  03:44:07,511 - #6 (
INFO  03:44:07,512 - #7 )
INFO  03:44:07,512 - #27 int
INFO  03:44:07,512 - #27 bodovi
INFO  03:44:07,512 - #5 ;
INFO  03:44:07,512 - #27 bool
INFO  03:44:07,512 - #27 bt
INFO  03:44:07,512 - #5 ;
INFO  03:44:07,512 - #27 int
INFO  03:44:07,512 - #27 s
INFO  03:44:07,512 - #5 ;
INFO  03:44:07,512 - #3 {
INFO  03:44:07,513 - #27 niz
INFO  03:44:07,513 - #12 =
INFO  03:44:07,514 - #32 new
INFO  03:44:07,514 - #27 int
INFO  03:44:07,514 - #20 [
INFO  03:44:07,514 - #26 3
INFO  03:44:07,514 - #21 ]
INFO  03:44:07,514 - #5 ;
INFO  03:44:07,514 - #27 niz
INFO  03:44:07,515 - #20 [
INFO  03:44:07,515 - #27 nula
INFO  03:44:07,515 - #21 ]
INFO  03:44:07,515 - #12 =
INFO  03:44:07,515 - #27 jedan
INFO  03:44:07,515 - #5 ;
INFO  03:44:07,516 - #9 print
INFO  03:44:07,516 - #6 (
INFO  03:44:07,516 - #27 bodovi
INFO  03:44:07,516 - #7 )
INFO  03:44:07,516 - #5 ;
INFO  03:44:07,516 - #9 print
INFO  03:44:07,516 - #6 (
INFO  03:44:07,516 - #27 niz
INFO  03:44:07,516 - #20 [
INFO  03:44:07,516 - #26 2
INFO  03:44:07,516 - #21 ]
INFO  03:44:07,516 - #7 )
INFO  03:44:07,516 - #5 ;
INFO  03:44:07,517 - #4 }
INFO  03:44:07,517 - #4 }
INFO  03:44:07,526 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:44:07,527 - ===================================
INFO  03:44:07,550 - Deklarisana je konsanta int nula = 0
INFO  03:44:07,550 - Deklarisana je konsanta int jedan = 1
INFO  03:44:07,550 - Deklarisana je konsanta int pet = 5
INFO  03:44:07,551 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:44:07,552 - Deklarisan je niz niz
INFO  03:44:07,553 - Deklarisan je niz niz2
INFO  03:44:07,553 - Deklarisana promenljiva a
INFO  03:44:07,553 - Deklarisana promenljiva b
INFO  03:44:07,553 - Deklarisan je niz nizch
INFO  03:44:07,553 - Deklarisana promenljiva c
INFO  03:44:07,553 - Deklarisana promenljiva s1
INFO  03:44:07,553 - Obradjuje se funkcija main na liniji 12
INFO  03:44:07,554 - Deklarisana promenljiva bodovi
INFO  03:44:07,554 - Deklarisana promenljiva bt
INFO  03:44:07,554 - Deklarisana promenljiva s
INFO  03:44:37,762 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:44:37,812 - #2 program
INFO  03:44:37,812 - #27 MJProgram
INFO  03:44:37,813 - #23 const
INFO  03:44:37,814 - #27 int
INFO  03:44:37,814 - #27 nula
INFO  03:44:37,815 - #12 =
INFO  03:44:37,815 - #26 0
INFO  03:44:37,815 - #5 ;
INFO  03:44:37,815 - #23 const
INFO  03:44:37,816 - #27 int
INFO  03:44:37,816 - #27 jedan
INFO  03:44:37,816 - #12 =
INFO  03:44:37,816 - #26 1
INFO  03:44:37,816 - #5 ;
INFO  03:44:37,816 - #23 const
INFO  03:44:37,816 - #27 int
INFO  03:44:37,816 - #27 pet
INFO  03:44:37,816 - #12 =
INFO  03:44:37,816 - #26 5
INFO  03:44:37,816 - #5 ;
INFO  03:44:37,817 - #23 const
INFO  03:44:37,817 - #27 char
INFO  03:44:37,817 - #27 pet1
INFO  03:44:37,817 - #12 =
INFO  03:44:37,817 - #28 c
INFO  03:44:37,817 - #5 ;
INFO  03:44:37,817 - #27 int
INFO  03:44:37,817 - #27 niz
INFO  03:44:37,817 - #20 [
INFO  03:44:37,817 - #21 ]
INFO  03:44:37,817 - #8 ,
INFO  03:44:37,817 - #27 niz2
INFO  03:44:37,818 - #20 [
INFO  03:44:37,818 - #21 ]
INFO  03:44:37,818 - #8 ,
INFO  03:44:37,818 - #27 a
INFO  03:44:37,818 - #8 ,
INFO  03:44:37,818 - #27 b
INFO  03:44:37,818 - #5 ;
INFO  03:44:37,818 - #27 char
INFO  03:44:37,818 - #27 nizch
INFO  03:44:37,819 - #20 [
INFO  03:44:37,819 - #21 ]
INFO  03:44:37,819 - #8 ,
INFO  03:44:37,819 - #27 c
INFO  03:44:37,819 - #5 ;
INFO  03:44:37,819 - #27 bool
INFO  03:44:37,819 - #27 s1
INFO  03:44:37,819 - #5 ;
INFO  03:44:37,819 - #3 {
INFO  03:44:37,819 - #13 void
INFO  03:44:37,820 - #27 main
INFO  03:44:37,820 - #6 (
INFO  03:44:37,820 - #7 )
INFO  03:44:37,820 - #27 int
INFO  03:44:37,820 - #27 bodovi
INFO  03:44:37,820 - #5 ;
INFO  03:44:37,821 - #27 bool
INFO  03:44:37,821 - #27 bt
INFO  03:44:37,821 - #5 ;
INFO  03:44:37,821 - #27 int
INFO  03:44:37,821 - #27 s
INFO  03:44:37,821 - #5 ;
INFO  03:44:37,821 - #3 {
INFO  03:44:37,821 - #27 niz
INFO  03:44:37,822 - #12 =
INFO  03:44:37,822 - #32 new
INFO  03:44:37,822 - #27 int
INFO  03:44:37,822 - #20 [
INFO  03:44:37,822 - #26 3
INFO  03:44:37,822 - #21 ]
INFO  03:44:37,823 - #5 ;
INFO  03:44:37,823 - #27 niz
INFO  03:44:37,823 - #20 [
INFO  03:44:37,823 - #27 nula
INFO  03:44:37,823 - #21 ]
INFO  03:44:37,824 - #12 =
INFO  03:44:37,824 - #27 jedan
INFO  03:44:37,824 - #5 ;
INFO  03:44:37,824 - #9 print
INFO  03:44:37,824 - #6 (
INFO  03:44:37,824 - #27 bodovi
INFO  03:44:37,824 - #7 )
INFO  03:44:37,824 - #5 ;
INFO  03:44:37,824 - #9 print
INFO  03:44:37,824 - #6 (
INFO  03:44:37,824 - #27 niz
INFO  03:44:37,825 - #20 [
INFO  03:44:37,825 - #26 2
INFO  03:44:37,825 - #21 ]
INFO  03:44:37,825 - #7 )
INFO  03:44:37,825 - #5 ;
INFO  03:44:37,825 - #4 }
INFO  03:44:37,825 - #4 }
INFO  03:44:37,836 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:44:37,837 - ===================================
INFO  03:44:37,858 - Deklarisana je konsanta int nula = 0
INFO  03:44:37,859 - Deklarisana je konsanta int jedan = 1
INFO  03:44:37,859 - Deklarisana je konsanta int pet = 5
INFO  03:44:37,859 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:44:37,861 - Deklarisan je niz niz
INFO  03:44:37,861 - Deklarisan je niz niz2
INFO  03:44:37,861 - Deklarisana promenljiva a
INFO  03:44:37,861 - Deklarisana promenljiva b
INFO  03:44:37,861 - Deklarisan je niz nizch
INFO  03:44:37,861 - Deklarisana promenljiva c
INFO  03:44:37,861 - Deklarisana promenljiva s1
INFO  03:44:37,862 - Obradjuje se funkcija main na liniji 12
INFO  03:44:37,862 - Deklarisana promenljiva bodovi
INFO  03:44:37,862 - Deklarisana promenljiva bt
INFO  03:44:37,862 - Deklarisana promenljiva s
INFO  03:45:01,637 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:45:01,685 - #2 program
INFO  03:45:01,685 - #27 MJProgram
INFO  03:45:01,686 - #23 const
INFO  03:45:01,688 - #27 int
INFO  03:45:01,688 - #27 nula
INFO  03:45:01,689 - #12 =
INFO  03:45:01,690 - #26 0
INFO  03:45:01,690 - #5 ;
INFO  03:45:01,690 - #23 const
INFO  03:45:01,690 - #27 int
INFO  03:45:01,691 - #27 jedan
INFO  03:45:01,691 - #12 =
INFO  03:45:01,691 - #26 1
INFO  03:45:01,691 - #5 ;
INFO  03:45:01,691 - #23 const
INFO  03:45:01,691 - #27 int
INFO  03:45:01,691 - #27 pet
INFO  03:45:01,691 - #12 =
INFO  03:45:01,691 - #26 5
INFO  03:45:01,692 - #5 ;
INFO  03:45:01,692 - #23 const
INFO  03:45:01,692 - #27 char
INFO  03:45:01,692 - #27 pet1
INFO  03:45:01,692 - #12 =
INFO  03:45:01,692 - #28 c
INFO  03:45:01,692 - #5 ;
INFO  03:45:01,692 - #27 int
INFO  03:45:01,693 - #27 niz
INFO  03:45:01,693 - #20 [
INFO  03:45:01,693 - #21 ]
INFO  03:45:01,693 - #8 ,
INFO  03:45:01,693 - #27 niz2
INFO  03:45:01,693 - #20 [
INFO  03:45:01,693 - #21 ]
INFO  03:45:01,694 - #8 ,
INFO  03:45:01,694 - #27 a
INFO  03:45:01,694 - #8 ,
INFO  03:45:01,694 - #27 b
INFO  03:45:01,694 - #5 ;
INFO  03:45:01,695 - #27 char
INFO  03:45:01,695 - #27 nizch
INFO  03:45:01,695 - #20 [
INFO  03:45:01,695 - #21 ]
INFO  03:45:01,695 - #8 ,
INFO  03:45:01,695 - #27 c
INFO  03:45:01,695 - #5 ;
INFO  03:45:01,695 - #27 bool
INFO  03:45:01,696 - #27 s1
INFO  03:45:01,696 - #5 ;
INFO  03:45:01,696 - #3 {
INFO  03:45:01,696 - #13 void
INFO  03:45:01,697 - #27 main
INFO  03:45:01,697 - #6 (
INFO  03:45:01,697 - #7 )
INFO  03:45:01,697 - #27 int
INFO  03:45:01,697 - #27 bodovi
INFO  03:45:01,697 - #5 ;
INFO  03:45:01,698 - #27 bool
INFO  03:45:01,698 - #27 bt
INFO  03:45:01,698 - #5 ;
INFO  03:45:01,698 - #27 int
INFO  03:45:01,698 - #27 s
INFO  03:45:01,699 - #5 ;
INFO  03:45:01,699 - #3 {
INFO  03:45:01,699 - #27 niz
INFO  03:45:01,701 - #12 =
INFO  03:45:01,701 - #32 new
INFO  03:45:01,701 - #27 int
INFO  03:45:01,701 - #20 [
INFO  03:45:01,701 - #26 3
INFO  03:45:01,702 - #21 ]
INFO  03:45:01,702 - #5 ;
INFO  03:45:01,702 - #27 niz
INFO  03:45:01,703 - #20 [
INFO  03:45:01,703 - #27 nula
INFO  03:45:01,703 - #21 ]
INFO  03:45:01,703 - #12 =
INFO  03:45:01,703 - #27 jedan
INFO  03:45:01,703 - #5 ;
INFO  03:45:01,703 - #9 print
INFO  03:45:01,703 - #6 (
INFO  03:45:01,704 - #27 bodovi
INFO  03:45:01,704 - #7 )
INFO  03:45:01,704 - #5 ;
INFO  03:45:01,704 - #9 print
INFO  03:45:01,704 - #6 (
INFO  03:45:01,704 - #27 niz
INFO  03:45:01,704 - #20 [
INFO  03:45:01,704 - #26 2
INFO  03:45:01,704 - #21 ]
INFO  03:45:01,705 - #7 )
INFO  03:45:01,705 - #5 ;
INFO  03:45:01,705 - #4 }
INFO  03:45:01,705 - #4 }
INFO  03:45:01,718 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:45:01,718 - ===================================
INFO  03:45:01,743 - Deklarisana je konsanta int nula = 0
INFO  03:45:01,743 - Deklarisana je konsanta int jedan = 1
INFO  03:45:01,743 - Deklarisana je konsanta int pet = 5
INFO  03:45:01,743 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:45:01,745 - Deklarisan je niz niz
INFO  03:45:01,745 - Deklarisan je niz niz2
INFO  03:45:01,745 - Deklarisana promenljiva a
INFO  03:45:01,745 - Deklarisana promenljiva b
INFO  03:45:01,745 - Deklarisan je niz nizch
INFO  03:45:01,745 - Deklarisana promenljiva c
INFO  03:45:01,745 - Deklarisana promenljiva s1
INFO  03:45:01,746 - Obradjuje se funkcija main na liniji 12
INFO  03:45:01,746 - Deklarisana promenljiva bodovi
INFO  03:45:01,746 - Deklarisana promenljiva bt
INFO  03:45:01,746 - Deklarisana promenljiva s
INFO  03:45:05,032 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:47:06,326 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:47:06,383 - #2 program
INFO  03:47:06,383 - #27 MJProgram
INFO  03:47:06,383 - #23 const
INFO  03:47:06,385 - #27 int
INFO  03:47:06,385 - #27 nula
INFO  03:47:06,386 - #12 =
INFO  03:47:06,386 - #26 0
INFO  03:47:06,386 - #5 ;
INFO  03:47:06,386 - #23 const
INFO  03:47:06,386 - #27 int
INFO  03:47:06,386 - #27 jedan
INFO  03:47:06,386 - #12 =
INFO  03:47:06,387 - #26 1
INFO  03:47:06,387 - #5 ;
INFO  03:47:06,387 - #23 const
INFO  03:47:06,387 - #27 int
INFO  03:47:06,387 - #27 pet
INFO  03:47:06,387 - #12 =
INFO  03:47:06,387 - #26 5
INFO  03:47:06,387 - #5 ;
INFO  03:47:06,387 - #23 const
INFO  03:47:06,387 - #27 char
INFO  03:47:06,387 - #27 pet1
INFO  03:47:06,387 - #12 =
INFO  03:47:06,388 - #28 c
INFO  03:47:06,388 - #5 ;
INFO  03:47:06,388 - #27 int
INFO  03:47:06,388 - #27 niz
INFO  03:47:06,388 - #20 [
INFO  03:47:06,388 - #21 ]
INFO  03:47:06,388 - #8 ,
INFO  03:47:06,388 - #27 niz2
INFO  03:47:06,388 - #20 [
INFO  03:47:06,388 - #21 ]
INFO  03:47:06,388 - #8 ,
INFO  03:47:06,388 - #27 a
INFO  03:47:06,388 - #8 ,
INFO  03:47:06,389 - #27 b
INFO  03:47:06,389 - #5 ;
INFO  03:47:06,389 - #27 char
INFO  03:47:06,389 - #27 nizch
INFO  03:47:06,389 - #20 [
INFO  03:47:06,389 - #21 ]
INFO  03:47:06,389 - #8 ,
INFO  03:47:06,390 - #27 c
INFO  03:47:06,390 - #5 ;
INFO  03:47:06,390 - #27 bool
INFO  03:47:06,390 - #27 s1
INFO  03:47:06,390 - #5 ;
INFO  03:47:06,390 - #3 {
INFO  03:47:06,390 - #13 void
INFO  03:47:06,391 - #27 main
INFO  03:47:06,391 - #6 (
INFO  03:47:06,391 - #7 )
INFO  03:47:06,391 - #27 int
INFO  03:47:06,391 - #27 bodovi
INFO  03:47:06,391 - #5 ;
INFO  03:47:06,391 - #27 bool
INFO  03:47:06,391 - #27 bt
INFO  03:47:06,392 - #5 ;
INFO  03:47:06,392 - #27 int
INFO  03:47:06,392 - #27 s
INFO  03:47:06,392 - #5 ;
INFO  03:47:06,392 - #3 {
INFO  03:47:06,392 - #27 niz
INFO  03:47:06,393 - #12 =
INFO  03:47:06,393 - #32 new
INFO  03:47:06,393 - #27 int
INFO  03:47:06,393 - #20 [
INFO  03:47:06,393 - #26 3
INFO  03:47:06,394 - #21 ]
INFO  03:47:06,394 - #5 ;
INFO  03:47:06,394 - #27 niz
INFO  03:47:06,394 - #20 [
INFO  03:47:06,394 - #27 nula
INFO  03:47:06,394 - #21 ]
INFO  03:47:06,395 - #12 =
INFO  03:47:06,395 - #27 jedan
INFO  03:47:06,395 - #5 ;
INFO  03:47:06,395 - #9 print
INFO  03:47:06,395 - #6 (
INFO  03:47:06,395 - #27 bodovi
INFO  03:47:06,395 - #7 )
INFO  03:47:06,395 - #5 ;
INFO  03:47:06,395 - #9 print
INFO  03:47:06,395 - #6 (
INFO  03:47:06,396 - #27 niz
INFO  03:47:06,396 - #20 [
INFO  03:47:06,396 - #26 2
INFO  03:47:06,396 - #21 ]
INFO  03:47:06,396 - #7 )
INFO  03:47:06,396 - #5 ;
INFO  03:47:06,396 - #4 }
INFO  03:47:06,396 - #4 }
INFO  03:47:06,409 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:47:06,410 - ===================================
INFO  03:47:06,436 - Deklarisana je konsanta int nula = 0
INFO  03:47:06,436 - Deklarisana je konsanta int jedan = 1
INFO  03:47:06,436 - Deklarisana je konsanta int pet = 5
INFO  03:47:06,437 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:47:06,438 - Deklarisan je niz niz
INFO  03:47:06,438 - Deklarisan je niz niz2
INFO  03:47:06,438 - Deklarisana promenljiva a
INFO  03:47:06,438 - Deklarisana promenljiva b
INFO  03:47:06,438 - Deklarisan je niz nizch
INFO  03:47:06,438 - Deklarisana promenljiva c
INFO  03:47:06,438 - Deklarisana promenljiva s1
INFO  03:47:06,439 - Obradjuje se funkcija main na liniji 12
INFO  03:47:06,439 - Deklarisana promenljiva bodovi
INFO  03:47:06,439 - Deklarisana promenljiva bt
INFO  03:47:06,439 - Deklarisana promenljiva s
INFO  03:47:27,201 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:47:48,341 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:47:48,390 - #2 program
INFO  03:47:48,390 - #27 MJProgram
INFO  03:47:48,390 - #23 const
INFO  03:47:48,392 - #27 int
INFO  03:47:48,392 - #27 nula
INFO  03:47:48,393 - #12 =
INFO  03:47:48,393 - #26 0
INFO  03:47:48,393 - #5 ;
INFO  03:47:48,393 - #23 const
INFO  03:47:48,394 - #27 int
INFO  03:47:48,394 - #27 jedan
INFO  03:47:48,394 - #12 =
INFO  03:47:48,394 - #26 1
INFO  03:47:48,394 - #5 ;
INFO  03:47:48,394 - #23 const
INFO  03:47:48,394 - #27 int
INFO  03:47:48,394 - #27 pet
INFO  03:47:48,394 - #12 =
INFO  03:47:48,394 - #26 5
INFO  03:47:48,394 - #5 ;
INFO  03:47:48,394 - #23 const
INFO  03:47:48,394 - #27 char
INFO  03:47:48,395 - #27 pet1
INFO  03:47:48,395 - #12 =
INFO  03:47:48,395 - #28 c
INFO  03:47:48,395 - #5 ;
INFO  03:47:48,395 - #27 int
INFO  03:47:48,395 - #27 niz
INFO  03:47:48,395 - #20 [
INFO  03:47:48,395 - #21 ]
INFO  03:47:48,395 - #8 ,
INFO  03:47:48,395 - #27 niz2
INFO  03:47:48,395 - #20 [
INFO  03:47:48,395 - #21 ]
INFO  03:47:48,395 - #8 ,
INFO  03:47:48,396 - #27 a
INFO  03:47:48,396 - #8 ,
INFO  03:47:48,396 - #27 b
INFO  03:47:48,396 - #5 ;
INFO  03:47:48,396 - #27 char
INFO  03:47:48,396 - #27 nizch
INFO  03:47:48,396 - #20 [
INFO  03:47:48,396 - #21 ]
INFO  03:47:48,396 - #8 ,
INFO  03:47:48,397 - #27 c
INFO  03:47:48,397 - #5 ;
INFO  03:47:48,397 - #27 bool
INFO  03:47:48,397 - #27 s1
INFO  03:47:48,397 - #5 ;
INFO  03:47:48,397 - #3 {
INFO  03:47:48,397 - #13 void
INFO  03:47:48,399 - #27 main
INFO  03:47:48,399 - #6 (
INFO  03:47:48,399 - #7 )
INFO  03:47:48,399 - #27 int
INFO  03:47:48,399 - #27 bodovi
INFO  03:47:48,399 - #5 ;
INFO  03:47:48,400 - #27 bool
INFO  03:47:48,400 - #27 bt
INFO  03:47:48,400 - #5 ;
INFO  03:47:48,400 - #27 int
INFO  03:47:48,400 - #27 s
INFO  03:47:48,400 - #5 ;
INFO  03:47:48,400 - #3 {
INFO  03:47:48,400 - #27 niz
INFO  03:47:48,402 - #12 =
INFO  03:47:48,402 - #32 new
INFO  03:47:48,402 - #27 int
INFO  03:47:48,402 - #20 [
INFO  03:47:48,402 - #26 3
INFO  03:47:48,402 - #21 ]
INFO  03:47:48,403 - #5 ;
INFO  03:47:48,403 - #27 niz
INFO  03:47:48,403 - #20 [
INFO  03:47:48,403 - #27 nula
INFO  03:47:48,403 - #21 ]
INFO  03:47:48,404 - #12 =
INFO  03:47:48,404 - #27 jedan
INFO  03:47:48,404 - #5 ;
INFO  03:47:48,404 - #9 print
INFO  03:47:48,404 - #6 (
INFO  03:47:48,404 - #27 bodovi
INFO  03:47:48,404 - #7 )
INFO  03:47:48,404 - #5 ;
INFO  03:47:48,405 - #9 print
INFO  03:47:48,405 - #6 (
INFO  03:47:48,405 - #27 niz
INFO  03:47:48,405 - #20 [
INFO  03:47:48,405 - #26 2
INFO  03:47:48,405 - #21 ]
INFO  03:47:48,405 - #7 )
INFO  03:47:48,405 - #5 ;
INFO  03:47:48,406 - #4 }
INFO  03:47:48,406 - #4 }
INFO  03:47:48,417 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:47:48,418 - ===================================
INFO  03:47:48,446 - Deklarisana je konsanta int nula = 0
INFO  03:47:48,447 - Deklarisana je konsanta int jedan = 1
INFO  03:47:48,447 - Deklarisana je konsanta int pet = 5
INFO  03:47:48,447 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:47:48,449 - Deklarisan je niz niz
INFO  03:47:48,449 - Deklarisan je niz niz2
INFO  03:47:48,449 - Deklarisana promenljiva a
INFO  03:47:48,450 - Deklarisana promenljiva b
INFO  03:47:48,450 - Deklarisan je niz nizch
INFO  03:47:48,450 - Deklarisana promenljiva c
INFO  03:47:48,450 - Deklarisana promenljiva s1
INFO  03:47:48,450 - Obradjuje se funkcija main na liniji 12
INFO  03:47:48,450 - Deklarisana promenljiva bodovi
INFO  03:47:48,450 - Deklarisana promenljiva bt
INFO  03:47:48,450 - Deklarisana promenljiva s
INFO  03:47:53,193 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:49:20,359 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:49:20,411 - #2 program
INFO  03:49:20,411 - #27 MJProgram
INFO  03:49:20,411 - #23 const
INFO  03:49:20,413 - #27 int
INFO  03:49:20,413 - #27 nula
INFO  03:49:20,414 - #12 =
INFO  03:49:20,414 - #26 0
INFO  03:49:20,414 - #5 ;
INFO  03:49:20,415 - #23 const
INFO  03:49:20,415 - #27 int
INFO  03:49:20,415 - #27 jedan
INFO  03:49:20,415 - #12 =
INFO  03:49:20,415 - #26 1
INFO  03:49:20,415 - #5 ;
INFO  03:49:20,416 - #23 const
INFO  03:49:20,416 - #27 int
INFO  03:49:20,416 - #27 pet
INFO  03:49:20,416 - #12 =
INFO  03:49:20,416 - #26 5
INFO  03:49:20,416 - #5 ;
INFO  03:49:20,416 - #23 const
INFO  03:49:20,416 - #27 char
INFO  03:49:20,416 - #27 pet1
INFO  03:49:20,416 - #12 =
INFO  03:49:20,417 - #28 c
INFO  03:49:20,417 - #5 ;
INFO  03:49:20,417 - #27 int
INFO  03:49:20,417 - #27 niz
INFO  03:49:20,417 - #20 [
INFO  03:49:20,417 - #21 ]
INFO  03:49:20,417 - #8 ,
INFO  03:49:20,417 - #27 niz2
INFO  03:49:20,417 - #20 [
INFO  03:49:20,417 - #21 ]
INFO  03:49:20,418 - #8 ,
INFO  03:49:20,418 - #27 a
INFO  03:49:20,418 - #8 ,
INFO  03:49:20,418 - #27 b
INFO  03:49:20,418 - #5 ;
INFO  03:49:20,418 - #27 char
INFO  03:49:20,418 - #27 nizch
INFO  03:49:20,419 - #20 [
INFO  03:49:20,419 - #21 ]
INFO  03:49:20,419 - #8 ,
INFO  03:49:20,419 - #27 c
INFO  03:49:20,419 - #5 ;
INFO  03:49:20,419 - #27 bool
INFO  03:49:20,419 - #27 s1
INFO  03:49:20,419 - #5 ;
INFO  03:49:20,419 - #3 {
INFO  03:49:20,419 - #13 void
INFO  03:49:20,420 - #27 main
INFO  03:49:20,420 - #6 (
INFO  03:49:20,421 - #7 )
INFO  03:49:20,421 - #27 int
INFO  03:49:20,421 - #27 bodovi
INFO  03:49:20,421 - #5 ;
INFO  03:49:20,421 - #27 bool
INFO  03:49:20,421 - #27 bt
INFO  03:49:20,421 - #5 ;
INFO  03:49:20,421 - #27 int
INFO  03:49:20,421 - #27 s
INFO  03:49:20,421 - #5 ;
INFO  03:49:20,421 - #3 {
INFO  03:49:20,422 - #27 niz
INFO  03:49:20,423 - #12 =
INFO  03:49:20,423 - #32 new
INFO  03:49:20,424 - #27 int
INFO  03:49:20,424 - #20 [
INFO  03:49:20,424 - #26 3
INFO  03:49:20,424 - #21 ]
INFO  03:49:20,425 - #5 ;
INFO  03:49:20,425 - #27 niz
INFO  03:49:20,425 - #20 [
INFO  03:49:20,426 - #27 nula
INFO  03:49:20,426 - #21 ]
INFO  03:49:20,426 - #12 =
INFO  03:49:20,426 - #27 jedan
INFO  03:49:20,426 - #5 ;
INFO  03:49:20,426 - #9 print
INFO  03:49:20,426 - #6 (
INFO  03:49:20,426 - #27 bodovi
INFO  03:49:20,427 - #7 )
INFO  03:49:20,427 - #5 ;
INFO  03:49:20,427 - #9 print
INFO  03:49:20,427 - #6 (
INFO  03:49:20,427 - #27 niz
INFO  03:49:20,427 - #20 [
INFO  03:49:20,427 - #26 2
INFO  03:49:20,427 - #21 ]
INFO  03:49:20,427 - #7 )
INFO  03:49:20,427 - #5 ;
INFO  03:49:20,428 - #4 }
INFO  03:49:20,428 - #4 }
INFO  03:49:20,441 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:49:20,442 - ===================================
INFO  03:49:20,463 - Deklarisana je konsanta int nula = 0
INFO  03:49:20,463 - Deklarisana je konsanta int jedan = 1
INFO  03:49:20,464 - Deklarisana je konsanta int pet = 5
INFO  03:49:20,464 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:49:20,465 - Deklarisan je niz niz
INFO  03:49:20,466 - Deklarisan je niz niz2
INFO  03:49:20,466 - Deklarisana promenljiva a
INFO  03:49:20,466 - Deklarisana promenljiva b
INFO  03:49:20,466 - Deklarisan je niz nizch
INFO  03:49:20,466 - Deklarisana promenljiva c
INFO  03:49:20,466 - Deklarisana promenljiva s1
INFO  03:49:20,466 - Obradjuje se funkcija main na liniji 12
INFO  03:49:20,466 - Deklarisana promenljiva bodovi
INFO  03:49:20,466 - Deklarisana promenljiva bt
INFO  03:49:20,466 - Deklarisana promenljiva s
INFO  03:49:20,466 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:49:22,665 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:49:40,528 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:49:40,580 - #2 program
INFO  03:49:40,580 - #27 MJProgram
INFO  03:49:40,580 - #23 const
INFO  03:49:40,582 - #27 int
INFO  03:49:40,582 - #27 nula
INFO  03:49:40,583 - #12 =
INFO  03:49:40,583 - #26 0
INFO  03:49:40,584 - #5 ;
INFO  03:49:40,584 - #23 const
INFO  03:49:40,584 - #27 int
INFO  03:49:40,584 - #27 jedan
INFO  03:49:40,584 - #12 =
INFO  03:49:40,584 - #26 1
INFO  03:49:40,584 - #5 ;
INFO  03:49:40,584 - #23 const
INFO  03:49:40,584 - #27 int
INFO  03:49:40,585 - #27 pet
INFO  03:49:40,585 - #12 =
INFO  03:49:40,585 - #26 5
INFO  03:49:40,585 - #5 ;
INFO  03:49:40,585 - #23 const
INFO  03:49:40,585 - #27 char
INFO  03:49:40,585 - #27 pet1
INFO  03:49:40,585 - #12 =
INFO  03:49:40,585 - #28 c
INFO  03:49:40,585 - #5 ;
INFO  03:49:40,585 - #27 int
INFO  03:49:40,585 - #27 niz
INFO  03:49:40,585 - #20 [
INFO  03:49:40,586 - #21 ]
INFO  03:49:40,586 - #8 ,
INFO  03:49:40,586 - #27 niz2
INFO  03:49:40,586 - #20 [
INFO  03:49:40,586 - #21 ]
INFO  03:49:40,586 - #8 ,
INFO  03:49:40,586 - #27 a
INFO  03:49:40,586 - #8 ,
INFO  03:49:40,586 - #27 b
INFO  03:49:40,586 - #5 ;
INFO  03:49:40,587 - #27 char
INFO  03:49:40,587 - #27 nizch
INFO  03:49:40,587 - #20 [
INFO  03:49:40,587 - #21 ]
INFO  03:49:40,587 - #8 ,
INFO  03:49:40,587 - #27 c
INFO  03:49:40,587 - #5 ;
INFO  03:49:40,587 - #27 bool
INFO  03:49:40,587 - #27 s1
INFO  03:49:40,587 - #5 ;
INFO  03:49:40,587 - #3 {
INFO  03:49:40,588 - #13 void
INFO  03:49:40,588 - #27 main
INFO  03:49:40,588 - #6 (
INFO  03:49:40,589 - #7 )
INFO  03:49:40,589 - #27 int
INFO  03:49:40,589 - #27 bodovi
INFO  03:49:40,589 - #5 ;
INFO  03:49:40,589 - #27 bool
INFO  03:49:40,589 - #27 bt
INFO  03:49:40,589 - #5 ;
INFO  03:49:40,589 - #27 int
INFO  03:49:40,589 - #27 s
INFO  03:49:40,589 - #5 ;
INFO  03:49:40,589 - #3 {
INFO  03:49:40,590 - #27 niz
INFO  03:49:40,590 - #12 =
INFO  03:49:40,591 - #32 new
INFO  03:49:40,591 - #27 int
INFO  03:49:40,591 - #20 [
INFO  03:49:40,591 - #26 3
INFO  03:49:40,591 - #21 ]
INFO  03:49:40,591 - #5 ;
INFO  03:49:40,591 - #27 niz
INFO  03:49:40,592 - #20 [
INFO  03:49:40,592 - #27 nula
INFO  03:49:40,592 - #21 ]
INFO  03:49:40,592 - #12 =
INFO  03:49:40,592 - #27 jedan
INFO  03:49:40,592 - #5 ;
INFO  03:49:40,592 - #9 print
INFO  03:49:40,592 - #6 (
INFO  03:49:40,592 - #27 bodovi
INFO  03:49:40,592 - #7 )
INFO  03:49:40,593 - #5 ;
INFO  03:49:40,593 - #9 print
INFO  03:49:40,593 - #6 (
INFO  03:49:40,593 - #27 niz
INFO  03:49:40,593 - #20 [
INFO  03:49:40,593 - #26 2
INFO  03:49:40,593 - #21 ]
INFO  03:49:40,593 - #7 )
INFO  03:49:40,593 - #5 ;
INFO  03:49:40,593 - #4 }
INFO  03:49:40,594 - #4 }
INFO  03:49:40,604 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:49:40,605 - ===================================
INFO  03:49:40,627 - Deklarisana je konsanta int nula = 0
INFO  03:49:40,627 - Deklarisana je konsanta int jedan = 1
INFO  03:49:40,627 - Deklarisana je konsanta int pet = 5
INFO  03:49:40,628 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:49:40,629 - Deklarisan je niz niz
INFO  03:49:40,630 - Deklarisan je niz niz2
INFO  03:49:40,630 - Deklarisana promenljiva a
INFO  03:49:40,630 - Deklarisana promenljiva b
INFO  03:49:40,630 - Deklarisan je niz nizch
INFO  03:49:40,630 - Deklarisana promenljiva c
INFO  03:49:40,630 - Deklarisana promenljiva s1
INFO  03:49:40,631 - Obradjuje se funkcija main na liniji 12
INFO  03:49:40,631 - Deklarisana promenljiva bodovi
INFO  03:49:40,631 - Deklarisana promenljiva bt
INFO  03:49:40,631 - Deklarisana promenljiva s
INFO  03:49:40,632 - Deklarisana je niz (uz pomoc NEW) na liniji 33
ERROR 03:51:15,442 - Greska na liniji 33 :  nekompatibilni tipovi.
INFO  03:51:58,401 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:51:58,453 - #2 program
INFO  03:51:58,454 - #27 MJProgram
INFO  03:51:58,454 - #23 const
INFO  03:51:58,455 - #27 int
INFO  03:51:58,455 - #27 nula
INFO  03:51:58,456 - #12 =
INFO  03:51:58,457 - #26 0
INFO  03:51:58,457 - #5 ;
INFO  03:51:58,457 - #23 const
INFO  03:51:58,457 - #27 int
INFO  03:51:58,457 - #27 jedan
INFO  03:51:58,457 - #12 =
INFO  03:51:58,457 - #26 1
INFO  03:51:58,457 - #5 ;
INFO  03:51:58,457 - #23 const
INFO  03:51:58,458 - #27 int
INFO  03:51:58,458 - #27 pet
INFO  03:51:58,458 - #12 =
INFO  03:51:58,458 - #26 5
INFO  03:51:58,458 - #5 ;
INFO  03:51:58,458 - #23 const
INFO  03:51:58,458 - #27 char
INFO  03:51:58,458 - #27 pet1
INFO  03:51:58,458 - #12 =
INFO  03:51:58,458 - #28 c
INFO  03:51:58,458 - #5 ;
INFO  03:51:58,458 - #27 int
INFO  03:51:58,458 - #27 niz
INFO  03:51:58,458 - #20 [
INFO  03:51:58,459 - #21 ]
INFO  03:51:58,459 - #8 ,
INFO  03:51:58,459 - #27 niz2
INFO  03:51:58,459 - #20 [
INFO  03:51:58,459 - #21 ]
INFO  03:51:58,459 - #8 ,
INFO  03:51:58,459 - #27 a
INFO  03:51:58,459 - #8 ,
INFO  03:51:58,459 - #27 b
INFO  03:51:58,459 - #5 ;
INFO  03:51:58,460 - #27 char
INFO  03:51:58,460 - #27 nizch
INFO  03:51:58,460 - #20 [
INFO  03:51:58,460 - #21 ]
INFO  03:51:58,460 - #8 ,
INFO  03:51:58,460 - #27 c
INFO  03:51:58,460 - #5 ;
INFO  03:51:58,460 - #27 bool
INFO  03:51:58,460 - #27 s1
INFO  03:51:58,460 - #5 ;
INFO  03:51:58,460 - #3 {
INFO  03:51:58,461 - #13 void
INFO  03:51:58,461 - #27 main
INFO  03:51:58,462 - #6 (
INFO  03:51:58,462 - #7 )
INFO  03:51:58,462 - #27 int
INFO  03:51:58,462 - #27 bodovi
INFO  03:51:58,462 - #5 ;
INFO  03:51:58,462 - #27 bool
INFO  03:51:58,462 - #27 bt
INFO  03:51:58,462 - #5 ;
INFO  03:51:58,462 - #27 int
INFO  03:51:58,462 - #27 s
INFO  03:51:58,462 - #5 ;
INFO  03:51:58,462 - #3 {
INFO  03:51:58,463 - #27 niz
INFO  03:51:58,463 - #12 =
INFO  03:51:58,464 - #32 new
INFO  03:51:58,464 - #27 int
INFO  03:51:58,464 - #20 [
INFO  03:51:58,464 - #26 3
INFO  03:51:58,464 - #21 ]
INFO  03:51:58,464 - #5 ;
INFO  03:51:58,464 - #27 niz
INFO  03:51:58,465 - #20 [
INFO  03:51:58,465 - #27 nula
INFO  03:51:58,465 - #21 ]
INFO  03:51:58,465 - #12 =
INFO  03:51:58,465 - #27 jedan
INFO  03:51:58,465 - #5 ;
INFO  03:51:58,465 - #9 print
INFO  03:51:58,465 - #6 (
INFO  03:51:58,465 - #27 bodovi
INFO  03:51:58,465 - #7 )
INFO  03:51:58,465 - #5 ;
INFO  03:51:58,466 - #9 print
INFO  03:51:58,466 - #6 (
INFO  03:51:58,466 - #27 niz
INFO  03:51:58,466 - #20 [
INFO  03:51:58,466 - #26 2
INFO  03:51:58,466 - #21 ]
INFO  03:51:58,466 - #7 )
INFO  03:51:58,466 - #5 ;
INFO  03:51:58,466 - #4 }
INFO  03:51:58,466 - #4 }
INFO  03:51:58,475 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:51:58,475 - ===================================
INFO  03:51:58,498 - Deklarisana je konsanta int nula = 0
INFO  03:51:58,498 - Deklarisana je konsanta int jedan = 1
INFO  03:51:58,498 - Deklarisana je konsanta int pet = 5
INFO  03:51:58,498 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:51:58,499 - Deklarisan je niz niz
INFO  03:51:58,499 - Deklarisan je niz niz2
INFO  03:51:58,500 - Deklarisana promenljiva a
INFO  03:51:58,500 - Deklarisana promenljiva b
INFO  03:51:58,500 - Deklarisan je niz nizch
INFO  03:51:58,500 - Deklarisana promenljiva c
INFO  03:51:58,500 - Deklarisana promenljiva s1
INFO  03:51:58,500 - Obradjuje se funkcija main na liniji 12
INFO  03:51:58,500 - Deklarisana promenljiva bodovi
INFO  03:51:58,500 - Deklarisana promenljiva bt
INFO  03:51:58,500 - Deklarisana promenljiva s
INFO  03:52:01,289 - Deklarisana je niz (uz pomoc NEW) na liniji 33
ERROR 03:52:09,146 - Greska na liniji 33 :  nekompatibilni tipovi.
ERROR 03:52:14,881 - Greska na liniji 34 :  nekompatibilni tipovi.
INFO  03:52:29,051 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:52:29,098 - #2 program
INFO  03:52:29,098 - #27 MJProgram
INFO  03:52:29,098 - #23 const
INFO  03:52:29,100 - #27 int
INFO  03:52:29,100 - #27 nula
INFO  03:52:29,101 - #12 =
INFO  03:52:29,101 - #26 0
INFO  03:52:29,101 - #5 ;
INFO  03:52:29,101 - #23 const
INFO  03:52:29,102 - #27 int
INFO  03:52:29,102 - #27 jedan
INFO  03:52:29,102 - #12 =
INFO  03:52:29,102 - #26 1
INFO  03:52:29,102 - #5 ;
INFO  03:52:29,102 - #23 const
INFO  03:52:29,102 - #27 int
INFO  03:52:29,102 - #27 pet
INFO  03:52:29,102 - #12 =
INFO  03:52:29,102 - #26 5
INFO  03:52:29,102 - #5 ;
INFO  03:52:29,102 - #23 const
INFO  03:52:29,103 - #27 char
INFO  03:52:29,103 - #27 pet1
INFO  03:52:29,103 - #12 =
INFO  03:52:29,103 - #28 c
INFO  03:52:29,103 - #5 ;
INFO  03:52:29,103 - #27 int
INFO  03:52:29,103 - #27 niz
INFO  03:52:29,103 - #20 [
INFO  03:52:29,103 - #21 ]
INFO  03:52:29,103 - #8 ,
INFO  03:52:29,104 - #27 niz2
INFO  03:52:29,104 - #20 [
INFO  03:52:29,104 - #21 ]
INFO  03:52:29,104 - #8 ,
INFO  03:52:29,104 - #27 a
INFO  03:52:29,104 - #8 ,
INFO  03:52:29,104 - #27 b
INFO  03:52:29,104 - #5 ;
INFO  03:52:29,104 - #27 char
INFO  03:52:29,105 - #27 nizch
INFO  03:52:29,105 - #20 [
INFO  03:52:29,105 - #21 ]
INFO  03:52:29,105 - #8 ,
INFO  03:52:29,105 - #27 c
INFO  03:52:29,105 - #5 ;
INFO  03:52:29,105 - #27 bool
INFO  03:52:29,105 - #27 s1
INFO  03:52:29,105 - #5 ;
INFO  03:52:29,105 - #3 {
INFO  03:52:29,105 - #13 void
INFO  03:52:29,106 - #27 main
INFO  03:52:29,106 - #6 (
INFO  03:52:29,107 - #7 )
INFO  03:52:29,107 - #27 int
INFO  03:52:29,107 - #27 bodovi
INFO  03:52:29,107 - #5 ;
INFO  03:52:29,107 - #27 bool
INFO  03:52:29,107 - #27 bt
INFO  03:52:29,107 - #5 ;
INFO  03:52:29,107 - #27 int
INFO  03:52:29,107 - #27 s
INFO  03:52:29,107 - #5 ;
INFO  03:52:29,108 - #3 {
INFO  03:52:29,108 - #27 niz
INFO  03:52:29,109 - #12 =
INFO  03:52:29,109 - #32 new
INFO  03:52:29,109 - #27 int
INFO  03:52:29,109 - #20 [
INFO  03:52:29,110 - #26 3
INFO  03:52:29,110 - #21 ]
INFO  03:52:29,110 - #5 ;
INFO  03:52:29,110 - #27 niz
INFO  03:52:29,110 - #20 [
INFO  03:52:29,111 - #27 nula
INFO  03:52:29,111 - #21 ]
INFO  03:52:29,111 - #12 =
INFO  03:52:29,111 - #27 jedan
INFO  03:52:29,111 - #5 ;
INFO  03:52:29,111 - #9 print
INFO  03:52:29,111 - #6 (
INFO  03:52:29,111 - #27 bodovi
INFO  03:52:29,111 - #7 )
INFO  03:52:29,111 - #5 ;
INFO  03:52:29,111 - #9 print
INFO  03:52:29,112 - #6 (
INFO  03:52:29,112 - #27 niz
INFO  03:52:29,112 - #20 [
INFO  03:52:29,112 - #26 2
INFO  03:52:29,112 - #21 ]
INFO  03:52:29,112 - #7 )
INFO  03:52:29,112 - #5 ;
INFO  03:52:29,112 - #4 }
INFO  03:52:29,112 - #4 }
INFO  03:52:29,126 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:52:29,126 - ===================================
INFO  03:52:29,152 - Deklarisana je konsanta int nula = 0
INFO  03:52:29,153 - Deklarisana je konsanta int jedan = 1
INFO  03:52:29,153 - Deklarisana je konsanta int pet = 5
INFO  03:52:29,153 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:52:29,156 - Deklarisan je niz niz
INFO  03:52:29,157 - Deklarisan je niz niz2
INFO  03:52:29,157 - Deklarisana promenljiva a
INFO  03:52:29,157 - Deklarisana promenljiva b
INFO  03:52:29,157 - Deklarisan je niz nizch
INFO  03:52:29,157 - Deklarisana promenljiva c
INFO  03:52:29,157 - Deklarisana promenljiva s1
INFO  03:52:29,158 - Obradjuje se funkcija main na liniji 12
INFO  03:52:29,158 - Deklarisana promenljiva bodovi
INFO  03:52:29,158 - Deklarisana promenljiva bt
INFO  03:52:29,158 - Deklarisana promenljiva s
INFO  03:52:31,809 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  03:56:05,007 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:56:05,094 - #2 program
INFO  03:56:05,094 - #27 MJProgram
INFO  03:56:05,094 - #23 const
INFO  03:56:05,097 - #27 int
INFO  03:56:05,097 - #27 nula
INFO  03:56:05,099 - #12 =
INFO  03:56:05,099 - #26 0
INFO  03:56:05,099 - #5 ;
INFO  03:56:05,099 - #23 const
INFO  03:56:05,100 - #27 int
INFO  03:56:05,100 - #27 jedan
INFO  03:56:05,100 - #12 =
INFO  03:56:05,100 - #26 1
INFO  03:56:05,100 - #5 ;
INFO  03:56:05,100 - #23 const
INFO  03:56:05,101 - #27 int
INFO  03:56:05,101 - #27 pet
INFO  03:56:05,101 - #12 =
INFO  03:56:05,101 - #26 5
INFO  03:56:05,101 - #5 ;
INFO  03:56:05,101 - #23 const
INFO  03:56:05,102 - #27 char
INFO  03:56:05,102 - #27 pet1
INFO  03:56:05,102 - #12 =
INFO  03:56:05,102 - #28 c
INFO  03:56:05,102 - #5 ;
INFO  03:56:05,102 - #27 int
INFO  03:56:05,102 - #27 niz
INFO  03:56:05,102 - #20 [
INFO  03:56:05,103 - #21 ]
INFO  03:56:05,103 - #8 ,
INFO  03:56:05,103 - #27 niz2
INFO  03:56:05,103 - #20 [
INFO  03:56:05,103 - #21 ]
INFO  03:56:05,103 - #8 ,
INFO  03:56:05,103 - #27 a
INFO  03:56:05,103 - #8 ,
INFO  03:56:05,104 - #27 b
INFO  03:56:05,104 - #5 ;
INFO  03:56:05,104 - #27 char
INFO  03:56:05,104 - #27 nizch
INFO  03:56:05,105 - #20 [
INFO  03:56:05,105 - #21 ]
INFO  03:56:05,105 - #8 ,
INFO  03:56:05,105 - #27 c
INFO  03:56:05,105 - #5 ;
INFO  03:56:05,105 - #27 bool
INFO  03:56:05,105 - #27 s1
INFO  03:56:05,105 - #5 ;
INFO  03:56:05,105 - #3 {
INFO  03:56:05,105 - #13 void
INFO  03:56:05,107 - #27 main
INFO  03:56:05,107 - #6 (
INFO  03:56:05,108 - #7 )
INFO  03:56:05,108 - #27 int
INFO  03:56:05,108 - #27 bodovi
INFO  03:56:05,108 - #5 ;
INFO  03:56:05,108 - #27 bool
INFO  03:56:05,108 - #27 bt
INFO  03:56:05,108 - #5 ;
INFO  03:56:05,109 - #27 int
INFO  03:56:05,109 - #27 s
INFO  03:56:05,109 - #5 ;
INFO  03:56:05,109 - #3 {
INFO  03:56:05,109 - #27 niz
INFO  03:56:05,111 - #12 =
INFO  03:56:05,111 - #32 new
INFO  03:56:05,112 - #27 int
INFO  03:56:05,112 - #20 [
INFO  03:56:05,112 - #26 3
INFO  03:56:05,112 - #21 ]
INFO  03:56:05,112 - #5 ;
INFO  03:56:05,113 - #27 niz
INFO  03:56:05,113 - #20 [
INFO  03:56:05,113 - #27 nula
INFO  03:56:05,114 - #21 ]
INFO  03:56:05,114 - #12 =
INFO  03:56:05,114 - #27 jedan
INFO  03:56:05,114 - #5 ;
INFO  03:56:05,114 - #9 print
INFO  03:56:05,114 - #6 (
INFO  03:56:05,115 - #27 bodovi
INFO  03:56:05,115 - #7 )
INFO  03:56:05,115 - #5 ;
INFO  03:56:05,115 - #9 print
INFO  03:56:05,115 - #6 (
INFO  03:56:05,115 - #27 niz
INFO  03:56:05,115 - #20 [
INFO  03:56:05,116 - #26 2
INFO  03:56:05,116 - #21 ]
INFO  03:56:05,116 - #7 )
INFO  03:56:05,116 - #5 ;
INFO  03:56:05,116 - #4 }
INFO  03:56:05,116 - #4 }
INFO  03:56:05,136 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:56:05,137 - ===================================
INFO  03:56:05,171 - Deklarisana je konsanta int nula = 0
INFO  03:56:05,172 - Deklarisana je konsanta int jedan = 1
INFO  03:56:05,172 - Deklarisana je konsanta int pet = 5
INFO  03:56:05,172 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:56:05,174 - Deklarisan je niz niz
INFO  03:56:05,174 - Deklarisan je niz niz2
INFO  03:56:05,174 - Deklarisana promenljiva a
INFO  03:56:05,174 - Deklarisana promenljiva b
INFO  03:56:05,174 - Deklarisan je niz nizch
INFO  03:56:05,174 - Deklarisana promenljiva c
INFO  03:56:05,174 - Deklarisana promenljiva s1
INFO  03:56:05,175 - Obradjuje se funkcija main na liniji 12
INFO  03:56:05,175 - Deklarisana promenljiva bodovi
INFO  03:56:05,175 - Deklarisana promenljiva bt
INFO  03:56:05,175 - Deklarisana promenljiva s
INFO  03:56:09,995 - Deklarisana je niz (uz pomoc NEW) na liniji 33
ERROR 03:56:17,793 - Greska na liniji 33 :  nekompatibilni tipovi.
INFO  03:56:32,430 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:56:32,511 - #2 program
INFO  03:56:32,511 - #27 MJProgram
INFO  03:56:32,511 - #23 const
INFO  03:56:32,514 - #27 int
INFO  03:56:32,514 - #27 nula
INFO  03:56:32,516 - #12 =
INFO  03:56:32,516 - #26 0
INFO  03:56:32,516 - #5 ;
INFO  03:56:32,517 - #23 const
INFO  03:56:32,517 - #27 int
INFO  03:56:32,517 - #27 jedan
INFO  03:56:32,517 - #12 =
INFO  03:56:32,517 - #26 1
INFO  03:56:32,517 - #5 ;
INFO  03:56:32,518 - #23 const
INFO  03:56:32,518 - #27 int
INFO  03:56:32,518 - #27 pet
INFO  03:56:32,518 - #12 =
INFO  03:56:32,518 - #26 5
INFO  03:56:32,518 - #5 ;
INFO  03:56:32,518 - #23 const
INFO  03:56:32,518 - #27 char
INFO  03:56:32,518 - #27 pet1
INFO  03:56:32,518 - #12 =
INFO  03:56:32,519 - #28 c
INFO  03:56:32,519 - #5 ;
INFO  03:56:32,519 - #27 int
INFO  03:56:32,519 - #27 niz
INFO  03:56:32,519 - #20 [
INFO  03:56:32,519 - #21 ]
INFO  03:56:32,519 - #8 ,
INFO  03:56:32,520 - #27 niz2
INFO  03:56:32,520 - #20 [
INFO  03:56:32,520 - #21 ]
INFO  03:56:32,520 - #8 ,
INFO  03:56:32,520 - #27 a
INFO  03:56:32,520 - #8 ,
INFO  03:56:32,520 - #27 b
INFO  03:56:32,520 - #5 ;
INFO  03:56:32,521 - #27 char
INFO  03:56:32,521 - #27 nizch
INFO  03:56:32,521 - #20 [
INFO  03:56:32,521 - #21 ]
INFO  03:56:32,521 - #8 ,
INFO  03:56:32,521 - #27 c
INFO  03:56:32,522 - #5 ;
INFO  03:56:32,522 - #27 bool
INFO  03:56:32,522 - #27 s1
INFO  03:56:32,522 - #5 ;
INFO  03:56:32,522 - #3 {
INFO  03:56:32,522 - #13 void
INFO  03:56:32,524 - #27 main
INFO  03:56:32,524 - #6 (
INFO  03:56:32,524 - #7 )
INFO  03:56:32,524 - #27 int
INFO  03:56:32,524 - #27 bodovi
INFO  03:56:32,524 - #5 ;
INFO  03:56:32,524 - #27 bool
INFO  03:56:32,525 - #27 bt
INFO  03:56:32,525 - #5 ;
INFO  03:56:32,525 - #27 int
INFO  03:56:32,525 - #27 s
INFO  03:56:32,525 - #5 ;
INFO  03:56:32,525 - #3 {
INFO  03:56:32,525 - #27 niz
INFO  03:56:32,527 - #12 =
INFO  03:56:32,528 - #32 new
INFO  03:56:32,528 - #27 int
INFO  03:56:32,528 - #20 [
INFO  03:56:32,528 - #26 3
INFO  03:56:32,528 - #21 ]
INFO  03:56:32,529 - #5 ;
INFO  03:56:32,529 - #27 niz
INFO  03:56:32,530 - #20 [
INFO  03:56:32,530 - #27 nula
INFO  03:56:32,530 - #21 ]
INFO  03:56:32,530 - #12 =
INFO  03:56:32,531 - #27 jedan
INFO  03:56:32,531 - #5 ;
INFO  03:56:32,531 - #9 print
INFO  03:56:32,531 - #6 (
INFO  03:56:32,531 - #27 bodovi
INFO  03:56:32,531 - #7 )
INFO  03:56:32,531 - #5 ;
INFO  03:56:32,531 - #9 print
INFO  03:56:32,532 - #6 (
INFO  03:56:32,532 - #27 niz
INFO  03:56:32,532 - #20 [
INFO  03:56:32,532 - #26 2
INFO  03:56:32,532 - #21 ]
INFO  03:56:32,532 - #7 )
INFO  03:56:32,533 - #5 ;
INFO  03:56:32,533 - #4 }
INFO  03:56:32,533 - #4 }
INFO  03:56:32,552 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  03:56:32,553 - ===================================
INFO  03:56:32,587 - Deklarisana je konsanta int nula = 0
INFO  03:56:32,587 - Deklarisana je konsanta int jedan = 1
INFO  03:56:32,587 - Deklarisana je konsanta int pet = 5
INFO  03:56:32,588 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  03:56:32,590 - Deklarisan je niz niz
INFO  03:56:32,590 - Deklarisan je niz niz2
INFO  03:56:32,590 - Deklarisana promenljiva a
INFO  03:56:32,590 - Deklarisana promenljiva b
INFO  03:56:32,590 - Deklarisan je niz nizch
INFO  03:56:32,590 - Deklarisana promenljiva c
INFO  03:56:32,591 - Deklarisana promenljiva s1
INFO  03:56:32,591 - Obradjuje se funkcija main na liniji 12
INFO  03:56:32,591 - Deklarisana promenljiva bodovi
INFO  03:56:32,591 - Deklarisana promenljiva bt
INFO  03:56:32,591 - Deklarisana promenljiva s
INFO  03:56:34,135 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  04:10:17,679 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  04:10:17,760 - #2 program
INFO  04:10:17,760 - #27 MJProgram
INFO  04:10:17,761 - #23 const
INFO  04:10:17,763 - #27 int
INFO  04:10:17,763 - #27 nula
INFO  04:10:17,764 - #12 =
INFO  04:10:17,764 - #26 0
INFO  04:10:17,765 - #5 ;
INFO  04:10:17,765 - #23 const
INFO  04:10:17,765 - #27 int
INFO  04:10:17,765 - #27 jedan
INFO  04:10:17,766 - #12 =
INFO  04:10:17,766 - #26 1
INFO  04:10:17,766 - #5 ;
INFO  04:10:17,766 - #23 const
INFO  04:10:17,766 - #27 int
INFO  04:10:17,766 - #27 pet
INFO  04:10:17,766 - #12 =
INFO  04:10:17,766 - #26 5
INFO  04:10:17,767 - #5 ;
INFO  04:10:17,767 - #23 const
INFO  04:10:17,767 - #27 char
INFO  04:10:17,767 - #27 pet1
INFO  04:10:17,767 - #12 =
INFO  04:10:17,767 - #28 c
INFO  04:10:17,767 - #5 ;
INFO  04:10:17,767 - #27 int
INFO  04:10:17,768 - #27 niz
INFO  04:10:17,768 - #20 [
INFO  04:10:17,768 - #21 ]
INFO  04:10:17,768 - #8 ,
INFO  04:10:17,768 - #27 niz2
INFO  04:10:17,768 - #20 [
INFO  04:10:17,768 - #21 ]
INFO  04:10:17,768 - #8 ,
INFO  04:10:17,768 - #27 a
INFO  04:10:17,769 - #8 ,
INFO  04:10:17,769 - #27 b
INFO  04:10:17,769 - #5 ;
INFO  04:10:17,769 - #27 char
INFO  04:10:17,769 - #27 nizch
INFO  04:10:17,770 - #20 [
INFO  04:10:17,770 - #21 ]
INFO  04:10:17,770 - #8 ,
INFO  04:10:17,770 - #27 c
INFO  04:10:17,770 - #5 ;
INFO  04:10:17,770 - #27 bool
INFO  04:10:17,770 - #27 s1
INFO  04:10:17,770 - #5 ;
INFO  04:10:17,770 - #3 {
INFO  04:10:17,771 - #13 void
INFO  04:10:17,772 - #27 main
INFO  04:10:17,772 - #6 (
INFO  04:10:17,772 - #7 )
INFO  04:10:17,773 - #27 int
INFO  04:10:17,773 - #27 bodovi
INFO  04:10:17,773 - #5 ;
INFO  04:10:17,773 - #27 bool
INFO  04:10:17,773 - #27 bt
INFO  04:10:17,773 - #5 ;
INFO  04:10:17,773 - #27 int
INFO  04:10:17,773 - #27 s
INFO  04:10:17,774 - #5 ;
INFO  04:10:17,774 - #3 {
INFO  04:10:17,774 - #27 niz
INFO  04:10:17,775 - #12 =
INFO  04:10:17,776 - #32 new
INFO  04:10:17,776 - #27 int
INFO  04:10:17,776 - #20 [
INFO  04:10:17,776 - #26 3
INFO  04:10:17,776 - #21 ]
INFO  04:10:17,777 - #5 ;
INFO  04:10:17,777 - #27 niz
INFO  04:10:17,778 - #20 [
INFO  04:10:17,778 - #27 nula
INFO  04:10:17,778 - #21 ]
INFO  04:10:17,778 - #12 =
INFO  04:10:17,778 - #27 jedan
INFO  04:10:17,778 - #5 ;
INFO  04:10:17,779 - #9 print
INFO  04:10:17,779 - #6 (
INFO  04:10:17,779 - #27 bodovi
INFO  04:10:17,779 - #7 )
INFO  04:10:17,779 - #5 ;
INFO  04:10:17,779 - #9 print
INFO  04:10:17,779 - #6 (
INFO  04:10:17,779 - #27 niz
INFO  04:10:17,780 - #20 [
INFO  04:10:17,780 - #26 2
INFO  04:10:17,780 - #21 ]
INFO  04:10:17,780 - #7 )
INFO  04:10:17,780 - #5 ;
INFO  04:10:17,780 - #4 }
INFO  04:10:17,781 - #4 }
INFO  04:10:17,800 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  04:10:17,801 - ===================================
INFO  04:10:17,836 - Deklarisana je konsanta int nula = 0
INFO  04:10:17,836 - Deklarisana je konsanta int jedan = 1
INFO  04:10:17,836 - Deklarisana je konsanta int pet = 5
INFO  04:10:17,836 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  04:10:17,839 - Deklarisan je niz niz
INFO  04:10:17,840 - Deklarisan je niz niz2
INFO  04:10:17,840 - Deklarisana promenljiva a
INFO  04:10:17,840 - Deklarisana promenljiva b
INFO  04:10:17,841 - Deklarisan je niz nizch
INFO  04:10:17,841 - Deklarisana promenljiva c
INFO  04:10:17,841 - Deklarisana promenljiva s1
INFO  04:10:17,841 - Obradjuje se funkcija main na liniji 12
INFO  04:10:17,842 - Deklarisana promenljiva bodovi
INFO  04:10:17,842 - Deklarisana promenljiva bt
INFO  04:10:17,842 - Deklarisana promenljiva s
INFO  04:10:35,323 - Deklarisana je niz (uz pomoc NEW) na liniji 33
INFO  04:10:52,089 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  04:10:52,177 - #2 program
INFO  04:10:52,177 - #27 MJProgram
INFO  04:10:52,178 - #23 const
INFO  04:10:52,180 - #27 int
INFO  04:10:52,181 - #27 nula
INFO  04:10:52,182 - #12 =
INFO  04:10:52,182 - #26 0
INFO  04:10:52,182 - #5 ;
INFO  04:10:52,183 - #23 const
INFO  04:10:52,183 - #27 int
INFO  04:10:52,183 - #27 jedan
INFO  04:10:52,183 - #12 =
INFO  04:10:52,183 - #26 1
INFO  04:10:52,183 - #5 ;
INFO  04:10:52,184 - #23 const
INFO  04:10:52,184 - #27 int
INFO  04:10:52,184 - #27 pet
INFO  04:10:52,184 - #12 =
INFO  04:10:52,184 - #26 5
INFO  04:10:52,184 - #5 ;
INFO  04:10:52,184 - #23 const
INFO  04:10:52,185 - #27 char
INFO  04:10:52,185 - #27 pet1
INFO  04:10:52,185 - #12 =
INFO  04:10:52,185 - #28 c
INFO  04:10:52,185 - #5 ;
INFO  04:10:52,186 - #27 int
INFO  04:10:52,186 - #27 niz
INFO  04:10:52,186 - #20 [
INFO  04:10:52,186 - #21 ]
INFO  04:10:52,186 - #8 ,
INFO  04:10:52,186 - #27 niz2
INFO  04:10:52,187 - #20 [
INFO  04:10:52,187 - #21 ]
INFO  04:10:52,187 - #8 ,
INFO  04:10:52,187 - #27 a
INFO  04:10:52,187 - #8 ,
INFO  04:10:52,188 - #27 b
INFO  04:10:52,188 - #5 ;
INFO  04:10:52,188 - #27 char
INFO  04:10:52,189 - #27 nizch
INFO  04:10:52,189 - #20 [
INFO  04:10:52,189 - #21 ]
INFO  04:10:52,189 - #8 ,
INFO  04:10:52,189 - #27 c
INFO  04:10:52,190 - #5 ;
INFO  04:10:52,190 - #27 bool
INFO  04:10:52,190 - #27 s1
INFO  04:10:52,190 - #5 ;
INFO  04:10:52,190 - #3 {
INFO  04:10:52,191 - #13 void
INFO  04:10:52,193 - #27 main
INFO  04:10:52,193 - #6 (
INFO  04:10:52,193 - #7 )
INFO  04:10:52,193 - #27 int
INFO  04:10:52,194 - #27 bodovi
INFO  04:10:52,194 - #5 ;
INFO  04:10:52,194 - #27 bool
INFO  04:10:52,194 - #27 bt
INFO  04:10:52,194 - #5 ;
INFO  04:10:52,195 - #27 int
INFO  04:10:52,195 - #27 s
INFO  04:10:52,195 - #5 ;
INFO  04:10:52,195 - #3 {
INFO  04:10:52,195 - #27 niz
INFO  04:10:52,198 - #12 =
INFO  04:10:52,198 - #32 new
INFO  04:10:52,199 - #27 int
INFO  04:10:52,199 - #20 [
INFO  04:10:52,199 - #26 3
INFO  04:10:52,199 - #21 ]
INFO  04:10:52,199 - #5 ;
INFO  04:10:52,200 - #27 niz
INFO  04:10:52,200 - #20 [
INFO  04:10:52,201 - #27 nula
INFO  04:10:52,201 - #21 ]
INFO  04:10:52,201 - #12 =
INFO  04:10:52,201 - #27 jedan
INFO  04:10:52,201 - #5 ;
INFO  04:10:52,202 - #9 print
INFO  04:10:52,202 - #6 (
INFO  04:10:52,202 - #27 bodovi
INFO  04:10:52,202 - #7 )
INFO  04:10:52,202 - #5 ;
INFO  04:10:52,202 - #9 print
INFO  04:10:52,203 - #6 (
INFO  04:10:52,203 - #27 niz
INFO  04:10:52,203 - #20 [
INFO  04:10:52,203 - #26 2
INFO  04:10:52,203 - #21 ]
INFO  04:10:52,203 - #7 )
INFO  04:10:52,204 - #5 ;
INFO  04:10:52,204 - #4 }
INFO  04:10:52,204 - #4 }
INFO  04:10:52,231 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                NoDecl(
                ) [NoDecl]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     nula
                     0
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   jedan
                   1
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 int
                ) [Type]
                ConstDeclNumber(
                 pet
                 5
                ) [ConstDeclNumber]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationConst(
            ConstDeclarations(
              Type(
               char
              ) [Type]
              ConstDeclChar(
               pet1
               c
              ) [ConstDeclChar]
            ) [ConstDeclarations]
          ) [DeclarationConst]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarMul(
              VarItemArr(
               niz
              ) [VarItemArr]
              VarMul(
                VarItemArr(
                 niz2
                ) [VarItemArr]
                VarMul(
                  VarItemIdent(
                   a
                  ) [VarItemIdent]
                  VarOne(
                    VarItemIdent(
                     b
                    ) [VarItemIdent]
                  ) [VarOne]
                ) [VarMul]
              ) [VarMul]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           char
          ) [Type]
          VarMul(
            VarItemArr(
             nizch
            ) [VarItemArr]
            VarOne(
              VarItemIdent(
               c
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarMul]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemIdent(
           s1
          ) [VarItemIdent]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              DesignatorStmt(
                Assignment(
                  DesignatorIDENT(
                   niz
                  ) [DesignatorIDENT]
                  TermExpr(
                    TermFactor(
                      FactorNEW(
                        Type(
                         int
                        ) [Type]
                        TermExpr(
                          TermFactor(
                            FactorNUMBER(
                             3
                            ) [FactorNUMBER]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [FactorNEW]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorIDENT(
                         nula
                        ) [DesignatorIDENT]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermFactor(
                    Var(
                      DesignatorIDENT(
                       jedan
                      ) [DesignatorIDENT]
                    ) [Var]
                  ) [TermFactor]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            PrintStmt(
              TermExpr(
                TermFactor(
                  Var(
                    DesignatorIDENT(
                     bodovi
                    ) [DesignatorIDENT]
                  ) [Var]
                ) [TermFactor]
              ) [TermExpr]
            ) [PrintStmt]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  04:10:52,232 - ===================================
INFO  04:10:52,273 - Deklarisana je konsanta int nula = 0
INFO  04:10:52,274 - Deklarisana je konsanta int jedan = 1
INFO  04:10:52,274 - Deklarisana je konsanta int pet = 5
INFO  04:10:52,274 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  04:10:52,276 - Deklarisan je niz niz
INFO  04:10:52,276 - Deklarisan je niz niz2
INFO  04:10:52,277 - Deklarisana promenljiva a
INFO  04:10:52,277 - Deklarisana promenljiva b
INFO  04:10:52,277 - Deklarisan je niz nizch
INFO  04:10:52,277 - Deklarisana promenljiva c
INFO  04:10:52,277 - Deklarisana promenljiva s1
INFO  04:10:52,278 - Obradjuje se funkcija main na liniji 12
INFO  04:10:52,278 - Deklarisana promenljiva bodovi
INFO  04:10:52,278 - Deklarisana promenljiva bt
INFO  04:10:52,278 - Deklarisana promenljiva s
INFO  04:11:39,365 - Deklarisana je niz (uz pomoc NEW) na liniji 33
