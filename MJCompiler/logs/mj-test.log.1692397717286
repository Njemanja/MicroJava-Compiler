INFO  00:26:22,930 - Compiling source file: C:\Users\Neca\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:26:23,008 - #2 program
INFO  00:26:23,008 - #27 MJProgram
INFO  00:26:23,008 - #23 const
INFO  00:26:23,011 - #27 int
INFO  00:26:23,011 - #27 nula
INFO  00:26:23,012 - #12 =
INFO  00:26:23,013 - #26 0
INFO  00:26:23,013 - #5 ;
INFO  00:26:23,013 - #23 const
INFO  00:26:23,014 - #27 int
INFO  00:26:23,015 - #27 jedan
INFO  00:26:23,015 - #12 =
INFO  00:26:23,015 - #26 1
INFO  00:26:23,015 - #5 ;
INFO  00:26:23,016 - #23 const
INFO  00:26:23,016 - #27 int
INFO  00:26:23,016 - #27 pet
INFO  00:26:23,017 - #12 =
INFO  00:26:23,017 - #26 5
INFO  00:26:23,017 - #5 ;
INFO  00:26:23,019 - #23 const
INFO  00:26:23,019 - #27 char
INFO  00:26:23,019 - #27 pet1
INFO  00:26:23,019 - #12 =
INFO  00:26:23,019 - #28 c
INFO  00:26:23,019 - #5 ;
INFO  00:26:23,019 - #27 int
INFO  00:26:23,019 - #27 niz
INFO  00:26:23,021 - #20 [
INFO  00:26:23,021 - #21 ]
INFO  00:26:23,021 - #8 ,
INFO  00:26:23,021 - #27 niz2
INFO  00:26:23,021 - #20 [
INFO  00:26:23,021 - #21 ]
INFO  00:26:23,021 - #8 ,
INFO  00:26:23,021 - #27 a
INFO  00:26:23,021 - #8 ,
INFO  00:26:23,021 - #27 b
INFO  00:26:23,023 - #5 ;
INFO  00:26:23,023 - #27 char
INFO  00:26:23,024 - #27 nizch
INFO  00:26:23,024 - #20 [
INFO  00:26:23,024 - #21 ]
INFO  00:26:23,024 - #8 ,
INFO  00:26:23,024 - #27 c
INFO  00:26:23,024 - #5 ;
INFO  00:26:23,025 - #27 bool
INFO  00:26:23,025 - #27 s1
INFO  00:26:23,025 - #5 ;
INFO  00:26:23,025 - #27 bool
INFO  00:26:23,025 - #27 nizbool
INFO  00:26:23,025 - #20 [
INFO  00:26:23,025 - #21 ]
INFO  00:26:23,025 - #5 ;
INFO  00:26:23,025 - #3 {
INFO  00:26:23,025 - #13 void
INFO  00:26:23,027 - #27 main
INFO  00:26:23,027 - #6 (
INFO  00:26:23,027 - #7 )
INFO  00:26:23,027 - #27 int
INFO  00:26:23,027 - #27 bodovi
INFO  00:26:23,027 - #5 ;
INFO  00:26:23,029 - #27 bool
INFO  00:26:23,029 - #27 bt
INFO  00:26:23,029 - #5 ;
INFO  00:26:23,029 - #27 int
INFO  00:26:23,029 - #27 s
INFO  00:26:23,029 - #5 ;
INFO  00:26:23,029 - #3 {
INFO  00:26:23,030 - #27 niz
INFO  00:26:23,030 - #12 =
INFO  00:26:23,030 - #32 new
INFO  00:26:23,030 - #27 int
INFO  00:26:23,030 - #20 [
INFO  00:26:23,031 - #26 3
INFO  00:26:23,031 - #21 ]
INFO  00:26:23,031 - #5 ;
INFO  00:26:23,031 - #27 niz
INFO  00:26:23,032 - #20 [
INFO  00:26:23,032 - #27 nula
INFO  00:26:23,032 - #21 ]
INFO  00:26:23,034 - #12 =
INFO  00:26:23,034 - #27 jedan
INFO  00:26:23,034 - #5 ;
INFO  00:26:23,034 - #27 niz
INFO  00:26:23,034 - #20 [
INFO  00:26:23,034 - #26 1
INFO  00:26:23,034 - #21 ]
INFO  00:26:23,034 - #12 =
INFO  00:26:23,034 - #26 2
INFO  00:26:23,034 - #5 ;
INFO  00:26:23,034 - #27 niz
INFO  00:26:23,034 - #20 [
INFO  00:26:23,034 - #27 niz
INFO  00:26:23,034 - #20 [
INFO  00:26:23,034 - #27 jedan
INFO  00:26:23,035 - #21 ]
INFO  00:26:23,035 - #21 ]
INFO  00:26:23,035 - #12 =
INFO  00:26:23,035 - #27 niz
INFO  00:26:23,035 - #20 [
INFO  00:26:23,035 - #27 niz
INFO  00:26:23,035 - #20 [
INFO  00:26:23,035 - #26 0
INFO  00:26:23,037 - #21 ]
INFO  00:26:23,037 - #21 ]
INFO  00:26:23,037 - #14 *
INFO  00:26:23,037 - #26 3
INFO  00:26:23,038 - #5 ;
INFO  00:26:23,038 - #27 bt
INFO  00:26:23,038 - #12 =
INFO  00:26:23,038 - #27 niz
INFO  00:26:23,038 - #24 .
INFO  00:26:23,038 - #25 findAny
INFO  00:26:23,039 - #6 (
INFO  00:26:23,039 - #26 1
INFO  00:26:23,039 - #7 )
INFO  00:26:23,039 - #5 ;
INFO  00:26:23,039 - #9 print
INFO  00:26:23,039 - #6 (
INFO  00:26:23,039 - #27 niz
INFO  00:26:23,040 - #20 [
INFO  00:26:23,040 - #26 2
INFO  00:26:23,040 - #21 ]
INFO  00:26:23,040 - #7 )
INFO  00:26:23,041 - #5 ;
INFO  00:26:23,041 - #4 }
INFO  00:26:23,041 - #4 }
INFO  00:26:23,053 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  DeclarationL(
    DeclarationL(
      DeclarationL(
        DeclarationL(
          DeclarationL(
            DeclarationL(
              DeclarationL(
                DeclarationL(
                  NoDecl(
                  ) [NoDecl]
                  DeclarationConst(
                    ConstDeclarations(
                      Type(
                       int
                      ) [Type]
                      ConstDeclNumber(
                       nula
                       0
                      ) [ConstDeclNumber]
                    ) [ConstDeclarations]
                  ) [DeclarationConst]
                ) [DeclarationL]
                DeclarationConst(
                  ConstDeclarations(
                    Type(
                     int
                    ) [Type]
                    ConstDeclNumber(
                     jedan
                     1
                    ) [ConstDeclNumber]
                  ) [ConstDeclarations]
                ) [DeclarationConst]
              ) [DeclarationL]
              DeclarationConst(
                ConstDeclarations(
                  Type(
                   int
                  ) [Type]
                  ConstDeclNumber(
                   pet
                   5
                  ) [ConstDeclNumber]
                ) [ConstDeclarations]
              ) [DeclarationConst]
            ) [DeclarationL]
            DeclarationConst(
              ConstDeclarations(
                Type(
                 char
                ) [Type]
                ConstDeclChar(
                 pet1
                 c
                ) [ConstDeclChar]
              ) [ConstDeclarations]
            ) [DeclarationConst]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarMul(
                VarItemArr(
                 niz
                ) [VarItemArr]
                VarMul(
                  VarItemArr(
                   niz2
                  ) [VarItemArr]
                  VarMul(
                    VarItemIdent(
                     a
                    ) [VarItemIdent]
                    VarOne(
                      VarItemIdent(
                       b
                      ) [VarItemIdent]
                    ) [VarOne]
                  ) [VarMul]
                ) [VarMul]
              ) [VarMul]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             char
            ) [Type]
            VarMul(
              VarItemArr(
               nizch
              ) [VarItemArr]
              VarOne(
                VarItemIdent(
                 c
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarMul]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      DeclarationVar(
        VarDeclarations(
          Type(
           bool
          ) [Type]
          VarOne(
            VarItemIdent(
             s1
            ) [VarItemIdent]
          ) [VarOne]
        ) [VarDeclarations]
      ) [DeclarationVar]
    ) [DeclarationL]
    DeclarationVar(
      VarDeclarations(
        Type(
         bool
        ) [Type]
        VarOne(
          VarItemArr(
           nizbool
          ) [VarItemArr]
        ) [VarOne]
      ) [VarDeclarations]
    ) [DeclarationVar]
  ) [DeclarationL]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      DeclarationL(
        DeclarationL(
          DeclarationL(
            NoDecl(
            ) [NoDecl]
            DeclarationVar(
              VarDeclarations(
                Type(
                 int
                ) [Type]
                VarOne(
                  VarItemIdent(
                   bodovi
                  ) [VarItemIdent]
                ) [VarOne]
              ) [VarDeclarations]
            ) [DeclarationVar]
          ) [DeclarationL]
          DeclarationVar(
            VarDeclarations(
              Type(
               bool
              ) [Type]
              VarOne(
                VarItemIdent(
                 bt
                ) [VarItemIdent]
              ) [VarOne]
            ) [VarDeclarations]
          ) [DeclarationVar]
        ) [DeclarationL]
        DeclarationVar(
          VarDeclarations(
            Type(
             int
            ) [Type]
            VarOne(
              VarItemIdent(
               s
              ) [VarItemIdent]
            ) [VarOne]
          ) [VarDeclarations]
        ) [DeclarationVar]
      ) [DeclarationL]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStmt(
                    Assignment(
                      DesignatorIDENT(
                       niz
                      ) [DesignatorIDENT]
                      TermExpr(
                        TermFactor(
                          FactorNEW(
                            Type(
                             int
                            ) [Type]
                            TermExpr(
                              TermFactor(
                                FactorNUMBER(
                                 3
                                ) [FactorNUMBER]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [FactorNEW]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [Assignment]
                  ) [DesignatorStmt]
                ) [Statements]
                DesignatorStmt(
                  Assignment(
                    DesignatorExpr(
                     niz
                      TermExpr(
                        TermFactor(
                          Var(
                            DesignatorIDENT(
                             nula
                            ) [DesignatorIDENT]
                          ) [Var]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignatorExpr]
                    TermExpr(
                      TermFactor(
                        Var(
                          DesignatorIDENT(
                           jedan
                          ) [DesignatorIDENT]
                        ) [Var]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [Assignment]
                ) [DesignatorStmt]
              ) [Statements]
              DesignatorStmt(
                Assignment(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         1
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                  TermExpr(
                    TermFactor(
                      FactorNUMBER(
                       2
                      ) [FactorNUMBER]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [Assignment]
              ) [DesignatorStmt]
            ) [Statements]
            DesignatorStmt(
              Assignment(
                DesignatorExpr(
                 niz
                  TermExpr(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         niz
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorIDENT(
                                 jedan
                                ) [DesignatorIDENT]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [DesignatorExpr]
                TermExpr(
                  TermMulop(
                    TermFactor(
                      Var(
                        DesignatorExpr(
                         niz
                          TermExpr(
                            TermFactor(
                              Var(
                                DesignatorExpr(
                                 niz
                                  TermExpr(
                                    TermFactor(
                                      FactorNUMBER(
                                       0
                                      ) [FactorNUMBER]
                                    ) [TermFactor]
                                  ) [TermExpr]
                                ) [DesignatorExpr]
                              ) [Var]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [DesignatorExpr]
                      ) [Var]
                    ) [TermFactor]
                    MulopMUL(
                    ) [MulopMUL]
                    FactorNUMBER(
                     3
                    ) [FactorNUMBER]
                  ) [TermMulop]
                ) [TermExpr]
              ) [Assignment]
            ) [DesignatorStmt]
          ) [Statements]
          MatchedStmt(
            StatementFindAll(
              DesignatorIDENT(
               bt
              ) [DesignatorIDENT]
              DesignatorIDENT(
               niz
              ) [DesignatorIDENT]
              TermExpr(
                TermFactor(
                  FactorNUMBER(
                   1
                  ) [FactorNUMBER]
                ) [TermFactor]
              ) [TermExpr]
            ) [StatementFindAll]
          ) [MatchedStmt]
        ) [Statements]
        MatchedStmt(
          PrintStmt(
            TermExpr(
              TermFactor(
                Var(
                  DesignatorExpr(
                   niz
                    TermExpr(
                      TermFactor(
                        FactorNUMBER(
                         2
                        ) [FactorNUMBER]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignatorExpr]
                ) [Var]
              ) [TermFactor]
            ) [TermExpr]
            NoConst(
            ) [NoConst]
          ) [PrintStmt]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:26:23,054 - ===================================
INFO  00:26:23,057 - Deklarisana je konsanta int nula = 0
INFO  00:26:23,057 - Deklarisana je konsanta int jedan = 1
INFO  00:26:23,057 - Deklarisana je konsanta int pet = 5
INFO  00:26:23,058 - Deklarisana je konsanta char pet1 = 99 na liniji 6
INFO  00:26:23,058 - Deklarisan je niz niz
INFO  00:26:23,058 - Deklarisan je niz niz2
INFO  00:26:23,058 - Deklarisana promenljiva a
INFO  00:26:23,058 - Deklarisana promenljiva b
INFO  00:26:23,058 - Deklarisan je niz nizch
INFO  00:26:23,058 - Deklarisana promenljiva c
INFO  00:26:23,058 - Deklarisana promenljiva s1
INFO  00:26:23,058 - Deklarisan je niz nizbool
INFO  00:26:23,058 - Obradjuje se funkcija main na liniji 13
INFO  00:26:23,058 - Deklarisana promenljiva bodovi
INFO  00:26:23,059 - Deklarisana promenljiva bt
INFO  00:26:23,059 - Deklarisana promenljiva s
INFO  00:26:23,059 - Deklarisana je niz (uz pomoc NEW) na liniji 30
INFO  00:26:23,059 -  Print count calls = 1
INFO  00:26:23,059 -  Deklarisanih promenljivih ima = 12
INFO  00:26:23,059 - ===================================
INFO  00:26:23,067 - Parsiranje uspesno zavrseno!
